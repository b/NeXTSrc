.\" Copyright (c) 1980 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
.\"
.\"	@(#)nm.1	6.1 (Berkeley) 4/29/85
.\"
.TH NM 1 "March 14, 1990"
.UC 4
.SH NAME
nm \- print name list
.SH SYNOPSIS
.B nm
[
.B \-agnoprumxjl[s segname sectname]
]
[ file ... ]
.SH DESCRIPTION
.I Nm
prints the name list (symbol table) of each object
.I file
in the argument list.  If an argument is an archive, a listing for each object
file in the archive will be produced.  
.I File
can be of the form libx.a(x.o) and then only symbols from that member of the
object file are listed (the (\|)'s have to be quoted to get by the shell).
If no
.I file
is given, the symbols in "a.out" are listed.
.PP
Each symbol name is preceded by its value (blanks if undefined).
Then if the
.B \-m
option is not specified
one of the letters
.SM
.B U
(undefined),
.SM
.B A
(absolute),
.SM
.B  T
(text section symbol),
.SM
.B D
(data section symbol),
.SM
.B B
(bss section symbol),
.SM
.B C
(common symbol),
.SM
.B f
file name,
.B \-
for debugger symbol table entries (see
.B \-a
below),
.SM
.B S
(symbol in a section other than those above)
or
.SM
.B I
(indirect symbol)
is printed for the symbol type.
If the symbol is local (non-external) the type letter is in lower case.
.PP
If the symbol is a Objective-C method the symbol name is printed as
.BI \(+-[ "Class_name(category_name)" " " "method:name:" "]"
where a `+' is used for class methods and a `\-' is used for instance methods
and
.I (category_name)
is only printed if the method is in a category.
The output is sorted alphabetically.
.PP
Options are:
.TP
.B  \-a
Print all symbol table entries including those inserted for use by debuggers.
.TP
.B  \-g
Print only global (external) symbols.
.TP
.B \-n
Sort numerically rather than alphabetically.
.TP
.B  \-o
Prepend file or archive element name to each output line rather than only once.
.TP
.B  \-p
Don't sort; print in symbol-table order.
.TP
.B  \-r
Sort in reverse order.
.TP
.B  \-u
Print only undefined symbols.
.TP
.B  \-m
Print the N_SECT type symbols (Mach-O symbols) as
.RI ( "segment_name, section_name" )
followed by either
.I external
or
.I non-external
and then the symbol name.
Also undefined, common, absolute and indirect symbols get printed as
.I (undefined),
.I (common)
.I (absolute)
and
.I (indirect)
respectively.
.TP
.B \-x
Print the symbol table entry's fields in hex along with the name as a string.
.TP
.B \-z
Don't print Objective-C method names instead print the compiler generated
symbol names.
.TP
.B \-j
Just print the symbol names (no value or type).
.TP
.BI \-s " segname sectname"
List only those symbols in the section
.I (segname,sectname).
.TP
.B \-l
List a pseudo symbol
.I .section_start
if no symbol has the value of the start of the section (used with the
.B \-s
option above).

.SH SEE ALSO
ar(1), ar(5), Mach-O(5), stab(5), nlist(3)
.SH BUGS
Printing Mach-O symbols with
.B \-m
is too verbose.  Without the 
.B \-m
symbols in the Objective-C sections type's get printed as an `s'.
