head     1.2;
access   ;
symbols  ;
locks    osdev:1.2; strict;
comment  @# @;


1.2
date     89.06.23.15.39.17;  author osdev;  state Exp;
branches ;
next     1.1;

1.1
date     89.06.23.15.39.02;  author osdev;  state Exp;
branches ;
next     ;


desc
@Original version
.
@


1.2
log
@Changes for localhost doing a BuildDisk
@
text
@#! /bin/csh -f
#
# newclient
#
# A NetBoot client building script brought to you by NeXT, Inc. -
# maker of the handy, dandy NeXT Computer System.
#
# Copyright (c) 1988, NeXT, Inc.
#
# Usage:
#	"newclient -p DISKTYPE TEMPLATE DEST" Standalone Private
#	"newclient [-s SERVER] CLIENT-1 ... CLIENT-n" Clients
#

#
# Constants
#
set TESTDIR
set CLIENTDIR=${TESTDIR}/clients
set template=${TESTDIR}/usr/template/client
set HOSTFILE=${TESTDIR}/etc/hosts
set BOOTPTAB=${TESTDIR}/etc/bootptab

# We are the default server
set server=`hostname`

# Are we root?
if ( `whoami` != root ) then
	echo "You must be root to run $0"
	exit(1)
endif

# Preliminary argument checkout
if ( $#argv < 1 ) then
	goto usage
endif

# Switches must be at argv[1]
foreach arg ( $argv[2-] )
	if ( x$arg =~ x-* ) then
		goto usage
	endif
end

# Parse the switches
if ( $argv[1] == -p ) then
	if ( $#argv != 4 ) then
		goto usage
	endif
	set PrivateMode
	set disktype=$argv[2]
	set template=$argv[3]
	set dest=$argv[4]

	# Check that the disk type is valid
	if ( ! -e $template/etc/fstab.$disktype ) then
		echo "Unkown disk type"
		exit(1)
	endif
else if ( $argv[1] == -s ) then
	if ( $#argv < 3 ) then
		goto usage
	endif
	set server=$argv[2]
	shift
	shift
else if ( $argv[1] =~ -* ) then
	goto usage
endif

# Make sure we have a template to work with
if ( ! -d $template ) then
	echo "New client template $template does not exist"
	exit(1)
endif

# Process the private partition if that is the mode we are in.
if ( $?PrivateMode ) then
	if ( -e $dest ) then
		echo "$dest already exists"
		exit(1)
	endif

	# Create the destination directory
	echo -n "Creating ${dest}..."
	mkdir $dest
	chmod 775 $dest
	chown root.staff $dest
	if ( $status != 0 ) then
		echo "failed"
		exit(1)
	endif
	echo "[OK]"

	# Copy the template into it
	echo -n "Copying ${template} into ${dest}..."
	(cd $template; tar cf - .)|(cd $dest; tar xpBf -)
	echo "[OK]"

	# Make the device files
	echo -n "Making devices in ${dest}/dev..."
	(cd ${dest}/dev; /usr/etc/MAKEDEV NeXT)
	echo "[OK]"

	# Customize the fstab file
	echo -n "Installing fstab.$disktype as ${dest}/etc/fstab..."
	cp -p $dest/etc/fstab.${disktype} $dest/etc/fstab
	if ( $status != 0 ) then
		echo "failed"
		exit(1)
	endif
	echo "[OK]"

	# Touch the first 16 Meg of the swapfile
	echo -n "Preallocating swapfile blocks..."
	(cd ${dest}/vm; /bin/rm -f swapfile; /usr/etc/mkfile 16m swapfile)
	echo "[OK]"

	exit(0)
endif

#
# If we get here, then we are building a list of clients
#

echo $argv[*]
foreach client ( $argv[*] )
	if ( $server == localhost ) then
		echo "This machine can't be a server until it is given a hostname"
		exit(1)
	endif
	set dest=$CLIENTDIR/$client

	# Check for already existing client directory
	if ( -e $dest ) then
		echo $dest already exists
		continue
	endif

	# Set up the clients IP address.
	set lclinet=(`grep $client $HOSTFILE`)
	if ( $#lclinet == 0 ) then
		echo -n "$client is not known in $HOSTFILE..."
		foreach i ( 1 2 3 4 5 6 7 8 )
			set lclinet=(`grep client$i $HOSTFILE`)
			if ( $#lclinet == 0 ) then
				continue
			endif
			echo "shall we assign it"
			echo "	" $lclinet
			echo -n "[y/n]? "
			set answer=$<
			if ( $answer =~ [yY]* ) then
				echo "Assigning $lclinet[1] to $client"
			else
				break;
			endif				
			# We get here if we are going to assign an address
			sed -e "/client$i/s//$client/g" $HOSTFILE > /tmp/newclient.hosts
			cat /tmp/newclient.hosts > $HOSTFILE
			rm /tmp/newclient.hosts
			break
		end
		if ( $#lclinet == 0 ) then
			echo "skipping"
			continue
		endif
	endif

	# Now check the bootptab
	if ( ! -e $BOOTPTAB ) then
		echo "No bootptab.  You will need to create this to boot your new client."
	else
		set lclbootp=( `grep $client $BOOTPTAB` )
		if ( $#lclbootp == 0 ) then
			echo "$client not found in bootptab.  You will need to fix"
			echo "this to be able to boot it."
		endif
	endif

	# Create the destination directory
	echo -n "Creating $dest..."
	mkdirs -m 775 -o root -g staff $dest
	if ( $status != 0 ) then
		echo "failed"
		exit(1)
	endif
	echo "[OK]"

	# Copy the template into it.
	echo -n "Copying $template into ${dest}..."
	(cd $template; tar cf - .)|(cd $dest; tar xpBf -)
	echo "[OK]"

	# Make the device files
	echo -n "Making devices in ${dest}/dev..."
	(cd $dest/dev; /usr/etc/MAKEDEV NeXT)
	echo "[OK]"

	# Customize the fstab file
	echo -n "Installing fstab.client as ${dest}/etc/fstab..."
	cp -p $dest/etc/fstab.client $dest/etc/fstab
	sed -e "s/SERVER/$server/g" -e "s/CLIENT/$client/g" $dest/etc/fstab.client > $dest/etc/fstab
	if ( $status != 0 ) then
		echo $failed
		exit(1)
	endif
	echo "[OK]"

	# Touch the first 16 Meg of the swapfile
	echo -n "Preallocating swapfile blocks..."
	(cd ${dest}/vm; /bin/rm -f swapfile; /usr/etc/mkfile 16m swapfile)
	echo "[OK]"

end

exit(0)

usage:
	echo "Usage: $0 -p DISKTYPE TEMPLATE DEST"
	echo "       $0 [-s SERVER] CLIENT CLIENT ..."
	exit(1)
@


1.1
log
@Initial revision
@
text
@a25 4
if ( $server == localhost ) then
	echo "This machine can't be a server until it is given a hostname"
	exit(1)
endif
d128 4
d220 1
a220 1
	echo "Usage: $0 -p DISKTYPE DEVROOT"
@
