head     1.2;
access   ;
symbols  ;
locks    mmeyer:1.2; strict;
comment  @ * @;


1.2
date     89.05.09.13.39.44;  author mmeyer;  state Exp;
branches ;
next     1.1;

1.1
date     89.05.09.12.25.01;  author mmeyer;  state Exp;
branches ;
next     ;


desc
@Original version.
MAM 5/9/89
@


1.2
log
@Ifdef of inet_makeaddr.
MAM 5/9/89
@
text
@/*
 * Copyright (c) 1983 Regents of the University of California.
 * All rights reserved.  The Berkeley software License Agreement
 * specifies the terms and conditions for redistribution.
 *
 *	@@(#)defs.h	5.3 (Berkeley) 5/30/86
 */

/*
 * Internal data structure definitions for
 * user routing process.  Based on Xerox NS
 * protocol specs with mods relevant to more
 * general addressing scheme.
 */
#include <sys/types.h>
#include <sys/socket.h>

#include <net/route.h>
#include <netinet/in.h>
#include <protocols/routed.h>

#include <stdio.h>
#include <netdb.h>

#include "trace.h"
#include "interface.h"
#include "table.h"
#include "af.h"

/*
 * When we find any interfaces marked down we rescan the
 * kernel every CHECK_INTERVAL seconds to see if they've
 * come up.
 */
#define	CHECK_INTERVAL	(1*60)

#define equal(a1, a2) \
	(bcmp((caddr_t)(a1), (caddr_t)(a2), sizeof (struct sockaddr)) == 0)
#define	min(a,b)	((a)>(b)?(b):(a))

struct	sockaddr_in addr;	/* address of daemon's socket */

int	s;			/* source and sink of all data */
int	kmem;
int	supplier;		/* process should supply updates */
int	install;		/* if 1 call kernel */
int	lookforinterfaces;	/* if 1 probe kernel for new up interfaces */
int	performnlist;		/* if 1 check if /vmunix has changed */
int	externalinterfaces;	/* # of remote and local interfaces */
int	timeval;		/* local idea of time */

char	packet[MAXPACKETSIZE+1];
struct	rip *msg;

char	**argv0;
struct	servent *sp;

extern	char *sys_errlist[];
extern	int errno;

#ifdef NeXT_MOD
struct	in_addr routed_inet_makeaddr();
#else
struct	in_addr inet_makeaddr();
#endif NeXT_MOD

int	inet_addr();
char	*malloc();
int	exit();
int	sendmessage();
int	supply();
int	timer();
int	cleanup();
@


1.1
log
@Initial revision
@
text
@d61 3
d65 2
@
