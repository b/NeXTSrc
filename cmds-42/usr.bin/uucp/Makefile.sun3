#
# Generic top-level makefile for multi-file commands
# (c) NeXT, Inc.  1987
#
#	Makefile	5.11	85/12/12
#
# This version expects the 4.2BSD directory reading routines to
# located in libc.a.  If they aren't, augment LIBS.  Also, LIBS
# can be set to reference other object modules and libraries needed
# by uucico, such as -lunet (needed when UNET is defined).
#
# Common object files are assembled into a library {uulib.a}
#
CDEFS= -bsd -DNeXT_MOD
# CFLAGS=	-O -fwritable-strings $(CDEFS)
CFLAGS=	-O 
IFLAGS= -s
LIBS=
VERS_STRING=./vers_string

OWNER=	uucp
GROUP=	daemon

DSTDIR= $(DSTROOT)/bootdisk/NeXT/Unix
CONFDIR= $(DSTROOT)/bootdisk/Administration/template/conf
TBLDIR= $(DSTROOT)/bootdisk/Administration/template/tables
USRDIR= $(DSTDIR)/usr
LIBDIR= $(DSTDIR)/usr/lib
ULIBDIR=$(LIBDIR)/uucp
BINDIR=	$(DSTDIR)/usr/bin
ETCDIR=	$(DSTDIR)/etc
SPOOLDIR= $(DSTROOT)/bootdisk/Administration/template/spool
SPOOL=	${SPOOLDIR}/uucp

# HOSTNAME=`hostname | sed 's/\(.......\).*/\1/'`
HOSTNAME=YourNameHere

PRODUCTS= uucico uucp uux uuxqt uulog uuclean uuname uupoll uusnap \
	uuencode uudecode uusend uucpd uuq

# this is a gawdawful hack
#	acucntrl

DSTDIRS777= \
	${SPOOLDIR}/uucppublic \
	${SPOOL}/LCK

DSTDIRS755= \
	${ULIBDIR} \
	${SPOOL} \
	${SPOOL}/XTMP \
	${SPOOL}/CORRUPT \
	${SPOOL}/AUDIT \
	${SPOOL}/STST \
	${SPOOL}/LOG \
	${SPOOL}/LOG/uucico \
	${SPOOL}/LOG/uux \
	${SPOOL}/LOG/uuxqt \
	${SPOOL}/LOG/uucp \
	${SPOOL}/LOG/xferstats \
	${SPOOL}/C. \
	${SPOOL}/D. \
	${SPOOL}/X. \
	${SPOOL}/TM.

HOSTDIRS= \
	${SPOOL}/D.${HOSTNAME}X \
	${SPOOL}/D.${HOSTNAME}

DSTDIRSMISC= \
	${USRDIR} \
	${ETCDIR} \
	${LIBDIR} \
	${BINDIR} \
	${CONFDIR} \
	${TBLDIR} \
	${SPOOLDIR}

#
# Expect the last 2 above directories to be made each time since
# hostname has to be evaluated anew each time.
#

DSTDIRS= ${DSTDIRSMISC} ${DSTDIRS755} ${DSTDIRS777} \
	${ULIBDIR}/UUAIDS ${HOSTDIRS}

HFILES= condevs.h pk.h uucp.h uust.h uusub.h
CFILES= anlwrk.c anyread.c assert.c cfgets.c chkpth.c \
	chksum.c cico.c cntrl.c condevs.c conn.c cpmv.c expfile.c \
	fio.c gename.c getargs.c getprm.c getpwinfo.c getwd.c gio.c \
	gnamef.c gnsys.c gnxseq.c imsg.c index.c ioctl.c lastpart.c \
	logent.c mailst.c mkdir.c pk0.c pk1.c prefix.c setline.c strpbrk.c \
	subdir.c sysacct.c systat.c tio.c ulockf.c uuclean.c uucp.c \
	uucpd.c uucpdefs.c uucpname.c uudecode.c uuencode.c uulog.c \
	uuname.c uupoll.c uuq.c uusend.c uusnap.c uux.c uuxqt.c versys.c \
	xqt.c
#	acucntrl.c
SFILES=
YFILES=
SRCS=	${HFILES} ${YFILES} ${CFILES} ${SFILES}

DERIVED=
GARBAGE= TAGS tags *_vers.c uulib.a

all:	${PRODUCTS}

#
# Building uucp
#
UUCP_OBJS= uucp.o uulib.a

uucp.NEW:	${UUCP_OBJS} uucp_vers.o
	$(CC) $(CFLAGS) -o $@ ${UUCP_OBJS} uucp_vers.o ${LIBS}

uucp_vers.c: ${DOVERS} ${UUCP_OBJS}
	@rm -f $@
	$(VERS_STRING) -c uucp > $@

#
# Building uux
#
UUX_OBJS= uux.o uulib.a

uux.NEW:	${UUX_OBJS} uux_vers.o
	$(CC) $(CFLAGS) -o $@ ${UUX_OBJS} uux_vers.o ${LIBS}

uux_vers.c: ${DOVERS} ${UUX_OBJS}
	@rm -f $@
	$(VERS_STRING) -c uux > $@

#
# Building uuxqt
#
UUXQT_OBJS= uuxqt.o uulib.a

uuxqt.NEW:	${UUXQT_OBJS} uuxqt_vers.o
	$(CC) $(CFLAGS) -o $@ ${UUXQT_OBJS} uuxqt_vers.o ${LIBS}

uuxqt_vers.c: ${DOVERS} ${UUXQT_OBJS}
	@rm -f $@
	$(VERS_STRING) -c uuxqt > $@

#
# Building uucico
#
UUCICO_OBJS= cico.o cntrl.o conn.o condevs.o gnsys.o pk0.o chksum.o \
	pk1.o tio.o fio.o gio.o imsg.o uulib.a aculib/aculib.a

uucico.NEW:	${UUCICO_OBJS} uucico_vers.o
	$(CC) $(CFLAGS) -o $@ ${UUCICO_OBJS} uucico_vers.o ${LIBS}

uucico_vers.c: ${DOVERS} ${UUCICO_OBJS}
	@rm -f $@
	$(VERS_STRING) -c uucico > $@

#
# Building uulog
#
UULOG_OBJS= uulog.o uulib.a

uulog.NEW:	${UULOG_OBJS} uulog_vers.o
	$(CC) $(CFLAGS) -o $@ ${UULOG_OBJS} uulog_vers.o ${LIBS}

uulog_vers.c: ${DOVERS} ${UULOG_OBJS}
	@rm -f $@
	$(VERS_STRING) -c uulog > $@

#
# Building uuclean
#
UUCLEAN_OBJS= uuclean.o uulib.a

uuclean.NEW:	${UUCLEAN_OBJS} uuclean_vers.o
	$(CC) $(CFLAGS) -o $@ ${UUCLEAN_OBJS} uuclean_vers.o ${LIBS}

uuclean_vers.c: ${DOVERS} ${UUCLEAN_OBJS}
	@rm -f $@
	$(VERS_STRING) -c uuclean > $@

#
# Building uuname
#
UUNAME_OBJS= uuname.o uulib.a

uuname.NEW:	${UUNAME_OBJS} uuname_vers.o
	$(CC) $(CFLAGS) -o $@ ${UUNAME_OBJS} uuname_vers.o ${LIBS}

uuname_vers.c: ${DOVERS} ${UUNAME_OBJS}
	@rm -f $@
	$(VERS_STRING) -c uuname > $@

#
# Building uupoll
#
UUPOLL_OBJS= uupoll.o uulib.a

uupoll.NEW:	${UUPOLL_OBJS} uupoll_vers.o
	$(CC) $(CFLAGS) -o $@ ${UUPOLL_OBJS} uupoll_vers.o ${LIBS}

uupoll_vers.c: ${DOVERS} ${UUPOLL_OBJS}
	@rm -f $@
	$(VERS_STRING) -c uupoll > $@

#
# Building uusnap
#
UUSNAP_OBJS= uusnap.o

uusnap.NEW:	${UUSNAP_OBJS} uusnap_vers.o
	$(CC) $(CFLAGS) -o $@ ${UUSNAP_OBJS} uusnap_vers.o ${LIBS}

uusnap_vers.c: ${DOVERS} ${UUSNAP_OBJS}
	@rm -f $@
	$(VERS_STRING) -c uusnap > $@

#
# Building uuencode
#
UUENCODE_OBJS= uuencode.o

uuencode.NEW:	${UUENCODE_OBJS} uuencode_vers.o
	$(CC) $(CFLAGS) -o $@ ${UUENCODE_OBJS} uuencode_vers.o ${LIBS}

uuencode_vers.c: ${DOVERS} ${UUENCODE_OBJS}
	@rm -f $@
	$(VERS_STRING) -c uuencode > $@

uudecode: uudecode.o
	${CC} -o uudecode ${LDFLAGS} uudecode.o ${LIBS}
#
# Building uudecode
#
UUDECODE_OBJS= uudecode.o

uudecode.NEW:	${UUDECODE_OBJS} uudecode_vers.o
	$(CC) $(CFLAGS) -o $@ ${UUDECODE_OBJS} uudecode_vers.o ${LIBS}

uudecode_vers.c: ${DOVERS} ${UUDECODE_OBJS}
	@rm -f $@
	$(VERS_STRING) -c uudecode > $@

#
# Building uusend
#
UUSEND_OBJS= uusend.o uulib.a

uusend.NEW:	${UUSEND_OBJS} uusend_vers.o
	$(CC) $(CFLAGS) -o $@ ${UUSEND_OBJS} uusend_vers.o ${LIBS}

uusend_vers.c: ${DOVERS} ${UUSEND_OBJS}
	@rm -f $@
	$(VERS_STRING) -c uusend > $@

#
# Building uucpd
#
UUCPD_OBJS= uucpd.o

uucpd.NEW:	${UUCPD_OBJS} uucpd_vers.o
	$(CC) $(CFLAGS) -o $@ ${UUCPD_OBJS} uucpd_vers.o ${LIBS}

uucpd_vers.c: ${DOVERS} ${UUCPD_OBJS}
	@rm -f $@
	$(VERS_STRING) -c uucpd > $@

#
# Building uuq
#
UUQ_OBJS= uuq.o uulib.a

uuq.NEW:	${UUQ_OBJS} uuq_vers.o
	$(CC) $(CFLAGS) -o $@ ${UUQ_OBJS} uuq_vers.o ${LIBS}

uuq_vers.c: ${DOVERS} ${UUQ_OBJS}
	@rm -f $@
	$(VERS_STRING) -c uuq > $@

#
# Building acucntrl
#
ACUCNTRL_OBJS= acucntrl.o

acucntrl.NEW:	${ACUCNTRL_OBJS} acucntrl_vers.o
	$(CC) $(CFLAGS) -o $@ ${ACUCNTRL_OBJS} acucntrl_vers.o ${LIBS}

acucntrl_vers.c: ${DOVERS} ${ACUCNTRL_OBJS}
	@rm -f $@
	$(VERS_STRING) -c acucntrl > $@

#
# Building uulib.a
#
# The lorder...tsort below is for systems w/o ranlib
# But it doesnt hurt to use it. Ignore the spurious "cycle" messages
#
UULIB_OBJS= anlwrk.o anyread.o assert.o cfgets.o chkpth.o \
	cpmv.o expfile.o gename.o getargs.o getprm.o \
	getpwinfo.o gnamef.o gnxseq.o lastpart.o logent.o mailst.o \
	prefix.o setline.o strpbrk.o subdir.o sysacct.o systat.o \
	ulockf.o uucpname.o versys.o xqt.o uucpdefs.o

uulib.a: ${UULIB_OBJS} uulib_vers.o
	rm -f $@
	ar cr $@ `lorder ${UULIB_OBJS} uulib_vers.o | tsort`
	ranlib $@

uulib_vers.c: ${DOVERS} ${UULIB_OBJS}
	@rm -f $@
	$(VERS_STRING) -l uulib > $@

#
# Building aculib.a
#
aculib/aculib.a:
	cd aculib; $(MAKE) $(MFLAGS)

#
# Standard targets
#
${PRODUCTS}:	.depend_done $$@.NEW

clean:	ALWAYS
	cd aculib; $(MAKE) ${MFLAGS} clean
	-rm -f *.o *.NEW tags err.out errs
	-rm -f ${PRODUCTS} ${DERIVED} ${GARBAGE}
	-rm -f Makedep .depend_done
	touch Makedep

install: DSTROOT all ${DSTDIRS} \
	${ULIBDIR}/uucico \
	${ULIBDIR}/uuclean \
	${ULIBDIR}/uuxqt \
	${ULIBDIR}/SEQF \
	${ULIBDIR}/USERFILE \
	${ULIBDIR}/L.sys \
	${ULIBDIR}/L.cmds \
	${ULIBDIR}/L.aliases \
	${ULIBDIR}/L-devices \
	${ULIBDIR}/L-dialcodes \
	${ULIBDIR}/Notes.L.sys \
	${BINDIR}/uucp \
	${BINDIR}/uux \
	${BINDIR}/uulog \
	${BINDIR}/uuname \
	${BINDIR}/uusnap \
	${BINDIR}/uupoll \
	${BINDIR}/uuq \
	${BINDIR}/uusend \
	${BINDIR}/ruusend \
	${BINDIR}/uuencode \
	${BINDIR}/uudecode \
	${ETCDIR}/uucp \
	${ETCDIR}/uucpd

${BINDIR}/ruusend:
	rm -f ${BINDIR}/ruusend
	ln ${BINDIR}/uusend ${BINDIR}/ruusend

${ULIBDIR}/SEQF:
	rm -f $@
	ln -s ../../../../../Administration/Private/tables/`basename $@` $@
	install -m 600 -o ${OWNER} -g ${GROUP} UUAIDS/`basename $@` \
	    $(TBLDIR)/`basename $@`

${ULIBDIR}/USERFILE:
	rm -f $@
	ln -s ../../../../../Administration/Private/conf/`basename $@` $@
	install -m 600 -o ${OWNER} -g ${GROUP} UUAIDS/`basename $@` \
	    $(CONFDIR)/`basename $@`

${ULIBDIR}/L.aliases ${ULIBDIR}/L.sys ${ULIBDIR}/L.cmds ${ULIBDIR}/L-devices \
    ${ULIBDIR}/L-dialcodes ${ULIBDIR}/Notes.L.sys:
	rm -f $@
	ln -s ../../../../../Administration/Private/conf/`basename $@` $@
	install -m 600 -o ${OWNER} -g ${GROUP} UUAIDS/`basename $@` \
	    $(CONFDIR)/`basename $@`

${ULIBDIR}/uucico  \
	${ULIBDIR}/uuclean \
	${BINDIR}/uucp \
	${BINDIR}/uux \
	${BINDIR}/uulog \
	${BINDIR}/uuname \
	${BINDIR}/uusnap \
	${BINDIR}/uupoll \
	${BINDIR}/uuq \
	${BINDIR}/uusend:
		install -s -m 6111 -o ${OWNER} -g ${GROUP} `basename $@`.NEW $@

${ULIBDIR}/uuxqt:
	install -s -m 6110 -o ${OWNER} -g ${GROUP} `basename $@`.NEW $@

${ETCDIR}/uucp ${ETCDIR}/uucpd:
	install -s -m 500  -o ${OWNER} -g ${GROUP} `basename $@`.NEW $@

${BINDIR}/uuencode ${BINDIR}/uudecode:
	install -s -o ${OWNER} -g ${GROUP} `basename $@`.NEW $@

DSTROOT:
	@if [ -n "${$@}" ]; \
	then \
		exit 0; \
	else \
		echo Must define $@; \
		exit 1; \
	fi

${ULIBDIR}/UUAIDS:
	mkdirs $@
	cp UUAIDS/* $@
	chmod a+r $@/*

${DSTDIRSMISC}:
	mkdirs $@

${DSTDIRS777}:
	mkdirs $@
	chmod 777 $@
	/etc/chown ${OWNER} $@
	chgrp ${GROUP} $@

#
# Note: mode 700 on ${ULIBDIR} would be safer.
# Also,  L.sys etc should be 600.
#

${HOSTDIRS}:
	@if [ ! -d $@ ]; then \
		mkdirs $@ ; \
		chmod 755 $@ ; \
		/etc/chown ${OWNER} $@ ; \
		chgrp ${GROUP} $@ ; \
		echo mkdirs $@ ; \
	fi

${DSTDIRS755}:
	mkdirs $@
	chmod 755 $@
	/etc/chown ${OWNER} $@
	chgrp ${GROUP} $@

depend .depend_done: ${DERIVED}
	rm -f Makedep
	${CC} $(CDEFS) -M ${CFILES} ${SFILES} ${DERIVED} | \
	    awk '{ if ($$1 != prev) { if (rec != "") print rec; \
		rec = $$0; prev = $$1; } \
		else { if (length(rec $$2) > 78) { print rec; rec = $$0; } \
		else rec = rec " " $$2 } } \
		END { print rec }' >Makedep
	-touch .depend_done


tags:	ALWAYS
	etags ${SRCS}
	ctags ${SRCS}

ALWAYS:

# -include Makedep
