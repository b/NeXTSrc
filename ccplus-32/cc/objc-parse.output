Conflict in state 253 between rule 166 and token '(' resolved as shift.
Conflict in state 253 between rule 166 and token '[' resolved as shift.
Conflict in state 311 between rule 73 and token ASSIGN resolved as shift.
Conflict in state 311 between rule 73 and token '=' resolved as shift.
Conflict in state 311 between rule 73 and token '?' resolved as shift.
Conflict in state 311 between rule 73 and token OROR resolved as shift.
Conflict in state 311 between rule 73 and token ANDAND resolved as shift.
Conflict in state 311 between rule 73 and token '|' resolved as shift.
Conflict in state 311 between rule 73 and token '^' resolved as shift.
Conflict in state 311 between rule 73 and token '&' resolved as shift.
Conflict in state 311 between rule 73 and token EQCOMPARE resolved as shift.
Conflict in state 311 between rule 73 and token ARITHCOMPARE resolved as shift.
Conflict in state 311 between rule 73 and token LSHIFT resolved as shift.
Conflict in state 311 between rule 73 and token RSHIFT resolved as shift.
Conflict in state 311 between rule 73 and token '+' resolved as shift.
Conflict in state 311 between rule 73 and token '-' resolved as shift.
Conflict in state 311 between rule 73 and token '*' resolved as shift.
Conflict in state 311 between rule 73 and token '/' resolved as shift.
Conflict in state 311 between rule 73 and token '%' resolved as shift.
Conflict in state 312 between rule 72 and token ASSIGN resolved as shift.
Conflict in state 312 between rule 72 and token '=' resolved as shift.
Conflict in state 312 between rule 72 and token '?' resolved as shift.
Conflict in state 312 between rule 72 and token OROR resolved as shift.
Conflict in state 312 between rule 72 and token ANDAND resolved as shift.
Conflict in state 312 between rule 72 and token '|' resolved as shift.
Conflict in state 312 between rule 72 and token '^' resolved as shift.
Conflict in state 312 between rule 72 and token '&' resolved as shift.
Conflict in state 312 between rule 72 and token EQCOMPARE resolved as shift.
Conflict in state 312 between rule 72 and token ARITHCOMPARE resolved as shift.
Conflict in state 312 between rule 72 and token LSHIFT resolved as shift.
Conflict in state 312 between rule 72 and token RSHIFT resolved as shift.
Conflict in state 312 between rule 72 and token '+' resolved as shift.
Conflict in state 312 between rule 72 and token '-' resolved as shift.
Conflict in state 312 between rule 72 and token '*' resolved as shift.
Conflict in state 312 between rule 72 and token '/' resolved as shift.
Conflict in state 312 between rule 72 and token '%' resolved as shift.
Conflict in state 315 between rule 70 and token ASSIGN resolved as reduce.
Conflict in state 315 between rule 70 and token '=' resolved as reduce.
Conflict in state 315 between rule 70 and token '?' resolved as reduce.
Conflict in state 315 between rule 70 and token OROR resolved as reduce.
Conflict in state 315 between rule 70 and token ANDAND resolved as shift.
Conflict in state 315 between rule 70 and token '|' resolved as shift.
Conflict in state 315 between rule 70 and token '^' resolved as shift.
Conflict in state 315 between rule 70 and token '&' resolved as shift.
Conflict in state 315 between rule 70 and token EQCOMPARE resolved as shift.
Conflict in state 315 between rule 70 and token ARITHCOMPARE resolved as shift.
Conflict in state 315 between rule 70 and token LSHIFT resolved as shift.
Conflict in state 315 between rule 70 and token RSHIFT resolved as shift.
Conflict in state 315 between rule 70 and token '+' resolved as shift.
Conflict in state 315 between rule 70 and token '-' resolved as shift.
Conflict in state 315 between rule 70 and token '*' resolved as shift.
Conflict in state 315 between rule 70 and token '/' resolved as shift.
Conflict in state 315 between rule 70 and token '%' resolved as shift.
Conflict in state 316 between rule 69 and token ASSIGN resolved as reduce.
Conflict in state 316 between rule 69 and token '=' resolved as reduce.
Conflict in state 316 between rule 69 and token '?' resolved as reduce.
Conflict in state 316 between rule 69 and token OROR resolved as reduce.
Conflict in state 316 between rule 69 and token ANDAND resolved as reduce.
Conflict in state 316 between rule 69 and token '|' resolved as shift.
Conflict in state 316 between rule 69 and token '^' resolved as shift.
Conflict in state 316 between rule 69 and token '&' resolved as shift.
Conflict in state 316 between rule 69 and token EQCOMPARE resolved as shift.
Conflict in state 316 between rule 69 and token ARITHCOMPARE resolved as shift.
Conflict in state 316 between rule 69 and token LSHIFT resolved as shift.
Conflict in state 316 between rule 69 and token RSHIFT resolved as shift.
Conflict in state 316 between rule 69 and token '+' resolved as shift.
Conflict in state 316 between rule 69 and token '-' resolved as shift.
Conflict in state 316 between rule 69 and token '*' resolved as shift.
Conflict in state 316 between rule 69 and token '/' resolved as shift.
Conflict in state 316 between rule 69 and token '%' resolved as shift.
Conflict in state 317 between rule 67 and token ASSIGN resolved as reduce.
Conflict in state 317 between rule 67 and token '=' resolved as reduce.
Conflict in state 317 between rule 67 and token '?' resolved as reduce.
Conflict in state 317 between rule 67 and token OROR resolved as reduce.
Conflict in state 317 between rule 67 and token ANDAND resolved as reduce.
Conflict in state 317 between rule 67 and token '|' resolved as reduce.
Conflict in state 317 between rule 67 and token '^' resolved as shift.
Conflict in state 317 between rule 67 and token '&' resolved as shift.
Conflict in state 317 between rule 67 and token EQCOMPARE resolved as shift.
Conflict in state 317 between rule 67 and token ARITHCOMPARE resolved as shift.
Conflict in state 317 between rule 67 and token LSHIFT resolved as shift.
Conflict in state 317 between rule 67 and token RSHIFT resolved as shift.
Conflict in state 317 between rule 67 and token '+' resolved as shift.
Conflict in state 317 between rule 67 and token '-' resolved as shift.
Conflict in state 317 between rule 67 and token '*' resolved as shift.
Conflict in state 317 between rule 67 and token '/' resolved as shift.
Conflict in state 317 between rule 67 and token '%' resolved as shift.
Conflict in state 318 between rule 68 and token ASSIGN resolved as reduce.
Conflict in state 318 between rule 68 and token '=' resolved as reduce.
Conflict in state 318 between rule 68 and token '?' resolved as reduce.
Conflict in state 318 between rule 68 and token OROR resolved as reduce.
Conflict in state 318 between rule 68 and token ANDAND resolved as reduce.
Conflict in state 318 between rule 68 and token '|' resolved as reduce.
Conflict in state 318 between rule 68 and token '^' resolved as reduce.
Conflict in state 318 between rule 68 and token '&' resolved as shift.
Conflict in state 318 between rule 68 and token EQCOMPARE resolved as shift.
Conflict in state 318 between rule 68 and token ARITHCOMPARE resolved as shift.
Conflict in state 318 between rule 68 and token LSHIFT resolved as shift.
Conflict in state 318 between rule 68 and token RSHIFT resolved as shift.
Conflict in state 318 between rule 68 and token '+' resolved as shift.
Conflict in state 318 between rule 68 and token '-' resolved as shift.
Conflict in state 318 between rule 68 and token '*' resolved as shift.
Conflict in state 318 between rule 68 and token '/' resolved as shift.
Conflict in state 318 between rule 68 and token '%' resolved as shift.
Conflict in state 319 between rule 66 and token ASSIGN resolved as reduce.
Conflict in state 319 between rule 66 and token '=' resolved as reduce.
Conflict in state 319 between rule 66 and token '?' resolved as reduce.
Conflict in state 319 between rule 66 and token OROR resolved as reduce.
Conflict in state 319 between rule 66 and token ANDAND resolved as reduce.
Conflict in state 319 between rule 66 and token '|' resolved as reduce.
Conflict in state 319 between rule 66 and token '^' resolved as reduce.
Conflict in state 319 between rule 66 and token '&' resolved as reduce.
Conflict in state 319 between rule 66 and token EQCOMPARE resolved as shift.
Conflict in state 319 between rule 66 and token ARITHCOMPARE resolved as shift.
Conflict in state 319 between rule 66 and token LSHIFT resolved as shift.
Conflict in state 319 between rule 66 and token RSHIFT resolved as shift.
Conflict in state 319 between rule 66 and token '+' resolved as shift.
Conflict in state 319 between rule 66 and token '-' resolved as shift.
Conflict in state 319 between rule 66 and token '*' resolved as shift.
Conflict in state 319 between rule 66 and token '/' resolved as shift.
Conflict in state 319 between rule 66 and token '%' resolved as shift.
Conflict in state 320 between rule 65 and token ASSIGN resolved as reduce.
Conflict in state 320 between rule 65 and token '=' resolved as reduce.
Conflict in state 320 between rule 65 and token '?' resolved as reduce.
Conflict in state 320 between rule 65 and token OROR resolved as reduce.
Conflict in state 320 between rule 65 and token ANDAND resolved as reduce.
Conflict in state 320 between rule 65 and token '|' resolved as reduce.
Conflict in state 320 between rule 65 and token '^' resolved as reduce.
Conflict in state 320 between rule 65 and token '&' resolved as reduce.
Conflict in state 320 between rule 65 and token EQCOMPARE resolved as reduce.
Conflict in state 320 between rule 65 and token ARITHCOMPARE resolved as shift.
Conflict in state 320 between rule 65 and token LSHIFT resolved as shift.
Conflict in state 320 between rule 65 and token RSHIFT resolved as shift.
Conflict in state 320 between rule 65 and token '+' resolved as shift.
Conflict in state 320 between rule 65 and token '-' resolved as shift.
Conflict in state 320 between rule 65 and token '*' resolved as shift.
Conflict in state 320 between rule 65 and token '/' resolved as shift.
Conflict in state 320 between rule 65 and token '%' resolved as shift.
Conflict in state 321 between rule 64 and token ASSIGN resolved as reduce.
Conflict in state 321 between rule 64 and token '=' resolved as reduce.
Conflict in state 321 between rule 64 and token '?' resolved as reduce.
Conflict in state 321 between rule 64 and token OROR resolved as reduce.
Conflict in state 321 between rule 64 and token ANDAND resolved as reduce.
Conflict in state 321 between rule 64 and token '|' resolved as reduce.
Conflict in state 321 between rule 64 and token '^' resolved as reduce.
Conflict in state 321 between rule 64 and token '&' resolved as reduce.
Conflict in state 321 between rule 64 and token EQCOMPARE resolved as reduce.
Conflict in state 321 between rule 64 and token ARITHCOMPARE resolved as reduce.
Conflict in state 321 between rule 64 and token LSHIFT resolved as shift.
Conflict in state 321 between rule 64 and token RSHIFT resolved as shift.
Conflict in state 321 between rule 64 and token '+' resolved as shift.
Conflict in state 321 between rule 64 and token '-' resolved as shift.
Conflict in state 321 between rule 64 and token '*' resolved as shift.
Conflict in state 321 between rule 64 and token '/' resolved as shift.
Conflict in state 321 between rule 64 and token '%' resolved as shift.
Conflict in state 322 between rule 62 and token ASSIGN resolved as reduce.
Conflict in state 322 between rule 62 and token '=' resolved as reduce.
Conflict in state 322 between rule 62 and token '?' resolved as reduce.
Conflict in state 322 between rule 62 and token OROR resolved as reduce.
Conflict in state 322 between rule 62 and token ANDAND resolved as reduce.
Conflict in state 322 between rule 62 and token '|' resolved as reduce.
Conflict in state 322 between rule 62 and token '^' resolved as reduce.
Conflict in state 322 between rule 62 and token '&' resolved as reduce.
Conflict in state 322 between rule 62 and token EQCOMPARE resolved as reduce.
Conflict in state 322 between rule 62 and token ARITHCOMPARE resolved as reduce.
Conflict in state 322 between rule 62 and token LSHIFT resolved as reduce.
Conflict in state 322 between rule 62 and token RSHIFT resolved as reduce.
Conflict in state 322 between rule 62 and token '+' resolved as shift.
Conflict in state 322 between rule 62 and token '-' resolved as shift.
Conflict in state 322 between rule 62 and token '*' resolved as shift.
Conflict in state 322 between rule 62 and token '/' resolved as shift.
Conflict in state 322 between rule 62 and token '%' resolved as shift.
Conflict in state 323 between rule 63 and token ASSIGN resolved as reduce.
Conflict in state 323 between rule 63 and token '=' resolved as reduce.
Conflict in state 323 between rule 63 and token '?' resolved as reduce.
Conflict in state 323 between rule 63 and token OROR resolved as reduce.
Conflict in state 323 between rule 63 and token ANDAND resolved as reduce.
Conflict in state 323 between rule 63 and token '|' resolved as reduce.
Conflict in state 323 between rule 63 and token '^' resolved as reduce.
Conflict in state 323 between rule 63 and token '&' resolved as reduce.
Conflict in state 323 between rule 63 and token EQCOMPARE resolved as reduce.
Conflict in state 323 between rule 63 and token ARITHCOMPARE resolved as reduce.
Conflict in state 323 between rule 63 and token LSHIFT resolved as reduce.
Conflict in state 323 between rule 63 and token RSHIFT resolved as reduce.
Conflict in state 323 between rule 63 and token '+' resolved as shift.
Conflict in state 323 between rule 63 and token '-' resolved as shift.
Conflict in state 323 between rule 63 and token '*' resolved as shift.
Conflict in state 323 between rule 63 and token '/' resolved as shift.
Conflict in state 323 between rule 63 and token '%' resolved as shift.
Conflict in state 324 between rule 57 and token ASSIGN resolved as reduce.
Conflict in state 324 between rule 57 and token '=' resolved as reduce.
Conflict in state 324 between rule 57 and token '?' resolved as reduce.
Conflict in state 324 between rule 57 and token OROR resolved as reduce.
Conflict in state 324 between rule 57 and token ANDAND resolved as reduce.
Conflict in state 324 between rule 57 and token '|' resolved as reduce.
Conflict in state 324 between rule 57 and token '^' resolved as reduce.
Conflict in state 324 between rule 57 and token '&' resolved as reduce.
Conflict in state 324 between rule 57 and token EQCOMPARE resolved as reduce.
Conflict in state 324 between rule 57 and token ARITHCOMPARE resolved as reduce.
Conflict in state 324 between rule 57 and token LSHIFT resolved as reduce.
Conflict in state 324 between rule 57 and token RSHIFT resolved as reduce.
Conflict in state 324 between rule 57 and token '+' resolved as reduce.
Conflict in state 324 between rule 57 and token '-' resolved as reduce.
Conflict in state 324 between rule 57 and token '*' resolved as shift.
Conflict in state 324 between rule 57 and token '/' resolved as shift.
Conflict in state 324 between rule 57 and token '%' resolved as shift.
Conflict in state 325 between rule 58 and token ASSIGN resolved as reduce.
Conflict in state 325 between rule 58 and token '=' resolved as reduce.
Conflict in state 325 between rule 58 and token '?' resolved as reduce.
Conflict in state 325 between rule 58 and token OROR resolved as reduce.
Conflict in state 325 between rule 58 and token ANDAND resolved as reduce.
Conflict in state 325 between rule 58 and token '|' resolved as reduce.
Conflict in state 325 between rule 58 and token '^' resolved as reduce.
Conflict in state 325 between rule 58 and token '&' resolved as reduce.
Conflict in state 325 between rule 58 and token EQCOMPARE resolved as reduce.
Conflict in state 325 between rule 58 and token ARITHCOMPARE resolved as reduce.
Conflict in state 325 between rule 58 and token LSHIFT resolved as reduce.
Conflict in state 325 between rule 58 and token RSHIFT resolved as reduce.
Conflict in state 325 between rule 58 and token '+' resolved as reduce.
Conflict in state 325 between rule 58 and token '-' resolved as reduce.
Conflict in state 325 between rule 58 and token '*' resolved as shift.
Conflict in state 325 between rule 58 and token '/' resolved as shift.
Conflict in state 325 between rule 58 and token '%' resolved as shift.
Conflict in state 326 between rule 59 and token ASSIGN resolved as reduce.
Conflict in state 326 between rule 59 and token '=' resolved as reduce.
Conflict in state 326 between rule 59 and token '?' resolved as reduce.
Conflict in state 326 between rule 59 and token OROR resolved as reduce.
Conflict in state 326 between rule 59 and token ANDAND resolved as reduce.
Conflict in state 326 between rule 59 and token '|' resolved as reduce.
Conflict in state 326 between rule 59 and token '^' resolved as reduce.
Conflict in state 326 between rule 59 and token '&' resolved as reduce.
Conflict in state 326 between rule 59 and token EQCOMPARE resolved as reduce.
Conflict in state 326 between rule 59 and token ARITHCOMPARE resolved as reduce.
Conflict in state 326 between rule 59 and token LSHIFT resolved as reduce.
Conflict in state 326 between rule 59 and token RSHIFT resolved as reduce.
Conflict in state 326 between rule 59 and token '+' resolved as reduce.
Conflict in state 326 between rule 59 and token '-' resolved as reduce.
Conflict in state 326 between rule 59 and token '*' resolved as reduce.
Conflict in state 326 between rule 59 and token '/' resolved as reduce.
Conflict in state 326 between rule 59 and token '%' resolved as reduce.
Conflict in state 327 between rule 60 and token ASSIGN resolved as reduce.
Conflict in state 327 between rule 60 and token '=' resolved as reduce.
Conflict in state 327 between rule 60 and token '?' resolved as reduce.
Conflict in state 327 between rule 60 and token OROR resolved as reduce.
Conflict in state 327 between rule 60 and token ANDAND resolved as reduce.
Conflict in state 327 between rule 60 and token '|' resolved as reduce.
Conflict in state 327 between rule 60 and token '^' resolved as reduce.
Conflict in state 327 between rule 60 and token '&' resolved as reduce.
Conflict in state 327 between rule 60 and token EQCOMPARE resolved as reduce.
Conflict in state 327 between rule 60 and token ARITHCOMPARE resolved as reduce.
Conflict in state 327 between rule 60 and token LSHIFT resolved as reduce.
Conflict in state 327 between rule 60 and token RSHIFT resolved as reduce.
Conflict in state 327 between rule 60 and token '+' resolved as reduce.
Conflict in state 327 between rule 60 and token '-' resolved as reduce.
Conflict in state 327 between rule 60 and token '*' resolved as reduce.
Conflict in state 327 between rule 60 and token '/' resolved as reduce.
Conflict in state 327 between rule 60 and token '%' resolved as reduce.
Conflict in state 328 between rule 61 and token ASSIGN resolved as reduce.
Conflict in state 328 between rule 61 and token '=' resolved as reduce.
Conflict in state 328 between rule 61 and token '?' resolved as reduce.
Conflict in state 328 between rule 61 and token OROR resolved as reduce.
Conflict in state 328 between rule 61 and token ANDAND resolved as reduce.
Conflict in state 328 between rule 61 and token '|' resolved as reduce.
Conflict in state 328 between rule 61 and token '^' resolved as reduce.
Conflict in state 328 between rule 61 and token '&' resolved as reduce.
Conflict in state 328 between rule 61 and token EQCOMPARE resolved as reduce.
Conflict in state 328 between rule 61 and token ARITHCOMPARE resolved as reduce.
Conflict in state 328 between rule 61 and token LSHIFT resolved as reduce.
Conflict in state 328 between rule 61 and token RSHIFT resolved as reduce.
Conflict in state 328 between rule 61 and token '+' resolved as reduce.
Conflict in state 328 between rule 61 and token '-' resolved as reduce.
Conflict in state 328 between rule 61 and token '*' resolved as reduce.
Conflict in state 328 between rule 61 and token '/' resolved as reduce.
Conflict in state 328 between rule 61 and token '%' resolved as reduce.
Conflict in state 334 between rule 214 and token '(' resolved as shift.
Conflict in state 334 between rule 214 and token '[' resolved as shift.
Conflict in state 391 between rule 157 and token '(' resolved as shift.
Conflict in state 391 between rule 157 and token '[' resolved as shift.
Conflict in state 428 between rule 213 and token '(' resolved as shift.
Conflict in state 428 between rule 213 and token '[' resolved as shift.
Conflict in state 522 between rule 240 and token ELSE resolved as shift.
Conflict in state 534 between rule 71 and token ASSIGN resolved as reduce.
Conflict in state 534 between rule 71 and token '=' resolved as reduce.
Conflict in state 534 between rule 71 and token '?' resolved as shift.
Conflict in state 534 between rule 71 and token OROR resolved as shift.
Conflict in state 534 between rule 71 and token ANDAND resolved as shift.
Conflict in state 534 between rule 71 and token '|' resolved as shift.
Conflict in state 534 between rule 71 and token '^' resolved as shift.
Conflict in state 534 between rule 71 and token '&' resolved as shift.
Conflict in state 534 between rule 71 and token EQCOMPARE resolved as shift.
Conflict in state 534 between rule 71 and token ARITHCOMPARE resolved as shift.
Conflict in state 534 between rule 71 and token LSHIFT resolved as shift.
Conflict in state 534 between rule 71 and token RSHIFT resolved as shift.
Conflict in state 534 between rule 71 and token '+' resolved as shift.
Conflict in state 534 between rule 71 and token '-' resolved as shift.
Conflict in state 534 between rule 71 and token '*' resolved as shift.
Conflict in state 534 between rule 71 and token '/' resolved as shift.
Conflict in state 534 between rule 71 and token '%' resolved as shift.
Conflict in state 560 between rule 214 and token '(' resolved as shift.
Conflict in state 560 between rule 214 and token '[' resolved as shift.
Conflict in state 563 between rule 214 and token '(' resolved as shift.
Conflict in state 563 between rule 214 and token '[' resolved as shift.
Conflict in state 630 between rule 162 and token '(' resolved as shift.
Conflict in state 630 between rule 162 and token '[' resolved as shift.
State 39 contains 1 shift/reduce conflict.
State 41 contains 1 shift/reduce conflict.
State 43 contains 1 shift/reduce conflict.
State 46 contains 1 shift/reduce conflict.
State 47 contains 1 shift/reduce conflict.
State 55 contains 1 shift/reduce conflict.
State 152 contains 1 shift/reduce conflict.
State 159 contains 1 shift/reduce conflict.
State 163 contains 1 shift/reduce conflict.
State 180 contains 1 shift/reduce conflict.
State 265 contains 1 shift/reduce conflict.
State 276 contains 1 shift/reduce conflict.
State 282 contains 1 shift/reduce conflict.
State 363 contains 1 shift/reduce conflict.
State 445 contains 1 shift/reduce conflict.
State 459 contains 1 shift/reduce conflict.
State 464 contains 1 shift/reduce conflict.


token types:
 type -1 is $
 type 33 is '!'
 type 37 is '%'
 type 38 is '&'
 type 40 is '('
 type 41 is ')'
 type 42 is '*'
 type 43 is '+'
 type 44 is ','
 type 45 is '-'
 type 46 is '.'
 type 47 is '/'
 type 58 is ':'
 type 59 is ';'
 type 61 is '='
 type 63 is '?'
 type 91 is '['
 type 93 is ']'
 type 94 is '^'
 type 123 is '{'
 type 124 is '|'
 type 125 is '}'
 type 126 is '~'
 type 256 is error
 type 258 is IDENTIFIER
 type 259 is TYPENAME
 type 260 is SCSPEC
 type 261 is TYPESPEC
 type 262 is TYPE_QUAL
 type 263 is CONSTANT
 type 264 is STRING
 type 265 is ELLIPSIS
 type 266 is SIZEOF
 type 267 is ENUM
 type 268 is STRUCT
 type 269 is UNION
 type 270 is IF
 type 271 is ELSE
 type 272 is WHILE
 type 273 is DO
 type 274 is FOR
 type 275 is SWITCH
 type 276 is CASE
 type 277 is DEFAULT
 type 278 is BREAK
 type 279 is CONTINUE
 type 280 is RETURN
 type 281 is GOTO
 type 282 is ASM
 type 283 is TYPEOF
 type 284 is ALIGNOF
 type 285 is ATTRIBUTE
 type 286 is INTERFACE
 type 287 is IMPLEMENTATION
 type 288 is END
 type 289 is SELECTOR
 type 290 is DEFS
 type 291 is ENCODE
 type 292 is CLASSNAME
 type 293 is PUBLIC
 type 294 is ASSIGN
 type 295 is OROR
 type 296 is ANDAND
 type 297 is EQCOMPARE
 type 298 is ARITHCOMPARE
 type 299 is LSHIFT
 type 300 is RSHIFT
 type 301 is UNARY
 type 302 is PLUSPLUS
 type 303 is MINUSMINUS
 type 304 is HYPERUNARY
 type 305 is POINTSAT


state 0

    extdefs	shift  1
    program	shift  737
    @1  	shift  2

    $   	reduce  1  (program)
    $default	reduce  3  (@1)



state 1

    program  ->  extdefs .   (2)
    extdefs  ->  extdefs . @2 extdef   (6)

    @2  	shift  3

    $   	reduce  2  (program)
    $default	reduce  5  (@2)



state 2

    extdefs  ->  @1 . extdef   (4)

    error	shift  4
    TYPENAME	shift  5
    SCSPEC	shift  6
    TYPESPEC	shift  7
    TYPE_QUAL	shift  8
    ENUM	shift  9
    STRUCT	shift  10
    UNION	shift  11
    ASM 	shift  12
    TYPEOF	shift  13
    INTERFACE	shift  14
    IMPLEMENTATION	shift  15
    END 	shift  16
    CLASSNAME	shift  17
    '+' 	shift  18
    '-' 	shift  19
    ';' 	shift  20
    extdef	shift  21
    datadef	shift  22
    fndef	shift  23
    setspecs	shift  24
    typed_declspecs	shift  25
    declmods	shift  26
    typespec	shift  27
    structsp	shift  28
    objcdef	shift  29
    classdef	shift  30
    methoddef	shift  31

    IDENTIFIER	reduce  98  (setspecs)
    '*' 	reduce  98  (setspecs)
    '(' 	[reduce  98  (setspecs)]



state 3

    extdefs  ->  extdefs @2 . extdef   (6)

    error	shift  4
    TYPENAME	shift  5
    SCSPEC	shift  6
    TYPESPEC	shift  7
    TYPE_QUAL	shift  8
    ENUM	shift  9
    STRUCT	shift  10
    UNION	shift  11
    ASM 	shift  12
    TYPEOF	shift  13
    INTERFACE	shift  14
    IMPLEMENTATION	shift  15
    END 	shift  16
    CLASSNAME	shift  17
    '+' 	shift  18
    '-' 	shift  19
    ';' 	shift  20
    extdef	shift  32
    datadef	shift  22
    fndef	shift  23
    setspecs	shift  24
    typed_declspecs	shift  25
    declmods	shift  26
    typespec	shift  27
    structsp	shift  28
    objcdef	shift  29
    classdef	shift  30
    methoddef	shift  31

    IDENTIFIER	reduce  98  (setspecs)
    '*' 	reduce  98  (setspecs)
    '(' 	[reduce  98  (setspecs)]



state 4

    datadef  ->  error . ';'   (16)
    datadef  ->  error . '}'   (17)

    ';' 	shift  33
    '}' 	shift  34



state 5

    typespec  ->  TYPENAME .   (118)

    $default	reduce  118  (typespec)



state 6

    declmods  ->  SCSPEC .   (109)

    $default	reduce  109  (declmods)



state 7

    typespec  ->  TYPESPEC .   (116)

    $default	reduce  116  (typespec)



state 8

    declmods  ->  TYPE_QUAL .   (108)

    $default	reduce  108  (declmods)



state 9

    structsp  ->  ENUM . identifier '{' @14 enumlist maybecomma_warn '}'   (179)
    structsp  ->  ENUM . '{' @15 enumlist maybecomma_warn '}'   (181)
    structsp  ->  ENUM . identifier   (182)

    IDENTIFIER	shift  35
    TYPENAME	shift  36
    CLASSNAME	shift  37
    '{' 	shift  38
    identifier	shift  39



state 10

    structsp  ->  STRUCT . identifier '{' @12 component_decl_list '}'   (171)
    structsp  ->  STRUCT . '{' component_decl_list '}'   (172)
    structsp  ->  STRUCT . identifier   (173)

    IDENTIFIER	shift  35
    TYPENAME	shift  36
    CLASSNAME	shift  37
    '{' 	shift  40
    identifier	shift  41



state 11

    structsp  ->  UNION . identifier '{' @13 component_decl_list '}'   (175)
    structsp  ->  UNION . '{' component_decl_list '}'   (176)
    structsp  ->  UNION . identifier   (177)

    IDENTIFIER	shift  35
    TYPENAME	shift  36
    CLASSNAME	shift  37
    '{' 	shift  42
    identifier	shift  43



state 12

    extdef  ->  ASM . '(' string ')' ';'   (10)

    '(' 	shift  44



state 13

    typespec  ->  TYPEOF . '(' expr ')'   (120)
    typespec  ->  TYPEOF . '(' typename ')'   (121)

    '(' 	shift  45



state 14

    classdef  ->  INTERFACE . identifier '{' @31 ivar_decl_list '}' @32 methodprotolist END   (306)
    classdef  ->  INTERFACE . identifier @33 methodprotolist END   (308)
    classdef  ->  INTERFACE . identifier ':' identifier '{' @34 ivar_decl_list '}' @35 methodprotolist END   (311)
    classdef  ->  INTERFACE . identifier ':' identifier @36 methodprotolist END   (313)
    classdef  ->  INTERFACE . identifier '(' identifier ')' @39 methodprotolist END   (321)

    IDENTIFIER	shift  35
    TYPENAME	shift  36
    CLASSNAME	shift  37
    identifier	shift  46



state 15

    classdef  ->  IMPLEMENTATION . identifier '{' @37 ivar_decl_list '}'   (315)
    classdef  ->  IMPLEMENTATION . identifier   (316)
    classdef  ->  IMPLEMENTATION . identifier ':' identifier '{' @38 ivar_decl_list '}'   (318)
    classdef  ->  IMPLEMENTATION . identifier ':' identifier   (319)
    classdef  ->  IMPLEMENTATION . identifier '(' identifier ')'   (322)

    IDENTIFIER	shift  35
    TYPENAME	shift  36
    CLASSNAME	shift  37
    identifier	shift  47



state 16

    objcdef  ->  END .   (303)

    $default	reduce  303  (objcdef)



state 17

    typespec  ->  CLASSNAME .   (119)

    $default	reduce  119  (typespec)



state 18

    methoddef  ->  '+' . @41 methoddecl @42 optarglist @43 compstmt_or_error   (341)

    @41 	shift  48

    $default	reduce  338  (@41)



state 19

    methoddef  ->  '-' . @44 methoddecl @45 optarglist @46 compstmt_or_error   (345)

    @44 	shift  49

    $default	reduce  342  (@44)



state 20

    datadef  ->  ';' .   (18)

    $default	reduce  18  (datadef)



state 21

    extdefs  ->  @1 extdef .   (4)

    $default	reduce  4  (extdefs)



state 22

    extdef  ->  datadef .   (8)

    $default	reduce  8  (extdef)



state 23

    extdef  ->  fndef .   (7)

    $default	reduce  7  (extdef)



state 24

    datadef  ->  setspecs . notype_initdecls ';'   (11)
    fndef  ->  setspecs . notype_declarator @7 xdecls @8 compstmt_or_error   (29)
    fndef  ->  setspecs . notype_declarator error   (30)

    IDENTIFIER	shift  50
    '*' 	shift  51
    '(' 	shift  52
    notype_initdecls	shift  53
    notype_initdcl	shift  54
    notype_declarator	shift  55



state 25

    datadef  ->  typed_declspecs . setspecs initdecls ';'   (13)
    datadef  ->  typed_declspecs . ';'   (15)
    fndef  ->  typed_declspecs . setspecs declarator @3 xdecls @4 compstmt_or_error   (21)
    fndef  ->  typed_declspecs . setspecs declarator error   (22)

    ';' 	shift  56
    setspecs	shift  57

    $default	reduce  98  (setspecs)



state 26

    datadef  ->  declmods . setspecs notype_initdecls ';'   (12)
    datadef  ->  declmods . ';'   (14)
    fndef  ->  declmods . setspecs notype_declarator @5 xdecls @6 compstmt_or_error   (25)
    fndef  ->  declmods . setspecs notype_declarator error   (26)
    typed_declspecs  ->  declmods . typespec reserved_declspecs   (104)
    declmods  ->  declmods . TYPE_QUAL   (110)
    declmods  ->  declmods . SCSPEC   (111)

    TYPENAME	shift  5
    SCSPEC	shift  58
    TYPESPEC	shift  7
    TYPE_QUAL	shift  59
    ENUM	shift  9
    STRUCT	shift  10
    UNION	shift  11
    TYPEOF	shift  13
    CLASSNAME	shift  17
    ';' 	shift  60
    setspecs	shift  61
    typespec	shift  62
    structsp	shift  28

    $default	reduce  98  (setspecs)



state 27

    typed_declspecs  ->  typespec . reserved_declspecs   (103)

    reserved_declspecs	shift  63

    $default	reduce  105  (reserved_declspecs)



state 28

    typespec  ->  structsp .   (117)

    $default	reduce  117  (typespec)



state 29

    extdef  ->  objcdef .   (9)

    $default	reduce  9  (extdef)



state 30

    objcdef  ->  classdef .   (301)

    $default	reduce  301  (objcdef)



state 31

    objcdef  ->  methoddef .   (302)

    $default	reduce  302  (objcdef)



state 32

    extdefs  ->  extdefs @2 extdef .   (6)

    $default	reduce  6  (extdefs)



state 33

    datadef  ->  error ';' .   (16)

    $default	reduce  16  (datadef)



state 34

    datadef  ->  error '}' .   (17)

    $default	reduce  17  (datadef)



state 35

    identifier  ->  IDENTIFIER .   (31)

    $default	reduce  31  (identifier)



state 36

    identifier  ->  TYPENAME .   (32)

    $default	reduce  32  (identifier)



state 37

    identifier  ->  CLASSNAME .   (33)

    $default	reduce  33  (identifier)



state 38

    structsp  ->  ENUM '{' . @15 enumlist maybecomma_warn '}'   (181)

    @15 	shift  64

    $default	reduce  180  (@15)



state 39

    structsp  ->  ENUM identifier . '{' @14 enumlist maybecomma_warn '}'   (179)
    structsp  ->  ENUM identifier .   (182)

    '{' 	shift  65

    '{' 	[reduce  182  (structsp)]
    $default	reduce  182  (structsp)



state 40

    structsp  ->  STRUCT '{' . component_decl_list '}'   (172)

    DEFS	shift  66
    component_decl_list	shift  67

    $default	reduce  187  (component_decl_list)



state 41

    structsp  ->  STRUCT identifier . '{' @12 component_decl_list '}'   (171)
    structsp  ->  STRUCT identifier .   (173)

    '{' 	shift  68

    '{' 	[reduce  173  (structsp)]
    $default	reduce  173  (structsp)



state 42

    structsp  ->  UNION '{' . component_decl_list '}'   (176)

    DEFS	shift  66
    component_decl_list	shift  69

    $default	reduce  187  (component_decl_list)



state 43

    structsp  ->  UNION identifier . '{' @13 component_decl_list '}'   (175)
    structsp  ->  UNION identifier .   (177)

    '{' 	shift  70

    '{' 	[reduce  177  (structsp)]
    $default	reduce  177  (structsp)



state 44

    extdef  ->  ASM '(' . string ')' ';'   (10)

    STRING	shift  71
    string	shift  72



state 45

    typespec  ->  TYPEOF '(' . expr ')'   (120)
    typespec  ->  TYPEOF '(' . typename ')'   (121)

    IDENTIFIER	shift  73
    TYPENAME	shift  5
    TYPESPEC	shift  7
    TYPE_QUAL	shift  74
    CONSTANT	shift  75
    STRING	shift  71
    SIZEOF	shift  76
    ENUM	shift  9
    STRUCT	shift  10
    UNION	shift  11
    TYPEOF	shift  13
    ALIGNOF	shift  77
    SELECTOR	shift  78
    ENCODE	shift  79
    CLASSNAME	shift  17
    '&' 	shift  80
    '+' 	shift  81
    '-' 	shift  82
    '*' 	shift  83
    PLUSPLUS	shift  84
    MINUSMINUS	shift  85
    '(' 	shift  86
    '[' 	shift  87
    '~' 	shift  88
    '!' 	shift  89
    unop	shift  90
    expr	shift  91
    nonnull_exprlist	shift  92
    unary_expr	shift  93
    cast_expr	shift  94
    expr_no_commas	shift  95
    primary	shift  96
    string	shift  97
    typed_typespecs	shift  98
    typespec	shift  99
    structsp	shift  28
    typename	shift  100
    nonempty_type_quals	shift  101
    objcmessageexpr	shift  102
    objcselectorexpr	shift  103
    objcencodeexpr	shift  104



state 46

    classdef  ->  INTERFACE identifier . '{' @31 ivar_decl_list '}' @32 methodprotolist END   (306)
    classdef  ->  INTERFACE identifier . @33 methodprotolist END   (308)
    classdef  ->  INTERFACE identifier . ':' identifier '{' @34 ivar_decl_list '}' @35 methodprotolist END   (311)
    classdef  ->  INTERFACE identifier . ':' identifier @36 methodprotolist END   (313)
    classdef  ->  INTERFACE identifier . '(' identifier ')' @39 methodprotolist END   (321)

    ':' 	shift  105
    '(' 	shift  106
    '{' 	shift  107
    @33 	shift  108

    '(' 	[reduce  307  (@33)]
    $default	reduce  307  (@33)



state 47

    classdef  ->  IMPLEMENTATION identifier . '{' @37 ivar_decl_list '}'   (315)
    classdef  ->  IMPLEMENTATION identifier .   (316)
    classdef  ->  IMPLEMENTATION identifier . ':' identifier '{' @38 ivar_decl_list '}'   (318)
    classdef  ->  IMPLEMENTATION identifier . ':' identifier   (319)
    classdef  ->  IMPLEMENTATION identifier . '(' identifier ')'   (322)

    ':' 	shift  109
    '(' 	shift  110
    '{' 	shift  111

    '(' 	[reduce  316  (classdef)]
    $default	reduce  316  (classdef)



state 48

    methoddef  ->  '+' @41 . methoddecl @42 optarglist @43 compstmt_or_error   (341)

    IDENTIFIER	shift  112
    TYPENAME	shift  113
    TYPESPEC	shift  114
    TYPE_QUAL	shift  115
    SIZEOF	shift  116
    ENUM	shift  117
    STRUCT	shift  118
    UNION	shift  119
    IF  	shift  120
    ELSE	shift  121
    WHILE	shift  122
    DO  	shift  123
    FOR 	shift  124
    SWITCH	shift  125
    CASE	shift  126
    DEFAULT	shift  127
    BREAK	shift  128
    CONTINUE	shift  129
    RETURN	shift  130
    GOTO	shift  131
    ASM 	shift  132
    TYPEOF	shift  133
    ALIGNOF	shift  134
    ':' 	shift  135
    '(' 	shift  136
    methoddecl	shift  137
    unaryselector	shift  138
    keywordselector	shift  139
    selector	shift  140
    reservedwords	shift  141
    keyworddecl	shift  142



state 49

    methoddef  ->  '-' @44 . methoddecl @45 optarglist @46 compstmt_or_error   (345)

    IDENTIFIER	shift  112
    TYPENAME	shift  113
    TYPESPEC	shift  114
    TYPE_QUAL	shift  115
    SIZEOF	shift  116
    ENUM	shift  117
    STRUCT	shift  118
    UNION	shift  119
    IF  	shift  120
    ELSE	shift  121
    WHILE	shift  122
    DO  	shift  123
    FOR 	shift  124
    SWITCH	shift  125
    CASE	shift  126
    DEFAULT	shift  127
    BREAK	shift  128
    CONTINUE	shift  129
    RETURN	shift  130
    GOTO	shift  131
    ASM 	shift  132
    TYPEOF	shift  133
    ALIGNOF	shift  134
    ':' 	shift  135
    '(' 	shift  136
    methoddecl	shift  143
    unaryselector	shift  138
    keywordselector	shift  139
    selector	shift  140
    reservedwords	shift  141
    keyworddecl	shift  142



state 50

    notype_declarator  ->  IDENTIFIER .   (169)

    $default	reduce  169  (notype_declarator)



state 51

    notype_declarator  ->  '*' . type_quals notype_declarator   (166)

    type_quals	shift  144

    $default	reduce  210  (type_quals)



state 52

    notype_declarator  ->  '(' . notype_declarator ')'   (165)

    IDENTIFIER	shift  50
    '*' 	shift  51
    '(' 	shift  52
    notype_declarator	shift  145



state 53

    datadef  ->  setspecs notype_initdecls . ';'   (11)
    notype_initdecls  ->  notype_initdecls . ',' initdcl   (128)

    ';' 	shift  146
    ',' 	shift  147



state 54

    notype_initdecls  ->  notype_initdcl .   (127)

    $default	reduce  127  (notype_initdecls)



state 55

    fndef  ->  setspecs notype_declarator . @7 xdecls @8 compstmt_or_error   (29)
    fndef  ->  setspecs notype_declarator . error   (30)
    notype_initdcl  ->  notype_declarator . maybeasm maybe_attribute '=' @11 init   (135)
    notype_initdcl  ->  notype_declarator . maybeasm maybe_attribute   (136)
    notype_declarator  ->  notype_declarator . '(' parmlist_or_identifiers   (164)
    notype_declarator  ->  notype_declarator . '[' expr ']'   (167)
    notype_declarator  ->  notype_declarator . '[' ']'   (168)

    error	shift  148
    ASM 	shift  149
    '(' 	shift  150
    '[' 	shift  151
    @7  	shift  152
    maybeasm	shift  153

    error	[reduce  27  (@7)]
    TYPENAME	reduce  27  (@7)
    SCSPEC	reduce  27  (@7)
    TYPESPEC	reduce  27  (@7)
    TYPE_QUAL	reduce  27  (@7)
    ENUM	reduce  27  (@7)
    STRUCT	reduce  27  (@7)
    UNION	reduce  27  (@7)
    TYPEOF	reduce  27  (@7)
    ATTRIBUTE	reduce  129  (maybeasm)
    CLASSNAME	reduce  27  (@7)
    '=' 	reduce  129  (maybeasm)
    ';' 	reduce  129  (maybeasm)
    ',' 	reduce  129  (maybeasm)
    '{' 	reduce  27  (@7)



state 56

    datadef  ->  typed_declspecs ';' .   (15)

    $default	reduce  15  (datadef)



state 57

    datadef  ->  typed_declspecs setspecs . initdecls ';'   (13)
    fndef  ->  typed_declspecs setspecs . declarator @3 xdecls @4 compstmt_or_error   (21)
    fndef  ->  typed_declspecs setspecs . declarator error   (22)

    IDENTIFIER	shift  50
    TYPENAME	shift  154
    '*' 	shift  155
    '(' 	shift  156
    initdecls	shift  157
    initdcl	shift  158
    declarator	shift  159
    after_type_declarator	shift  160
    notype_declarator	shift  161



state 58

    declmods  ->  declmods SCSPEC .   (111)

    $default	reduce  111  (declmods)



state 59

    declmods  ->  declmods TYPE_QUAL .   (110)

    $default	reduce  110  (declmods)



state 60

    datadef  ->  declmods ';' .   (14)

    $default	reduce  14  (datadef)



state 61

    datadef  ->  declmods setspecs . notype_initdecls ';'   (12)
    fndef  ->  declmods setspecs . notype_declarator @5 xdecls @6 compstmt_or_error   (25)
    fndef  ->  declmods setspecs . notype_declarator error   (26)

    IDENTIFIER	shift  50
    '*' 	shift  51
    '(' 	shift  52
    notype_initdecls	shift  162
    notype_initdcl	shift  54
    notype_declarator	shift  163



state 62

    typed_declspecs  ->  declmods typespec . reserved_declspecs   (104)

    reserved_declspecs	shift  164

    $default	reduce  105  (reserved_declspecs)



state 63

    typed_declspecs  ->  typespec reserved_declspecs .   (103)
    reserved_declspecs  ->  reserved_declspecs . typespecqual_reserved   (106)
    reserved_declspecs  ->  reserved_declspecs . SCSPEC   (107)

    SCSPEC	shift  165
    TYPESPEC	shift  166
    TYPE_QUAL	shift  167
    ENUM	shift  9
    STRUCT	shift  10
    UNION	shift  11
    typespecqual_reserved	shift  168
    structsp	shift  169

    $default	reduce  103  (typed_declspecs)



state 64

    structsp  ->  ENUM '{' @15 . enumlist maybecomma_warn '}'   (181)

    IDENTIFIER	shift  35
    TYPENAME	shift  36
    CLASSNAME	shift  37
    identifier	shift  170
    enumlist	shift  171
    enumerator	shift  172



state 65

    structsp  ->  ENUM identifier '{' . @14 enumlist maybecomma_warn '}'   (179)

    @14 	shift  173

    $default	reduce  178  (@14)



state 66

    component_decl_list  ->  DEFS . '(' CLASSNAME ')'   (190)

    '(' 	shift  174



state 67

    structsp  ->  STRUCT '{' component_decl_list . '}'   (172)
    component_decl_list  ->  component_decl_list . component_decl ';'   (188)
    component_decl_list  ->  component_decl_list . ';'   (189)

    error	shift  175
    TYPENAME	shift  5
    TYPESPEC	shift  7
    TYPE_QUAL	shift  74
    ENUM	shift  9
    STRUCT	shift  10
    UNION	shift  11
    TYPEOF	shift  13
    CLASSNAME	shift  17
    ';' 	shift  176
    '}' 	shift  177
    typed_typespecs	shift  178
    typespec	shift  99
    structsp	shift  28
    component_decl	shift  179
    nonempty_type_quals	shift  180



state 68

    structsp  ->  STRUCT identifier '{' . @12 component_decl_list '}'   (171)

    @12 	shift  181

    $default	reduce  170  (@12)



state 69

    structsp  ->  UNION '{' component_decl_list . '}'   (176)
    component_decl_list  ->  component_decl_list . component_decl ';'   (188)
    component_decl_list  ->  component_decl_list . ';'   (189)

    error	shift  175
    TYPENAME	shift  5
    TYPESPEC	shift  7
    TYPE_QUAL	shift  74
    ENUM	shift  9
    STRUCT	shift  10
    UNION	shift  11
    TYPEOF	shift  13
    CLASSNAME	shift  17
    ';' 	shift  176
    '}' 	shift  182
    typed_typespecs	shift  178
    typespec	shift  99
    structsp	shift  28
    component_decl	shift  179
    nonempty_type_quals	shift  180



state 70

    structsp  ->  UNION identifier '{' . @13 component_decl_list '}'   (175)

    @13 	shift  183

    $default	reduce  174  (@13)



state 71

    string  ->  STRING .   (90)

    $default	reduce  90  (string)



state 72

    extdef  ->  ASM '(' string . ')' ';'   (10)
    string  ->  string . STRING   (91)

    STRING	shift  184
    ')' 	shift  185



state 73

    primary  ->  IDENTIFIER .   (74)

    $default	reduce  74  (primary)



state 74

    nonempty_type_quals  ->  TYPE_QUAL .   (208)

    $default	reduce  208  (nonempty_type_quals)



state 75

    primary  ->  CONSTANT .   (75)

    $default	reduce  75  (primary)



state 76

    unary_expr  ->  SIZEOF . unary_expr   (49)
    unary_expr  ->  SIZEOF . '(' typename ')'   (50)

    IDENTIFIER	shift  73
    CONSTANT	shift  75
    STRING	shift  71
    SIZEOF	shift  76
    ALIGNOF	shift  77
    SELECTOR	shift  78
    ENCODE	shift  79
    '&' 	shift  80
    '+' 	shift  81
    '-' 	shift  82
    '*' 	shift  83
    PLUSPLUS	shift  84
    MINUSMINUS	shift  85
    '(' 	shift  186
    '[' 	shift  87
    '~' 	shift  88
    '!' 	shift  89
    unop	shift  90
    unary_expr	shift  187
    primary	shift  96
    string	shift  97
    objcmessageexpr	shift  102
    objcselectorexpr	shift  103
    objcencodeexpr	shift  104



state 77

    unary_expr  ->  ALIGNOF . unary_expr   (51)
    unary_expr  ->  ALIGNOF . '(' typename ')'   (52)

    IDENTIFIER	shift  73
    CONSTANT	shift  75
    STRING	shift  71
    SIZEOF	shift  76
    ALIGNOF	shift  77
    SELECTOR	shift  78
    ENCODE	shift  79
    '&' 	shift  80
    '+' 	shift  81
    '-' 	shift  82
    '*' 	shift  83
    PLUSPLUS	shift  84
    MINUSMINUS	shift  85
    '(' 	shift  188
    '[' 	shift  87
    '~' 	shift  88
    '!' 	shift  89
    unop	shift  90
    unary_expr	shift  189
    primary	shift  96
    string	shift  97
    objcmessageexpr	shift  102
    objcselectorexpr	shift  103
    objcencodeexpr	shift  104



state 78

    objcselectorexpr  ->  SELECTOR . '(' selectorarg ')'   (435)

    '(' 	shift  190



state 79

    objcencodeexpr  ->  ENCODE . '(' typename ')'   (436)

    '(' 	shift  191



state 80

    unop  ->  '&' .   (34)

    $default	reduce  34  (unop)



state 81

    unop  ->  '+' .   (36)

    $default	reduce  36  (unop)



state 82

    unop  ->  '-' .   (35)

    $default	reduce  35  (unop)



state 83

    unary_expr  ->  '*' . cast_expr   (47)

    IDENTIFIER	shift  73
    CONSTANT	shift  75
    STRING	shift  71
    SIZEOF	shift  76
    ALIGNOF	shift  77
    SELECTOR	shift  78
    ENCODE	shift  79
    '&' 	shift  80
    '+' 	shift  81
    '-' 	shift  82
    '*' 	shift  83
    PLUSPLUS	shift  84
    MINUSMINUS	shift  85
    '(' 	shift  86
    '[' 	shift  87
    '~' 	shift  88
    '!' 	shift  89
    unop	shift  90
    unary_expr	shift  93
    cast_expr	shift  192
    primary	shift  96
    string	shift  97
    objcmessageexpr	shift  102
    objcselectorexpr	shift  103
    objcencodeexpr	shift  104



state 84

    unop  ->  PLUSPLUS .   (37)

    $default	reduce  37  (unop)



state 85

    unop  ->  MINUSMINUS .   (38)

    $default	reduce  38  (unop)



state 86

    cast_expr  ->  '(' . typename ')' cast_expr   (54)
    cast_expr  ->  '(' . typename ')' '{' initlist maybecomma '}'   (55)
    primary  ->  '(' . expr ')'   (77)
    primary  ->  '(' . error ')'   (78)
    primary  ->  '(' . @9 compstmt ')'   (80)

    error	shift  193
    IDENTIFIER	shift  73
    TYPENAME	shift  5
    TYPESPEC	shift  7
    TYPE_QUAL	shift  74
    CONSTANT	shift  75
    STRING	shift  71
    SIZEOF	shift  76
    ENUM	shift  9
    STRUCT	shift  10
    UNION	shift  11
    TYPEOF	shift  13
    ALIGNOF	shift  77
    SELECTOR	shift  78
    ENCODE	shift  79
    CLASSNAME	shift  17
    '&' 	shift  80
    '+' 	shift  81
    '-' 	shift  82
    '*' 	shift  83
    PLUSPLUS	shift  84
    MINUSMINUS	shift  85
    '(' 	shift  86
    '[' 	shift  87
    '~' 	shift  88
    '!' 	shift  89
    unop	shift  90
    expr	shift  194
    nonnull_exprlist	shift  92
    unary_expr	shift  93
    cast_expr	shift  94
    expr_no_commas	shift  95
    primary	shift  96
    @9  	shift  195
    string	shift  97
    typed_typespecs	shift  98
    typespec	shift  99
    structsp	shift  28
    typename	shift  196
    nonempty_type_quals	shift  101
    objcmessageexpr	shift  102
    objcselectorexpr	shift  103
    objcencodeexpr	shift  104

    '{' 	[reduce  79  (@9)]



state 87

    objcmessageexpr  ->  '[' . @54 receiver @55 messageargs ']'   (428)

    @54 	shift  197

    $default	reduce  426  (@54)



state 88

    unop  ->  '~' .   (39)

    $default	reduce  39  (unop)



state 89

    unop  ->  '!' .   (40)

    $default	reduce  40  (unop)



state 90

    unary_expr  ->  unop . cast_expr   (48)

    IDENTIFIER	shift  73
    CONSTANT	shift  75
    STRING	shift  71
    SIZEOF	shift  76
    ALIGNOF	shift  77
    SELECTOR	shift  78
    ENCODE	shift  79
    '&' 	shift  80
    '+' 	shift  81
    '-' 	shift  82
    '*' 	shift  83
    PLUSPLUS	shift  84
    MINUSMINUS	shift  85
    '(' 	shift  86
    '[' 	shift  87
    '~' 	shift  88
    '!' 	shift  89
    unop	shift  90
    unary_expr	shift  93
    cast_expr	shift  198
    primary	shift  96
    string	shift  97
    objcmessageexpr	shift  102
    objcselectorexpr	shift  103
    objcencodeexpr	shift  104



state 91

    typespec  ->  TYPEOF '(' expr . ')'   (120)

    ')' 	shift  199



state 92

    expr  ->  nonnull_exprlist .   (41)
    nonnull_exprlist  ->  nonnull_exprlist . ',' expr_no_commas   (45)

    ',' 	shift  200

    $default	reduce  41  (expr)



state 93

    cast_expr  ->  unary_expr .   (53)

    $default	reduce  53  (cast_expr)



state 94

    expr_no_commas  ->  cast_expr .   (56)

    $default	reduce  56  (expr_no_commas)



state 95

    nonnull_exprlist  ->  expr_no_commas .   (44)
    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (57)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (58)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (59)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (60)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (61)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (62)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (63)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (64)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (65)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (66)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (67)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (68)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (69)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (70)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (71)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (72)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (73)

    ASSIGN	shift  201
    '=' 	shift  202
    '?' 	shift  203
    OROR	shift  204
    ANDAND	shift  205
    '|' 	shift  206
    '^' 	shift  207
    '&' 	shift  208
    EQCOMPARE	shift  209
    ARITHCOMPARE	shift  210
    LSHIFT	shift  211
    RSHIFT	shift  212
    '+' 	shift  213
    '-' 	shift  214
    '*' 	shift  215
    '/' 	shift  216
    '%' 	shift  217

    $default	reduce  44  (nonnull_exprlist)



state 96

    unary_expr  ->  primary .   (46)
    primary  ->  primary . '(' exprlist ')'   (81)
    primary  ->  primary . '[' expr ']'   (82)
    primary  ->  primary . '.' identifier   (83)
    primary  ->  primary . POINTSAT identifier   (84)
    primary  ->  primary . PLUSPLUS   (85)
    primary  ->  primary . MINUSMINUS   (86)

    PLUSPLUS	shift  218
    MINUSMINUS	shift  219
    POINTSAT	shift  220
    '.' 	shift  221
    '(' 	shift  222
    '[' 	shift  223

    $default	reduce  46  (unary_expr)



state 97

    primary  ->  string .   (76)
    string  ->  string . STRING   (91)

    STRING	shift  184

    $default	reduce  76  (primary)



state 98

    typename  ->  typed_typespecs . absdcl   (204)

    '*' 	shift  224
    '(' 	shift  225
    '[' 	shift  226
    absdcl	shift  227
    absdcl1	shift  228

    $default	reduce  206  (absdcl)



state 99

    typed_typespecs  ->  typespec . reserved_typespecquals   (112)

    reserved_typespecquals	shift  229

    $default	reduce  114  (reserved_typespecquals)



state 100

    typespec  ->  TYPEOF '(' typename . ')'   (121)

    ')' 	shift  230



state 101

    typed_typespecs  ->  nonempty_type_quals . typespec reserved_typespecquals   (113)
    typename  ->  nonempty_type_quals . absdcl   (205)
    nonempty_type_quals  ->  nonempty_type_quals . TYPE_QUAL   (209)

    TYPENAME	shift  5
    TYPESPEC	shift  7
    TYPE_QUAL	shift  231
    ENUM	shift  9
    STRUCT	shift  10
    UNION	shift  11
    TYPEOF	shift  13
    CLASSNAME	shift  17
    '*' 	shift  224
    '(' 	shift  225
    '[' 	shift  226
    typespec	shift  232
    structsp	shift  28
    absdcl	shift  233
    absdcl1	shift  228

    $default	reduce  206  (absdcl)



state 102

    primary  ->  objcmessageexpr .   (87)

    $default	reduce  87  (primary)



state 103

    primary  ->  objcselectorexpr .   (88)

    $default	reduce  88  (primary)



state 104

    primary  ->  objcencodeexpr .   (89)

    $default	reduce  89  (primary)



state 105

    classdef  ->  INTERFACE identifier ':' . identifier '{' @34 ivar_decl_list '}' @35 methodprotolist END   (311)
    classdef  ->  INTERFACE identifier ':' . identifier @36 methodprotolist END   (313)

    IDENTIFIER	shift  35
    TYPENAME	shift  36
    CLASSNAME	shift  37
    identifier	shift  234



state 106

    classdef  ->  INTERFACE identifier '(' . identifier ')' @39 methodprotolist END   (321)

    IDENTIFIER	shift  35
    TYPENAME	shift  36
    CLASSNAME	shift  37
    identifier	shift  235



state 107

    classdef  ->  INTERFACE identifier '{' . @31 ivar_decl_list '}' @32 methodprotolist END   (306)

    @31 	shift  236

    $default	reduce  304  (@31)



state 108

    classdef  ->  INTERFACE identifier @33 . methodprotolist END   (308)

    methodprotolist	shift  237
    @47 	shift  238

    END 	reduce  346  (methodprotolist)
    $default	reduce  347  (@47)



state 109

    classdef  ->  IMPLEMENTATION identifier ':' . identifier '{' @38 ivar_decl_list '}'   (318)
    classdef  ->  IMPLEMENTATION identifier ':' . identifier   (319)

    IDENTIFIER	shift  35
    TYPENAME	shift  36
    CLASSNAME	shift  37
    identifier	shift  239



state 110

    classdef  ->  IMPLEMENTATION identifier '(' . identifier ')'   (322)

    IDENTIFIER	shift  35
    TYPENAME	shift  36
    CLASSNAME	shift  37
    identifier	shift  240



state 111

    classdef  ->  IMPLEMENTATION identifier '{' . @37 ivar_decl_list '}'   (315)

    @37 	shift  241

    $default	reduce  314  (@37)



state 112

    selector  ->  IDENTIFIER .   (389)

    $default	reduce  389  (selector)



state 113

    selector  ->  TYPENAME .   (390)

    $default	reduce  390  (selector)



state 114

    reservedwords  ->  TYPESPEC .   (411)

    $default	reduce  411  (reservedwords)



state 115

    reservedwords  ->  TYPE_QUAL .   (412)

    $default	reduce  412  (reservedwords)



state 116

    reservedwords  ->  SIZEOF .   (408)

    $default	reduce  408  (reservedwords)



state 117

    reservedwords  ->  ENUM .   (392)

    $default	reduce  392  (reservedwords)



state 118

    reservedwords  ->  STRUCT .   (393)

    $default	reduce  393  (reservedwords)



state 119

    reservedwords  ->  UNION .   (394)

    $default	reduce  394  (reservedwords)



state 120

    reservedwords  ->  IF .   (395)

    $default	reduce  395  (reservedwords)



state 121

    reservedwords  ->  ELSE .   (396)

    $default	reduce  396  (reservedwords)



state 122

    reservedwords  ->  WHILE .   (397)

    $default	reduce  397  (reservedwords)



state 123

    reservedwords  ->  DO .   (398)

    $default	reduce  398  (reservedwords)



state 124

    reservedwords  ->  FOR .   (399)

    $default	reduce  399  (reservedwords)



state 125

    reservedwords  ->  SWITCH .   (400)

    $default	reduce  400  (reservedwords)



state 126

    reservedwords  ->  CASE .   (401)

    $default	reduce  401  (reservedwords)



state 127

    reservedwords  ->  DEFAULT .   (402)

    $default	reduce  402  (reservedwords)



state 128

    reservedwords  ->  BREAK .   (403)

    $default	reduce  403  (reservedwords)



state 129

    reservedwords  ->  CONTINUE .   (404)

    $default	reduce  404  (reservedwords)



state 130

    reservedwords  ->  RETURN .   (405)

    $default	reduce  405  (reservedwords)



state 131

    reservedwords  ->  GOTO .   (406)

    $default	reduce  406  (reservedwords)



state 132

    reservedwords  ->  ASM .   (407)

    $default	reduce  407  (reservedwords)



state 133

    reservedwords  ->  TYPEOF .   (409)

    $default	reduce  409  (reservedwords)



state 134

    reservedwords  ->  ALIGNOF .   (410)

    $default	reduce  410  (reservedwords)



state 135

    keyworddecl  ->  ':' . '(' typename ')' identifier   (415)
    keyworddecl  ->  ':' . identifier   (416)

    IDENTIFIER	shift  35
    TYPENAME	shift  36
    CLASSNAME	shift  37
    '(' 	shift  242
    identifier	shift  243



state 136

    methoddecl  ->  '(' . typename ')' unaryselector   (362)
    methoddecl  ->  '(' . typename ')' keywordselector optparmlist   (364)

    TYPENAME	shift  5
    TYPESPEC	shift  7
    TYPE_QUAL	shift  74
    ENUM	shift  9
    STRUCT	shift  10
    UNION	shift  11
    TYPEOF	shift  13
    CLASSNAME	shift  17
    typed_typespecs	shift  98
    typespec	shift  99
    structsp	shift  28
    typename	shift  244
    nonempty_type_quals	shift  101



state 137

    methoddef  ->  '+' @41 methoddecl . @42 optarglist @43 compstmt_or_error   (341)

    @42 	shift  245

    $default	reduce  339  (@42)



state 138

    methoddecl  ->  unaryselector .   (363)

    $default	reduce  363  (methoddecl)



state 139

    methoddecl  ->  keywordselector . optparmlist   (365)
    keywordselector  ->  keywordselector . keyworddecl   (388)

    IDENTIFIER	shift  112
    TYPENAME	shift  113
    TYPESPEC	shift  114
    TYPE_QUAL	shift  115
    SIZEOF	shift  116
    ENUM	shift  117
    STRUCT	shift  118
    UNION	shift  119
    IF  	shift  120
    ELSE	shift  121
    WHILE	shift  122
    DO  	shift  123
    FOR 	shift  124
    SWITCH	shift  125
    CASE	shift  126
    DEFAULT	shift  127
    BREAK	shift  128
    CONTINUE	shift  129
    RETURN	shift  130
    GOTO	shift  131
    ASM 	shift  132
    TYPEOF	shift  133
    ALIGNOF	shift  134
    ':' 	shift  135
    ',' 	shift  246
    optparmlist	shift  247
    selector	shift  248
    reservedwords	shift  141
    keyworddecl	shift  249

    $default	reduce  382  (optparmlist)



state 140

    unaryselector  ->  selector .   (386)
    keyworddecl  ->  selector . ':' '(' typename ')' identifier   (413)
    keyworddecl  ->  selector . ':' identifier   (414)

    ':' 	shift  250

    $default	reduce  386  (unaryselector)



state 141

    selector  ->  reservedwords .   (391)

    $default	reduce  391  (selector)



state 142

    keywordselector  ->  keyworddecl .   (387)

    $default	reduce  387  (keywordselector)



state 143

    methoddef  ->  '-' @44 methoddecl . @45 optarglist @46 compstmt_or_error   (345)

    @45 	shift  251

    $default	reduce  343  (@45)



state 144

    notype_declarator  ->  '*' type_quals . notype_declarator   (166)
    type_quals  ->  type_quals . TYPE_QUAL   (211)

    IDENTIFIER	shift  50
    TYPE_QUAL	shift  252
    '*' 	shift  51
    '(' 	shift  52
    notype_declarator	shift  253



state 145

    notype_declarator  ->  notype_declarator . '(' parmlist_or_identifiers   (164)
    notype_declarator  ->  '(' notype_declarator . ')'   (165)
    notype_declarator  ->  notype_declarator . '[' expr ']'   (167)
    notype_declarator  ->  notype_declarator . '[' ']'   (168)

    '(' 	shift  150
    '[' 	shift  151
    ')' 	shift  254



state 146

    datadef  ->  setspecs notype_initdecls ';' .   (11)

    $default	reduce  11  (datadef)



state 147

    notype_initdecls  ->  notype_initdecls ',' . initdcl   (128)

    IDENTIFIER	shift  50
    TYPENAME	shift  154
    '*' 	shift  155
    '(' 	shift  156
    initdcl	shift  255
    declarator	shift  256
    after_type_declarator	shift  160
    notype_declarator	shift  161



state 148

    fndef  ->  setspecs notype_declarator error .   (30)

    $default	reduce  30  (fndef)



state 149

    maybeasm  ->  ASM . '(' string ')'   (130)

    '(' 	shift  257



state 150

    notype_declarator  ->  notype_declarator '(' . parmlist_or_identifiers   (164)

    parmlist_or_identifiers	shift  258
    @30 	shift  259

    $default	reduce  282  (@30)



state 151

    notype_declarator  ->  notype_declarator '[' . expr ']'   (167)
    notype_declarator  ->  notype_declarator '[' . ']'   (168)

    IDENTIFIER	shift  73
    CONSTANT	shift  75
    STRING	shift  71
    SIZEOF	shift  76
    ALIGNOF	shift  77
    SELECTOR	shift  78
    ENCODE	shift  79
    '&' 	shift  80
    '+' 	shift  81
    '-' 	shift  82
    '*' 	shift  83
    PLUSPLUS	shift  84
    MINUSMINUS	shift  85
    '(' 	shift  86
    '[' 	shift  87
    '~' 	shift  88
    '!' 	shift  89
    ']' 	shift  260
    unop	shift  90
    expr	shift  261
    nonnull_exprlist	shift  92
    unary_expr	shift  93
    cast_expr	shift  94
    expr_no_commas	shift  95
    primary	shift  96
    string	shift  97
    objcmessageexpr	shift  102
    objcselectorexpr	shift  103
    objcencodeexpr	shift  104



state 152

    fndef  ->  setspecs notype_declarator @7 . xdecls @8 compstmt_or_error   (29)

    error	shift  262
    TYPENAME	shift  5
    SCSPEC	shift  6
    TYPESPEC	shift  7
    TYPE_QUAL	shift  8
    ENUM	shift  9
    STRUCT	shift  10
    UNION	shift  11
    TYPEOF	shift  13
    CLASSNAME	shift  17
    xdecls	shift  263
    decls	shift  264
    decl	shift  265
    typed_declspecs	shift  266
    declmods	shift  267
    typespec	shift  27
    structsp	shift  28
    errstmt	shift  268

    error	[reduce  92  (xdecls)]
    '{' 	[reduce  92  (xdecls)]



state 153

    notype_initdcl  ->  notype_declarator maybeasm . maybe_attribute '=' @11 init   (135)
    notype_initdcl  ->  notype_declarator maybeasm . maybe_attribute   (136)

    ATTRIBUTE	shift  269
    maybe_attribute	shift  270

    $default	reduce  137  (maybe_attribute)



state 154

    after_type_declarator  ->  TYPENAME .   (158)

    $default	reduce  158  (after_type_declarator)



state 155

    after_type_declarator  ->  '*' . type_quals after_type_declarator   (157)
    notype_declarator  ->  '*' . type_quals notype_declarator   (166)

    type_quals	shift  271

    $default	reduce  210  (type_quals)



state 156

    after_type_declarator  ->  '(' . after_type_declarator ')'   (153)
    notype_declarator  ->  '(' . notype_declarator ')'   (165)

    IDENTIFIER	shift  50
    TYPENAME	shift  154
    '*' 	shift  155
    '(' 	shift  156
    after_type_declarator	shift  272
    notype_declarator	shift  145



state 157

    datadef  ->  typed_declspecs setspecs initdecls . ';'   (13)
    initdecls  ->  initdecls . ',' initdcl   (126)

    ';' 	shift  273
    ',' 	shift  274



state 158

    initdecls  ->  initdcl .   (125)

    $default	reduce  125  (initdecls)



state 159

    fndef  ->  typed_declspecs setspecs declarator . @3 xdecls @4 compstmt_or_error   (21)
    fndef  ->  typed_declspecs setspecs declarator . error   (22)
    initdcl  ->  declarator . maybeasm maybe_attribute '=' @10 init   (132)
    initdcl  ->  declarator . maybeasm maybe_attribute   (133)

    error	shift  275
    ASM 	shift  149
    @3  	shift  276
    maybeasm	shift  277

    error	[reduce  19  (@3)]
    TYPENAME	reduce  19  (@3)
    SCSPEC	reduce  19  (@3)
    TYPESPEC	reduce  19  (@3)
    TYPE_QUAL	reduce  19  (@3)
    ENUM	reduce  19  (@3)
    STRUCT	reduce  19  (@3)
    UNION	reduce  19  (@3)
    TYPEOF	reduce  19  (@3)
    ATTRIBUTE	reduce  129  (maybeasm)
    CLASSNAME	reduce  19  (@3)
    '=' 	reduce  129  (maybeasm)
    ';' 	reduce  129  (maybeasm)
    ',' 	reduce  129  (maybeasm)
    '{' 	reduce  19  (@3)



state 160

    declarator  ->  after_type_declarator .   (151)
    after_type_declarator  ->  after_type_declarator . '(' parmlist_or_identifiers   (154)
    after_type_declarator  ->  after_type_declarator . '[' expr ']'   (155)
    after_type_declarator  ->  after_type_declarator . '[' ']'   (156)

    '(' 	shift  278
    '[' 	shift  279

    $default	reduce  151  (declarator)



state 161

    declarator  ->  notype_declarator .   (152)
    notype_declarator  ->  notype_declarator . '(' parmlist_or_identifiers   (164)
    notype_declarator  ->  notype_declarator . '[' expr ']'   (167)
    notype_declarator  ->  notype_declarator . '[' ']'   (168)

    '(' 	shift  150
    '[' 	shift  151

    $default	reduce  152  (declarator)



state 162

    datadef  ->  declmods setspecs notype_initdecls . ';'   (12)
    notype_initdecls  ->  notype_initdecls . ',' initdcl   (128)

    ';' 	shift  280
    ',' 	shift  147



state 163

    fndef  ->  declmods setspecs notype_declarator . @5 xdecls @6 compstmt_or_error   (25)
    fndef  ->  declmods setspecs notype_declarator . error   (26)
    notype_initdcl  ->  notype_declarator . maybeasm maybe_attribute '=' @11 init   (135)
    notype_initdcl  ->  notype_declarator . maybeasm maybe_attribute   (136)
    notype_declarator  ->  notype_declarator . '(' parmlist_or_identifiers   (164)
    notype_declarator  ->  notype_declarator . '[' expr ']'   (167)
    notype_declarator  ->  notype_declarator . '[' ']'   (168)

    error	shift  281
    ASM 	shift  149
    '(' 	shift  150
    '[' 	shift  151
    @5  	shift  282
    maybeasm	shift  153

    error	[reduce  23  (@5)]
    TYPENAME	reduce  23  (@5)
    SCSPEC	reduce  23  (@5)
    TYPESPEC	reduce  23  (@5)
    TYPE_QUAL	reduce  23  (@5)
    ENUM	reduce  23  (@5)
    STRUCT	reduce  23  (@5)
    UNION	reduce  23  (@5)
    TYPEOF	reduce  23  (@5)
    ATTRIBUTE	reduce  129  (maybeasm)
    CLASSNAME	reduce  23  (@5)
    '=' 	reduce  129  (maybeasm)
    ';' 	reduce  129  (maybeasm)
    ',' 	reduce  129  (maybeasm)
    '{' 	reduce  23  (@5)



state 164

    typed_declspecs  ->  declmods typespec reserved_declspecs .   (104)
    reserved_declspecs  ->  reserved_declspecs . typespecqual_reserved   (106)
    reserved_declspecs  ->  reserved_declspecs . SCSPEC   (107)

    SCSPEC	shift  165
    TYPESPEC	shift  166
    TYPE_QUAL	shift  167
    ENUM	shift  9
    STRUCT	shift  10
    UNION	shift  11
    typespecqual_reserved	shift  168
    structsp	shift  169

    $default	reduce  104  (typed_declspecs)



state 165

    reserved_declspecs  ->  reserved_declspecs SCSPEC .   (107)

    $default	reduce  107  (reserved_declspecs)



state 166

    typespecqual_reserved  ->  TYPESPEC .   (122)

    $default	reduce  122  (typespecqual_reserved)



state 167

    typespecqual_reserved  ->  TYPE_QUAL .   (123)

    $default	reduce  123  (typespecqual_reserved)



state 168

    reserved_declspecs  ->  reserved_declspecs typespecqual_reserved .   (106)

    $default	reduce  106  (reserved_declspecs)



state 169

    typespecqual_reserved  ->  structsp .   (124)

    $default	reduce  124  (typespecqual_reserved)



state 170

    enumerator  ->  identifier .   (202)
    enumerator  ->  identifier . '=' expr_no_commas   (203)

    '=' 	shift  283

    $default	reduce  202  (enumerator)



state 171

    structsp  ->  ENUM '{' @15 enumlist . maybecomma_warn '}'   (181)
    enumlist  ->  enumlist . ',' enumerator   (201)

    ',' 	shift  284
    maybecomma_warn	shift  285

    $default	reduce  185  (maybecomma_warn)



state 172

    enumlist  ->  enumerator .   (200)

    $default	reduce  200  (enumlist)



state 173

    structsp  ->  ENUM identifier '{' @14 . enumlist maybecomma_warn '}'   (179)

    IDENTIFIER	shift  35
    TYPENAME	shift  36
    CLASSNAME	shift  37
    identifier	shift  170
    enumlist	shift  286
    enumerator	shift  172



state 174

    component_decl_list  ->  DEFS '(' . CLASSNAME ')'   (190)

    CLASSNAME	shift  287



state 175

    component_decl  ->  error .   (193)

    $default	reduce  193  (component_decl)



state 176

    component_decl_list  ->  component_decl_list ';' .   (189)

    $default	reduce  189  (component_decl_list)



state 177

    structsp  ->  STRUCT '{' component_decl_list '}' .   (172)

    $default	reduce  172  (structsp)



state 178

    component_decl  ->  typed_typespecs . setspecs components   (191)

    setspecs	shift  288

    $default	reduce  98  (setspecs)



state 179

    component_decl_list  ->  component_decl_list component_decl . ';'   (188)

    ';' 	shift  289



state 180

    typed_typespecs  ->  nonempty_type_quals . typespec reserved_typespecquals   (113)
    component_decl  ->  nonempty_type_quals . setspecs components   (192)
    nonempty_type_quals  ->  nonempty_type_quals . TYPE_QUAL   (209)

    TYPENAME	shift  5
    TYPESPEC	shift  7
    TYPE_QUAL	shift  231
    ENUM	shift  9
    STRUCT	shift  10
    UNION	shift  11
    TYPEOF	shift  13
    CLASSNAME	shift  17
    setspecs	shift  290
    typespec	shift  232
    structsp	shift  28

    TYPENAME	[reduce  98  (setspecs)]
    $default	reduce  98  (setspecs)



state 181

    structsp  ->  STRUCT identifier '{' @12 . component_decl_list '}'   (171)

    DEFS	shift  66
    component_decl_list	shift  291

    $default	reduce  187  (component_decl_list)



state 182

    structsp  ->  UNION '{' component_decl_list '}' .   (176)

    $default	reduce  176  (structsp)



state 183

    structsp  ->  UNION identifier '{' @13 . component_decl_list '}'   (175)

    DEFS	shift  66
    component_decl_list	shift  292

    $default	reduce  187  (component_decl_list)



state 184

    string  ->  string STRING .   (91)

    $default	reduce  91  (string)



state 185

    extdef  ->  ASM '(' string ')' . ';'   (10)

    ';' 	shift  293



state 186

    unary_expr  ->  SIZEOF '(' . typename ')'   (50)
    primary  ->  '(' . expr ')'   (77)
    primary  ->  '(' . error ')'   (78)
    primary  ->  '(' . @9 compstmt ')'   (80)

    error	shift  193
    IDENTIFIER	shift  73
    TYPENAME	shift  5
    TYPESPEC	shift  7
    TYPE_QUAL	shift  74
    CONSTANT	shift  75
    STRING	shift  71
    SIZEOF	shift  76
    ENUM	shift  9
    STRUCT	shift  10
    UNION	shift  11
    TYPEOF	shift  13
    ALIGNOF	shift  77
    SELECTOR	shift  78
    ENCODE	shift  79
    CLASSNAME	shift  17
    '&' 	shift  80
    '+' 	shift  81
    '-' 	shift  82
    '*' 	shift  83
    PLUSPLUS	shift  84
    MINUSMINUS	shift  85
    '(' 	shift  86
    '[' 	shift  87
    '~' 	shift  88
    '!' 	shift  89
    unop	shift  90
    expr	shift  194
    nonnull_exprlist	shift  92
    unary_expr	shift  93
    cast_expr	shift  94
    expr_no_commas	shift  95
    primary	shift  96
    @9  	shift  195
    string	shift  97
    typed_typespecs	shift  98
    typespec	shift  99
    structsp	shift  28
    typename	shift  294
    nonempty_type_quals	shift  101
    objcmessageexpr	shift  102
    objcselectorexpr	shift  103
    objcencodeexpr	shift  104

    '{' 	[reduce  79  (@9)]



state 187

    unary_expr  ->  SIZEOF unary_expr .   (49)

    $default	reduce  49  (unary_expr)



state 188

    unary_expr  ->  ALIGNOF '(' . typename ')'   (52)
    primary  ->  '(' . expr ')'   (77)
    primary  ->  '(' . error ')'   (78)
    primary  ->  '(' . @9 compstmt ')'   (80)

    error	shift  193
    IDENTIFIER	shift  73
    TYPENAME	shift  5
    TYPESPEC	shift  7
    TYPE_QUAL	shift  74
    CONSTANT	shift  75
    STRING	shift  71
    SIZEOF	shift  76
    ENUM	shift  9
    STRUCT	shift  10
    UNION	shift  11
    TYPEOF	shift  13
    ALIGNOF	shift  77
    SELECTOR	shift  78
    ENCODE	shift  79
    CLASSNAME	shift  17
    '&' 	shift  80
    '+' 	shift  81
    '-' 	shift  82
    '*' 	shift  83
    PLUSPLUS	shift  84
    MINUSMINUS	shift  85
    '(' 	shift  86
    '[' 	shift  87
    '~' 	shift  88
    '!' 	shift  89
    unop	shift  90
    expr	shift  194
    nonnull_exprlist	shift  92
    unary_expr	shift  93
    cast_expr	shift  94
    expr_no_commas	shift  95
    primary	shift  96
    @9  	shift  195
    string	shift  97
    typed_typespecs	shift  98
    typespec	shift  99
    structsp	shift  28
    typename	shift  295
    nonempty_type_quals	shift  101
    objcmessageexpr	shift  102
    objcselectorexpr	shift  103
    objcencodeexpr	shift  104

    '{' 	[reduce  79  (@9)]



state 189

    unary_expr  ->  ALIGNOF unary_expr .   (51)

    $default	reduce  51  (unary_expr)



state 190

    objcselectorexpr  ->  SELECTOR '(' . selectorarg ')'   (435)

    IDENTIFIER	shift  112
    TYPENAME	shift  113
    TYPESPEC	shift  114
    TYPE_QUAL	shift  115
    SIZEOF	shift  116
    ENUM	shift  117
    STRUCT	shift  118
    UNION	shift  119
    IF  	shift  120
    ELSE	shift  121
    WHILE	shift  122
    DO  	shift  123
    FOR 	shift  124
    SWITCH	shift  125
    CASE	shift  126
    DEFAULT	shift  127
    BREAK	shift  128
    CONTINUE	shift  129
    RETURN	shift  130
    GOTO	shift  131
    ASM 	shift  132
    TYPEOF	shift  133
    ALIGNOF	shift  134
    ':' 	shift  296
    selector	shift  297
    reservedwords	shift  141
    selectorarg	shift  298
    keywordnamelist	shift  299
    keywordname	shift  300



state 191

    objcencodeexpr  ->  ENCODE '(' . typename ')'   (436)

    TYPENAME	shift  5
    TYPESPEC	shift  7
    TYPE_QUAL	shift  74
    ENUM	shift  9
    STRUCT	shift  10
    UNION	shift  11
    TYPEOF	shift  13
    CLASSNAME	shift  17
    typed_typespecs	shift  98
    typespec	shift  99
    structsp	shift  28
    typename	shift  301
    nonempty_type_quals	shift  101



state 192

    unary_expr  ->  '*' cast_expr .   (47)

    $default	reduce  47  (unary_expr)



state 193

    primary  ->  '(' error . ')'   (78)

    ')' 	shift  302



state 194

    primary  ->  '(' expr . ')'   (77)

    ')' 	shift  303



state 195

    primary  ->  '(' @9 . compstmt ')'   (80)

    '{' 	shift  304
    compstmt	shift  305



state 196

    cast_expr  ->  '(' typename . ')' cast_expr   (54)
    cast_expr  ->  '(' typename . ')' '{' initlist maybecomma '}'   (55)

    ')' 	shift  306



state 197

    objcmessageexpr  ->  '[' @54 . receiver @55 messageargs ']'   (428)

    IDENTIFIER	shift  73
    CONSTANT	shift  75
    STRING	shift  71
    SIZEOF	shift  76
    ALIGNOF	shift  77
    SELECTOR	shift  78
    ENCODE	shift  79
    CLASSNAME	shift  307
    '&' 	shift  80
    '+' 	shift  81
    '-' 	shift  82
    '*' 	shift  83
    PLUSPLUS	shift  84
    MINUSMINUS	shift  85
    '(' 	shift  86
    '[' 	shift  87
    '~' 	shift  88
    '!' 	shift  89
    unop	shift  90
    expr	shift  308
    nonnull_exprlist	shift  92
    unary_expr	shift  93
    cast_expr	shift  94
    expr_no_commas	shift  95
    primary	shift  96
    string	shift  97
    receiver	shift  309
    objcmessageexpr	shift  102
    objcselectorexpr	shift  103
    objcencodeexpr	shift  104



state 198

    unary_expr  ->  unop cast_expr .   (48)

    $default	reduce  48  (unary_expr)



state 199

    typespec  ->  TYPEOF '(' expr ')' .   (120)

    $default	reduce  120  (typespec)



state 200

    nonnull_exprlist  ->  nonnull_exprlist ',' . expr_no_commas   (45)

    IDENTIFIER	shift  73
    CONSTANT	shift  75
    STRING	shift  71
    SIZEOF	shift  76
    ALIGNOF	shift  77
    SELECTOR	shift  78
    ENCODE	shift  79
    '&' 	shift  80
    '+' 	shift  81
    '-' 	shift  82
    '*' 	shift  83
    PLUSPLUS	shift  84
    MINUSMINUS	shift  85
    '(' 	shift  86
    '[' 	shift  87
    '~' 	shift  88
    '!' 	shift  89
    unop	shift  90
    unary_expr	shift  93
    cast_expr	shift  94
    expr_no_commas	shift  310
    primary	shift  96
    string	shift  97
    objcmessageexpr	shift  102
    objcselectorexpr	shift  103
    objcencodeexpr	shift  104



state 201

    expr_no_commas  ->  expr_no_commas ASSIGN . expr_no_commas   (73)

    IDENTIFIER	shift  73
    CONSTANT	shift  75
    STRING	shift  71
    SIZEOF	shift  76
    ALIGNOF	shift  77
    SELECTOR	shift  78
    ENCODE	shift  79
    '&' 	shift  80
    '+' 	shift  81
    '-' 	shift  82
    '*' 	shift  83
    PLUSPLUS	shift  84
    MINUSMINUS	shift  85
    '(' 	shift  86
    '[' 	shift  87
    '~' 	shift  88
    '!' 	shift  89
    unop	shift  90
    unary_expr	shift  93
    cast_expr	shift  94
    expr_no_commas	shift  311
    primary	shift  96
    string	shift  97
    objcmessageexpr	shift  102
    objcselectorexpr	shift  103
    objcencodeexpr	shift  104



state 202

    expr_no_commas  ->  expr_no_commas '=' . expr_no_commas   (72)

    IDENTIFIER	shift  73
    CONSTANT	shift  75
    STRING	shift  71
    SIZEOF	shift  76
    ALIGNOF	shift  77
    SELECTOR	shift  78
    ENCODE	shift  79
    '&' 	shift  80
    '+' 	shift  81
    '-' 	shift  82
    '*' 	shift  83
    PLUSPLUS	shift  84
    MINUSMINUS	shift  85
    '(' 	shift  86
    '[' 	shift  87
    '~' 	shift  88
    '!' 	shift  89
    unop	shift  90
    unary_expr	shift  93
    cast_expr	shift  94
    expr_no_commas	shift  312
    primary	shift  96
    string	shift  97
    objcmessageexpr	shift  102
    objcselectorexpr	shift  103
    objcencodeexpr	shift  104



state 203

    expr_no_commas  ->  expr_no_commas '?' . xexpr ':' expr_no_commas   (71)

    IDENTIFIER	shift  73
    CONSTANT	shift  75
    STRING	shift  71
    SIZEOF	shift  76
    ALIGNOF	shift  77
    SELECTOR	shift  78
    ENCODE	shift  79
    '&' 	shift  80
    '+' 	shift  81
    '-' 	shift  82
    '*' 	shift  83
    PLUSPLUS	shift  84
    MINUSMINUS	shift  85
    '(' 	shift  86
    '[' 	shift  87
    '~' 	shift  88
    '!' 	shift  89
    unop	shift  90
    expr	shift  313
    nonnull_exprlist	shift  92
    unary_expr	shift  93
    cast_expr	shift  94
    expr_no_commas	shift  95
    primary	shift  96
    string	shift  97
    xexpr	shift  314
    objcmessageexpr	shift  102
    objcselectorexpr	shift  103
    objcencodeexpr	shift  104

    $default	reduce  271  (xexpr)



state 204

    expr_no_commas  ->  expr_no_commas OROR . expr_no_commas   (70)

    IDENTIFIER	shift  73
    CONSTANT	shift  75
    STRING	shift  71
    SIZEOF	shift  76
    ALIGNOF	shift  77
    SELECTOR	shift  78
    ENCODE	shift  79
    '&' 	shift  80
    '+' 	shift  81
    '-' 	shift  82
    '*' 	shift  83
    PLUSPLUS	shift  84
    MINUSMINUS	shift  85
    '(' 	shift  86
    '[' 	shift  87
    '~' 	shift  88
    '!' 	shift  89
    unop	shift  90
    unary_expr	shift  93
    cast_expr	shift  94
    expr_no_commas	shift  315
    primary	shift  96
    string	shift  97
    objcmessageexpr	shift  102
    objcselectorexpr	shift  103
    objcencodeexpr	shift  104



state 205

    expr_no_commas  ->  expr_no_commas ANDAND . expr_no_commas   (69)

    IDENTIFIER	shift  73
    CONSTANT	shift  75
    STRING	shift  71
    SIZEOF	shift  76
    ALIGNOF	shift  77
    SELECTOR	shift  78
    ENCODE	shift  79
    '&' 	shift  80
    '+' 	shift  81
    '-' 	shift  82
    '*' 	shift  83
    PLUSPLUS	shift  84
    MINUSMINUS	shift  85
    '(' 	shift  86
    '[' 	shift  87
    '~' 	shift  88
    '!' 	shift  89
    unop	shift  90
    unary_expr	shift  93
    cast_expr	shift  94
    expr_no_commas	shift  316
    primary	shift  96
    string	shift  97
    objcmessageexpr	shift  102
    objcselectorexpr	shift  103
    objcencodeexpr	shift  104



state 206

    expr_no_commas  ->  expr_no_commas '|' . expr_no_commas   (67)

    IDENTIFIER	shift  73
    CONSTANT	shift  75
    STRING	shift  71
    SIZEOF	shift  76
    ALIGNOF	shift  77
    SELECTOR	shift  78
    ENCODE	shift  79
    '&' 	shift  80
    '+' 	shift  81
    '-' 	shift  82
    '*' 	shift  83
    PLUSPLUS	shift  84
    MINUSMINUS	shift  85
    '(' 	shift  86
    '[' 	shift  87
    '~' 	shift  88
    '!' 	shift  89
    unop	shift  90
    unary_expr	shift  93
    cast_expr	shift  94
    expr_no_commas	shift  317
    primary	shift  96
    string	shift  97
    objcmessageexpr	shift  102
    objcselectorexpr	shift  103
    objcencodeexpr	shift  104



state 207

    expr_no_commas  ->  expr_no_commas '^' . expr_no_commas   (68)

    IDENTIFIER	shift  73
    CONSTANT	shift  75
    STRING	shift  71
    SIZEOF	shift  76
    ALIGNOF	shift  77
    SELECTOR	shift  78
    ENCODE	shift  79
    '&' 	shift  80
    '+' 	shift  81
    '-' 	shift  82
    '*' 	shift  83
    PLUSPLUS	shift  84
    MINUSMINUS	shift  85
    '(' 	shift  86
    '[' 	shift  87
    '~' 	shift  88
    '!' 	shift  89
    unop	shift  90
    unary_expr	shift  93
    cast_expr	shift  94
    expr_no_commas	shift  318
    primary	shift  96
    string	shift  97
    objcmessageexpr	shift  102
    objcselectorexpr	shift  103
    objcencodeexpr	shift  104



state 208

    expr_no_commas  ->  expr_no_commas '&' . expr_no_commas   (66)

    IDENTIFIER	shift  73
    CONSTANT	shift  75
    STRING	shift  71
    SIZEOF	shift  76
    ALIGNOF	shift  77
    SELECTOR	shift  78
    ENCODE	shift  79
    '&' 	shift  80
    '+' 	shift  81
    '-' 	shift  82
    '*' 	shift  83
    PLUSPLUS	shift  84
    MINUSMINUS	shift  85
    '(' 	shift  86
    '[' 	shift  87
    '~' 	shift  88
    '!' 	shift  89
    unop	shift  90
    unary_expr	shift  93
    cast_expr	shift  94
    expr_no_commas	shift  319
    primary	shift  96
    string	shift  97
    objcmessageexpr	shift  102
    objcselectorexpr	shift  103
    objcencodeexpr	shift  104



state 209

    expr_no_commas  ->  expr_no_commas EQCOMPARE . expr_no_commas   (65)

    IDENTIFIER	shift  73
    CONSTANT	shift  75
    STRING	shift  71
    SIZEOF	shift  76
    ALIGNOF	shift  77
    SELECTOR	shift  78
    ENCODE	shift  79
    '&' 	shift  80
    '+' 	shift  81
    '-' 	shift  82
    '*' 	shift  83
    PLUSPLUS	shift  84
    MINUSMINUS	shift  85
    '(' 	shift  86
    '[' 	shift  87
    '~' 	shift  88
    '!' 	shift  89
    unop	shift  90
    unary_expr	shift  93
    cast_expr	shift  94
    expr_no_commas	shift  320
    primary	shift  96
    string	shift  97
    objcmessageexpr	shift  102
    objcselectorexpr	shift  103
    objcencodeexpr	shift  104



state 210

    expr_no_commas  ->  expr_no_commas ARITHCOMPARE . expr_no_commas   (64)

    IDENTIFIER	shift  73
    CONSTANT	shift  75
    STRING	shift  71
    SIZEOF	shift  76
    ALIGNOF	shift  77
    SELECTOR	shift  78
    ENCODE	shift  79
    '&' 	shift  80
    '+' 	shift  81
    '-' 	shift  82
    '*' 	shift  83
    PLUSPLUS	shift  84
    MINUSMINUS	shift  85
    '(' 	shift  86
    '[' 	shift  87
    '~' 	shift  88
    '!' 	shift  89
    unop	shift  90
    unary_expr	shift  93
    cast_expr	shift  94
    expr_no_commas	shift  321
    primary	shift  96
    string	shift  97
    objcmessageexpr	shift  102
    objcselectorexpr	shift  103
    objcencodeexpr	shift  104



state 211

    expr_no_commas  ->  expr_no_commas LSHIFT . expr_no_commas   (62)

    IDENTIFIER	shift  73
    CONSTANT	shift  75
    STRING	shift  71
    SIZEOF	shift  76
    ALIGNOF	shift  77
    SELECTOR	shift  78
    ENCODE	shift  79
    '&' 	shift  80
    '+' 	shift  81
    '-' 	shift  82
    '*' 	shift  83
    PLUSPLUS	shift  84
    MINUSMINUS	shift  85
    '(' 	shift  86
    '[' 	shift  87
    '~' 	shift  88
    '!' 	shift  89
    unop	shift  90
    unary_expr	shift  93
    cast_expr	shift  94
    expr_no_commas	shift  322
    primary	shift  96
    string	shift  97
    objcmessageexpr	shift  102
    objcselectorexpr	shift  103
    objcencodeexpr	shift  104



state 212

    expr_no_commas  ->  expr_no_commas RSHIFT . expr_no_commas   (63)

    IDENTIFIER	shift  73
    CONSTANT	shift  75
    STRING	shift  71
    SIZEOF	shift  76
    ALIGNOF	shift  77
    SELECTOR	shift  78
    ENCODE	shift  79
    '&' 	shift  80
    '+' 	shift  81
    '-' 	shift  82
    '*' 	shift  83
    PLUSPLUS	shift  84
    MINUSMINUS	shift  85
    '(' 	shift  86
    '[' 	shift  87
    '~' 	shift  88
    '!' 	shift  89
    unop	shift  90
    unary_expr	shift  93
    cast_expr	shift  94
    expr_no_commas	shift  323
    primary	shift  96
    string	shift  97
    objcmessageexpr	shift  102
    objcselectorexpr	shift  103
    objcencodeexpr	shift  104



state 213

    expr_no_commas  ->  expr_no_commas '+' . expr_no_commas   (57)

    IDENTIFIER	shift  73
    CONSTANT	shift  75
    STRING	shift  71
    SIZEOF	shift  76
    ALIGNOF	shift  77
    SELECTOR	shift  78
    ENCODE	shift  79
    '&' 	shift  80
    '+' 	shift  81
    '-' 	shift  82
    '*' 	shift  83
    PLUSPLUS	shift  84
    MINUSMINUS	shift  85
    '(' 	shift  86
    '[' 	shift  87
    '~' 	shift  88
    '!' 	shift  89
    unop	shift  90
    unary_expr	shift  93
    cast_expr	shift  94
    expr_no_commas	shift  324
    primary	shift  96
    string	shift  97
    objcmessageexpr	shift  102
    objcselectorexpr	shift  103
    objcencodeexpr	shift  104



state 214

    expr_no_commas  ->  expr_no_commas '-' . expr_no_commas   (58)

    IDENTIFIER	shift  73
    CONSTANT	shift  75
    STRING	shift  71
    SIZEOF	shift  76
    ALIGNOF	shift  77
    SELECTOR	shift  78
    ENCODE	shift  79
    '&' 	shift  80
    '+' 	shift  81
    '-' 	shift  82
    '*' 	shift  83
    PLUSPLUS	shift  84
    MINUSMINUS	shift  85
    '(' 	shift  86
    '[' 	shift  87
    '~' 	shift  88
    '!' 	shift  89
    unop	shift  90
    unary_expr	shift  93
    cast_expr	shift  94
    expr_no_commas	shift  325
    primary	shift  96
    string	shift  97
    objcmessageexpr	shift  102
    objcselectorexpr	shift  103
    objcencodeexpr	shift  104



state 215

    expr_no_commas  ->  expr_no_commas '*' . expr_no_commas   (59)

    IDENTIFIER	shift  73
    CONSTANT	shift  75
    STRING	shift  71
    SIZEOF	shift  76
    ALIGNOF	shift  77
    SELECTOR	shift  78
    ENCODE	shift  79
    '&' 	shift  80
    '+' 	shift  81
    '-' 	shift  82
    '*' 	shift  83
    PLUSPLUS	shift  84
    MINUSMINUS	shift  85
    '(' 	shift  86
    '[' 	shift  87
    '~' 	shift  88
    '!' 	shift  89
    unop	shift  90
    unary_expr	shift  93
    cast_expr	shift  94
    expr_no_commas	shift  326
    primary	shift  96
    string	shift  97
    objcmessageexpr	shift  102
    objcselectorexpr	shift  103
    objcencodeexpr	shift  104



state 216

    expr_no_commas  ->  expr_no_commas '/' . expr_no_commas   (60)

    IDENTIFIER	shift  73
    CONSTANT	shift  75
    STRING	shift  71
    SIZEOF	shift  76
    ALIGNOF	shift  77
    SELECTOR	shift  78
    ENCODE	shift  79
    '&' 	shift  80
    '+' 	shift  81
    '-' 	shift  82
    '*' 	shift  83
    PLUSPLUS	shift  84
    MINUSMINUS	shift  85
    '(' 	shift  86
    '[' 	shift  87
    '~' 	shift  88
    '!' 	shift  89
    unop	shift  90
    unary_expr	shift  93
    cast_expr	shift  94
    expr_no_commas	shift  327
    primary	shift  96
    string	shift  97
    objcmessageexpr	shift  102
    objcselectorexpr	shift  103
    objcencodeexpr	shift  104



state 217

    expr_no_commas  ->  expr_no_commas '%' . expr_no_commas   (61)

    IDENTIFIER	shift  73
    CONSTANT	shift  75
    STRING	shift  71
    SIZEOF	shift  76
    ALIGNOF	shift  77
    SELECTOR	shift  78
    ENCODE	shift  79
    '&' 	shift  80
    '+' 	shift  81
    '-' 	shift  82
    '*' 	shift  83
    PLUSPLUS	shift  84
    MINUSMINUS	shift  85
    '(' 	shift  86
    '[' 	shift  87
    '~' 	shift  88
    '!' 	shift  89
    unop	shift  90
    unary_expr	shift  93
    cast_expr	shift  94
    expr_no_commas	shift  328
    primary	shift  96
    string	shift  97
    objcmessageexpr	shift  102
    objcselectorexpr	shift  103
    objcencodeexpr	shift  104



state 218

    primary  ->  primary PLUSPLUS .   (85)

    $default	reduce  85  (primary)



state 219

    primary  ->  primary MINUSMINUS .   (86)

    $default	reduce  86  (primary)



state 220

    primary  ->  primary POINTSAT . identifier   (84)

    IDENTIFIER	shift  35
    TYPENAME	shift  36
    CLASSNAME	shift  37
    identifier	shift  329



state 221

    primary  ->  primary '.' . identifier   (83)

    IDENTIFIER	shift  35
    TYPENAME	shift  36
    CLASSNAME	shift  37
    identifier	shift  330



state 222

    primary  ->  primary '(' . exprlist ')'   (81)

    IDENTIFIER	shift  73
    CONSTANT	shift  75
    STRING	shift  71
    SIZEOF	shift  76
    ALIGNOF	shift  77
    SELECTOR	shift  78
    ENCODE	shift  79
    '&' 	shift  80
    '+' 	shift  81
    '-' 	shift  82
    '*' 	shift  83
    PLUSPLUS	shift  84
    MINUSMINUS	shift  85
    '(' 	shift  86
    '[' 	shift  87
    '~' 	shift  88
    '!' 	shift  89
    unop	shift  90
    exprlist	shift  331
    nonnull_exprlist	shift  332
    unary_expr	shift  93
    cast_expr	shift  94
    expr_no_commas	shift  95
    primary	shift  96
    string	shift  97
    objcmessageexpr	shift  102
    objcselectorexpr	shift  103
    objcencodeexpr	shift  104

    $default	reduce  42  (exprlist)



state 223

    primary  ->  primary '[' . expr ']'   (82)

    IDENTIFIER	shift  73
    CONSTANT	shift  75
    STRING	shift  71
    SIZEOF	shift  76
    ALIGNOF	shift  77
    SELECTOR	shift  78
    ENCODE	shift  79
    '&' 	shift  80
    '+' 	shift  81
    '-' 	shift  82
    '*' 	shift  83
    PLUSPLUS	shift  84
    MINUSMINUS	shift  85
    '(' 	shift  86
    '[' 	shift  87
    '~' 	shift  88
    '!' 	shift  89
    unop	shift  90
    expr	shift  333
    nonnull_exprlist	shift  92
    unary_expr	shift  93
    cast_expr	shift  94
    expr_no_commas	shift  95
    primary	shift  96
    string	shift  97
    objcmessageexpr	shift  102
    objcselectorexpr	shift  103
    objcencodeexpr	shift  104



state 224

    absdcl1  ->  '*' . type_quals absdcl1   (213)
    absdcl1  ->  '*' . type_quals   (214)

    type_quals	shift  334

    $default	reduce  210  (type_quals)



state 225

    absdcl1  ->  '(' . absdcl1 ')'   (212)
    absdcl1  ->  '(' . parmlist   (218)

    '*' 	shift  224
    '(' 	shift  225
    '[' 	shift  226
    absdcl1	shift  335
    parmlist	shift  336
    @29 	shift  337

    $default	reduce  280  (@29)



state 226

    absdcl1  ->  '[' . expr ']'   (219)
    absdcl1  ->  '[' . ']'   (220)

    IDENTIFIER	shift  73
    CONSTANT	shift  75
    STRING	shift  71
    SIZEOF	shift  76
    ALIGNOF	shift  77
    SELECTOR	shift  78
    ENCODE	shift  79
    '&' 	shift  80
    '+' 	shift  81
    '-' 	shift  82
    '*' 	shift  83
    PLUSPLUS	shift  84
    MINUSMINUS	shift  85
    '(' 	shift  86
    '[' 	shift  87
    '~' 	shift  88
    '!' 	shift  89
    ']' 	shift  338
    unop	shift  90
    expr	shift  339
    nonnull_exprlist	shift  92
    unary_expr	shift  93
    cast_expr	shift  94
    expr_no_commas	shift  95
    primary	shift  96
    string	shift  97
    objcmessageexpr	shift  102
    objcselectorexpr	shift  103
    objcencodeexpr	shift  104



state 227

    typename  ->  typed_typespecs absdcl .   (204)

    $default	reduce  204  (typename)



state 228

    absdcl  ->  absdcl1 .   (207)
    absdcl1  ->  absdcl1 . '(' parmlist   (215)
    absdcl1  ->  absdcl1 . '[' expr ']'   (216)
    absdcl1  ->  absdcl1 . '[' ']'   (217)

    '(' 	shift  340
    '[' 	shift  341

    $default	reduce  207  (absdcl)



state 229

    typed_typespecs  ->  typespec reserved_typespecquals .   (112)
    reserved_typespecquals  ->  reserved_typespecquals . typespecqual_reserved   (115)

    TYPESPEC	shift  166
    TYPE_QUAL	shift  167
    ENUM	shift  9
    STRUCT	shift  10
    UNION	shift  11
    typespecqual_reserved	shift  342
    structsp	shift  169

    $default	reduce  112  (typed_typespecs)



state 230

    typespec  ->  TYPEOF '(' typename ')' .   (121)

    $default	reduce  121  (typespec)



state 231

    nonempty_type_quals  ->  nonempty_type_quals TYPE_QUAL .   (209)

    $default	reduce  209  (nonempty_type_quals)



state 232

    typed_typespecs  ->  nonempty_type_quals typespec . reserved_typespecquals   (113)

    reserved_typespecquals	shift  343

    $default	reduce  114  (reserved_typespecquals)



state 233

    typename  ->  nonempty_type_quals absdcl .   (205)

    $default	reduce  205  (typename)



state 234

    classdef  ->  INTERFACE identifier ':' identifier . '{' @34 ivar_decl_list '}' @35 methodprotolist END   (311)
    classdef  ->  INTERFACE identifier ':' identifier . @36 methodprotolist END   (313)

    '{' 	shift  344
    @36 	shift  345

    $default	reduce  312  (@36)



state 235

    classdef  ->  INTERFACE identifier '(' identifier . ')' @39 methodprotolist END   (321)

    ')' 	shift  346



state 236

    classdef  ->  INTERFACE identifier '{' @31 . ivar_decl_list '}' @32 methodprotolist END   (306)

    ivar_decl_list	shift  347
    ivar_decls	shift  348

    $default	reduce  326  (ivar_decls)



state 237

    classdef  ->  INTERFACE identifier @33 methodprotolist . END   (308)

    END 	shift  349



state 238

    methodprotolist  ->  @47 . methodprotolist2   (348)

    error	shift  4
    TYPENAME	shift  5
    SCSPEC	shift  6
    TYPESPEC	shift  7
    TYPE_QUAL	shift  8
    ENUM	shift  9
    STRUCT	shift  10
    UNION	shift  11
    TYPEOF	shift  13
    CLASSNAME	shift  17
    '+' 	shift  350
    '-' 	shift  351
    ';' 	shift  20
    datadef	shift  352
    setspecs	shift  353
    typed_declspecs	shift  354
    declmods	shift  355
    typespec	shift  27
    structsp	shift  28
    methodprotolist2	shift  356
    methodproto	shift  357

    IDENTIFIER	reduce  98  (setspecs)
    '*' 	reduce  98  (setspecs)
    '(' 	reduce  98  (setspecs)



state 239

    classdef  ->  IMPLEMENTATION identifier ':' identifier . '{' @38 ivar_decl_list '}'   (318)
    classdef  ->  IMPLEMENTATION identifier ':' identifier .   (319)

    '{' 	shift  358

    $default	reduce  319  (classdef)



state 240

    classdef  ->  IMPLEMENTATION identifier '(' identifier . ')'   (322)

    ')' 	shift  359



state 241

    classdef  ->  IMPLEMENTATION identifier '{' @37 . ivar_decl_list '}'   (315)

    ivar_decl_list	shift  360
    ivar_decls	shift  348

    $default	reduce  326  (ivar_decls)



state 242

    keyworddecl  ->  ':' '(' . typename ')' identifier   (415)

    TYPENAME	shift  5
    TYPESPEC	shift  7
    TYPE_QUAL	shift  74
    ENUM	shift  9
    STRUCT	shift  10
    UNION	shift  11
    TYPEOF	shift  13
    CLASSNAME	shift  17
    typed_typespecs	shift  98
    typespec	shift  99
    structsp	shift  28
    typename	shift  361
    nonempty_type_quals	shift  101



state 243

    keyworddecl  ->  ':' identifier .   (416)

    $default	reduce  416  (keyworddecl)



state 244

    methoddecl  ->  '(' typename . ')' unaryselector   (362)
    methoddecl  ->  '(' typename . ')' keywordselector optparmlist   (364)

    ')' 	shift  362



state 245

    methoddef  ->  '+' @41 methoddecl @42 . optarglist @43 compstmt_or_error   (341)

    ';' 	shift  363
    optarglist	shift  364

    $default	reduce  366  (optarglist)



state 246

    optparmlist  ->  ',' . ELLIPSIS   (383)
    optparmlist  ->  ',' . @53 parmlist_2   (385)

    ELLIPSIS	shift  365
    @53 	shift  366

    $default	reduce  384  (@53)



state 247

    methoddecl  ->  keywordselector optparmlist .   (365)

    $default	reduce  365  (methoddecl)



state 248

    keyworddecl  ->  selector . ':' '(' typename ')' identifier   (413)
    keyworddecl  ->  selector . ':' identifier   (414)

    ':' 	shift  250



state 249

    keywordselector  ->  keywordselector keyworddecl .   (388)

    $default	reduce  388  (keywordselector)



state 250

    keyworddecl  ->  selector ':' . '(' typename ')' identifier   (413)
    keyworddecl  ->  selector ':' . identifier   (414)

    IDENTIFIER	shift  35
    TYPENAME	shift  36
    CLASSNAME	shift  37
    '(' 	shift  367
    identifier	shift  368



state 251

    methoddef  ->  '-' @44 methoddecl @45 . optarglist @46 compstmt_or_error   (345)

    ';' 	shift  363
    optarglist	shift  369

    $default	reduce  366  (optarglist)



state 252

    type_quals  ->  type_quals TYPE_QUAL .   (211)

    $default	reduce  211  (type_quals)



state 253

    notype_declarator  ->  notype_declarator . '(' parmlist_or_identifiers   (164)
    notype_declarator  ->  '*' type_quals notype_declarator .   (166)
    notype_declarator  ->  notype_declarator . '[' expr ']'   (167)
    notype_declarator  ->  notype_declarator . '[' ']'   (168)

    '(' 	shift  150
    '[' 	shift  151

    $default	reduce  166  (notype_declarator)



state 254

    notype_declarator  ->  '(' notype_declarator ')' .   (165)

    $default	reduce  165  (notype_declarator)



state 255

    notype_initdecls  ->  notype_initdecls ',' initdcl .   (128)

    $default	reduce  128  (notype_initdecls)



state 256

    initdcl  ->  declarator . maybeasm maybe_attribute '=' @10 init   (132)
    initdcl  ->  declarator . maybeasm maybe_attribute   (133)

    ASM 	shift  149
    maybeasm	shift  277

    $default	reduce  129  (maybeasm)



state 257

    maybeasm  ->  ASM '(' . string ')'   (130)

    STRING	shift  71
    string	shift  370



state 258

    notype_declarator  ->  notype_declarator '(' parmlist_or_identifiers .   (164)

    $default	reduce  164  (notype_declarator)



state 259

    parmlist_or_identifiers  ->  @30 . parmlist_or_identifiers_1   (283)

    error	shift  371
    IDENTIFIER	shift  372
    TYPENAME	shift  5
    SCSPEC	shift  6
    TYPESPEC	shift  7
    TYPE_QUAL	shift  8
    ENUM	shift  9
    STRUCT	shift  10
    UNION	shift  11
    TYPEOF	shift  13
    CLASSNAME	shift  17
    typed_declspecs	shift  373
    declmods	shift  374
    typespec	shift  27
    structsp	shift  28
    parmlist_or_identifiers_1	shift  375
    parmlist_2	shift  376
    parms	shift  377
    parm	shift  378
    identifiers	shift  379

    ')' 	[reduce  289  (parmlist_2)]



state 260

    notype_declarator  ->  notype_declarator '[' ']' .   (168)

    $default	reduce  168  (notype_declarator)



state 261

    notype_declarator  ->  notype_declarator '[' expr . ']'   (167)

    ']' 	shift  380



state 262

    errstmt  ->  error . ';'   (226)

    ';' 	shift  381



state 263

    fndef  ->  setspecs notype_declarator @7 xdecls . @8 compstmt_or_error   (29)

    @8  	shift  382

    $default	reduce  28  (@8)



state 264

    xdecls  ->  decls .   (93)
    decls  ->  decls . decl   (96)

    TYPENAME	shift  5
    SCSPEC	shift  6
    TYPESPEC	shift  7
    TYPE_QUAL	shift  8
    ENUM	shift  9
    STRUCT	shift  10
    UNION	shift  11
    TYPEOF	shift  13
    CLASSNAME	shift  17
    decl	shift  383
    typed_declspecs	shift  266
    declmods	shift  267
    typespec	shift  27
    structsp	shift  28

    $default	reduce  93  (xdecls)



state 265

    decls  ->  decl .   (94)
    decls  ->  decl . errstmt   (97)

    error	shift  262
    errstmt	shift  384

    error	[reduce  94  (decls)]
    IDENTIFIER	reduce  94  (decls)
    TYPENAME	reduce  94  (decls)
    SCSPEC	reduce  94  (decls)
    TYPESPEC	reduce  94  (decls)
    TYPE_QUAL	reduce  94  (decls)
    CONSTANT	reduce  94  (decls)
    STRING	reduce  94  (decls)
    SIZEOF	reduce  94  (decls)
    ENUM	reduce  94  (decls)
    STRUCT	reduce  94  (decls)
    UNION	reduce  94  (decls)
    IF  	reduce  94  (decls)
    WHILE	reduce  94  (decls)
    DO  	reduce  94  (decls)
    FOR 	reduce  94  (decls)
    SWITCH	reduce  94  (decls)
    CASE	reduce  94  (decls)
    DEFAULT	reduce  94  (decls)
    BREAK	reduce  94  (decls)
    CONTINUE	reduce  94  (decls)
    RETURN	reduce  94  (decls)
    GOTO	reduce  94  (decls)
    ASM 	reduce  94  (decls)
    TYPEOF	reduce  94  (decls)
    ALIGNOF	reduce  94  (decls)
    SELECTOR	reduce  94  (decls)
    ENCODE	reduce  94  (decls)
    CLASSNAME	reduce  94  (decls)
    '&' 	reduce  94  (decls)
    '+' 	reduce  94  (decls)
    '-' 	reduce  94  (decls)
    '*' 	reduce  94  (decls)
    PLUSPLUS	reduce  94  (decls)
    MINUSMINUS	reduce  94  (decls)
    '(' 	reduce  94  (decls)
    '[' 	reduce  94  (decls)
    ';' 	reduce  94  (decls)
    '}' 	reduce  94  (decls)
    '~' 	reduce  94  (decls)
    '!' 	reduce  94  (decls)
    '{' 	reduce  94  (decls)



state 266

    decl  ->  typed_declspecs . setspecs initdecls ';'   (99)
    decl  ->  typed_declspecs . ';'   (101)

    ';' 	shift  385
    setspecs	shift  386

    $default	reduce  98  (setspecs)



state 267

    decl  ->  declmods . setspecs notype_initdecls ';'   (100)
    decl  ->  declmods . ';'   (102)
    typed_declspecs  ->  declmods . typespec reserved_declspecs   (104)
    declmods  ->  declmods . TYPE_QUAL   (110)
    declmods  ->  declmods . SCSPEC   (111)

    TYPENAME	shift  5
    SCSPEC	shift  58
    TYPESPEC	shift  7
    TYPE_QUAL	shift  59
    ENUM	shift  9
    STRUCT	shift  10
    UNION	shift  11
    TYPEOF	shift  13
    CLASSNAME	shift  17
    ';' 	shift  387
    setspecs	shift  388
    typespec	shift  62
    structsp	shift  28

    $default	reduce  98  (setspecs)



state 268

    decls  ->  errstmt .   (95)

    $default	reduce  95  (decls)



state 269

    maybe_attribute  ->  ATTRIBUTE . '(' '(' attribute_list ')' ')'   (138)

    '(' 	shift  389



state 270

    notype_initdcl  ->  notype_declarator maybeasm maybe_attribute . '=' @11 init   (135)
    notype_initdcl  ->  notype_declarator maybeasm maybe_attribute .   (136)

    '=' 	shift  390

    $default	reduce  136  (notype_initdcl)



state 271

    after_type_declarator  ->  '*' type_quals . after_type_declarator   (157)
    notype_declarator  ->  '*' type_quals . notype_declarator   (166)
    type_quals  ->  type_quals . TYPE_QUAL   (211)

    IDENTIFIER	shift  50
    TYPENAME	shift  154
    TYPE_QUAL	shift  252
    '*' 	shift  155
    '(' 	shift  156
    after_type_declarator	shift  391
    notype_declarator	shift  253



state 272

    after_type_declarator  ->  '(' after_type_declarator . ')'   (153)
    after_type_declarator  ->  after_type_declarator . '(' parmlist_or_identifiers   (154)
    after_type_declarator  ->  after_type_declarator . '[' expr ']'   (155)
    after_type_declarator  ->  after_type_declarator . '[' ']'   (156)

    '(' 	shift  278
    '[' 	shift  279
    ')' 	shift  392



state 273

    datadef  ->  typed_declspecs setspecs initdecls ';' .   (13)

    $default	reduce  13  (datadef)



state 274

    initdecls  ->  initdecls ',' . initdcl   (126)

    IDENTIFIER	shift  50
    TYPENAME	shift  154
    '*' 	shift  155
    '(' 	shift  156
    initdcl	shift  393
    declarator	shift  256
    after_type_declarator	shift  160
    notype_declarator	shift  161



state 275

    fndef  ->  typed_declspecs setspecs declarator error .   (22)

    $default	reduce  22  (fndef)



state 276

    fndef  ->  typed_declspecs setspecs declarator @3 . xdecls @4 compstmt_or_error   (21)

    error	shift  262
    TYPENAME	shift  5
    SCSPEC	shift  6
    TYPESPEC	shift  7
    TYPE_QUAL	shift  8
    ENUM	shift  9
    STRUCT	shift  10
    UNION	shift  11
    TYPEOF	shift  13
    CLASSNAME	shift  17
    xdecls	shift  394
    decls	shift  264
    decl	shift  265
    typed_declspecs	shift  266
    declmods	shift  267
    typespec	shift  27
    structsp	shift  28
    errstmt	shift  268

    error	[reduce  92  (xdecls)]
    '{' 	[reduce  92  (xdecls)]



state 277

    initdcl  ->  declarator maybeasm . maybe_attribute '=' @10 init   (132)
    initdcl  ->  declarator maybeasm . maybe_attribute   (133)

    ATTRIBUTE	shift  269
    maybe_attribute	shift  395

    $default	reduce  137  (maybe_attribute)



state 278

    after_type_declarator  ->  after_type_declarator '(' . parmlist_or_identifiers   (154)

    parmlist_or_identifiers	shift  396
    @30 	shift  259

    $default	reduce  282  (@30)



state 279

    after_type_declarator  ->  after_type_declarator '[' . expr ']'   (155)
    after_type_declarator  ->  after_type_declarator '[' . ']'   (156)

    IDENTIFIER	shift  73
    CONSTANT	shift  75
    STRING	shift  71
    SIZEOF	shift  76
    ALIGNOF	shift  77
    SELECTOR	shift  78
    ENCODE	shift  79
    '&' 	shift  80
    '+' 	shift  81
    '-' 	shift  82
    '*' 	shift  83
    PLUSPLUS	shift  84
    MINUSMINUS	shift  85
    '(' 	shift  86
    '[' 	shift  87
    '~' 	shift  88
    '!' 	shift  89
    ']' 	shift  397
    unop	shift  90
    expr	shift  398
    nonnull_exprlist	shift  92
    unary_expr	shift  93
    cast_expr	shift  94
    expr_no_commas	shift  95
    primary	shift  96
    string	shift  97
    objcmessageexpr	shift  102
    objcselectorexpr	shift  103
    objcencodeexpr	shift  104



state 280

    datadef  ->  declmods setspecs notype_initdecls ';' .   (12)

    $default	reduce  12  (datadef)



state 281

    fndef  ->  declmods setspecs notype_declarator error .   (26)

    $default	reduce  26  (fndef)



state 282

    fndef  ->  declmods setspecs notype_declarator @5 . xdecls @6 compstmt_or_error   (25)

    error	shift  262
    TYPENAME	shift  5
    SCSPEC	shift  6
    TYPESPEC	shift  7
    TYPE_QUAL	shift  8
    ENUM	shift  9
    STRUCT	shift  10
    UNION	shift  11
    TYPEOF	shift  13
    CLASSNAME	shift  17
    xdecls	shift  399
    decls	shift  264
    decl	shift  265
    typed_declspecs	shift  266
    declmods	shift  267
    typespec	shift  27
    structsp	shift  28
    errstmt	shift  268

    error	[reduce  92  (xdecls)]
    '{' 	[reduce  92  (xdecls)]



state 283

    enumerator  ->  identifier '=' . expr_no_commas   (203)

    IDENTIFIER	shift  73
    CONSTANT	shift  75
    STRING	shift  71
    SIZEOF	shift  76
    ALIGNOF	shift  77
    SELECTOR	shift  78
    ENCODE	shift  79
    '&' 	shift  80
    '+' 	shift  81
    '-' 	shift  82
    '*' 	shift  83
    PLUSPLUS	shift  84
    MINUSMINUS	shift  85
    '(' 	shift  86
    '[' 	shift  87
    '~' 	shift  88
    '!' 	shift  89
    unop	shift  90
    unary_expr	shift  93
    cast_expr	shift  94
    expr_no_commas	shift  400
    primary	shift  96
    string	shift  97
    objcmessageexpr	shift  102
    objcselectorexpr	shift  103
    objcencodeexpr	shift  104



state 284

    maybecomma_warn  ->  ',' .   (186)
    enumlist  ->  enumlist ',' . enumerator   (201)

    IDENTIFIER	shift  35
    TYPENAME	shift  36
    CLASSNAME	shift  37
    identifier	shift  170
    enumerator	shift  401

    $default	reduce  186  (maybecomma_warn)



state 285

    structsp  ->  ENUM '{' @15 enumlist maybecomma_warn . '}'   (181)

    '}' 	shift  402



state 286

    structsp  ->  ENUM identifier '{' @14 enumlist . maybecomma_warn '}'   (179)
    enumlist  ->  enumlist . ',' enumerator   (201)

    ',' 	shift  284
    maybecomma_warn	shift  403

    $default	reduce  185  (maybecomma_warn)



state 287

    component_decl_list  ->  DEFS '(' CLASSNAME . ')'   (190)

    ')' 	shift  404



state 288

    component_decl  ->  typed_typespecs setspecs . components   (191)

    IDENTIFIER	shift  50
    TYPENAME	shift  154
    ':' 	shift  405
    '*' 	shift  155
    '(' 	shift  156
    declarator	shift  406
    after_type_declarator	shift  160
    notype_declarator	shift  161
    components	shift  407
    component_declarator	shift  408

    $default	reduce  194  (components)



state 289

    component_decl_list  ->  component_decl_list component_decl ';' .   (188)

    $default	reduce  188  (component_decl_list)



state 290

    component_decl  ->  nonempty_type_quals setspecs . components   (192)

    IDENTIFIER	shift  50
    TYPENAME	shift  154
    ':' 	shift  405
    '*' 	shift  155
    '(' 	shift  156
    declarator	shift  406
    after_type_declarator	shift  160
    notype_declarator	shift  161
    components	shift  409
    component_declarator	shift  408

    $default	reduce  194  (components)



state 291

    structsp  ->  STRUCT identifier '{' @12 component_decl_list . '}'   (171)
    component_decl_list  ->  component_decl_list . component_decl ';'   (188)
    component_decl_list  ->  component_decl_list . ';'   (189)

    error	shift  175
    TYPENAME	shift  5
    TYPESPEC	shift  7
    TYPE_QUAL	shift  74
    ENUM	shift  9
    STRUCT	shift  10
    UNION	shift  11
    TYPEOF	shift  13
    CLASSNAME	shift  17
    ';' 	shift  176
    '}' 	shift  410
    typed_typespecs	shift  178
    typespec	shift  99
    structsp	shift  28
    component_decl	shift  179
    nonempty_type_quals	shift  180



state 292

    structsp  ->  UNION identifier '{' @13 component_decl_list . '}'   (175)
    component_decl_list  ->  component_decl_list . component_decl ';'   (188)
    component_decl_list  ->  component_decl_list . ';'   (189)

    error	shift  175
    TYPENAME	shift  5
    TYPESPEC	shift  7
    TYPE_QUAL	shift  74
    ENUM	shift  9
    STRUCT	shift  10
    UNION	shift  11
    TYPEOF	shift  13
    CLASSNAME	shift  17
    ';' 	shift  176
    '}' 	shift  411
    typed_typespecs	shift  178
    typespec	shift  99
    structsp	shift  28
    component_decl	shift  179
    nonempty_type_quals	shift  180



state 293

    extdef  ->  ASM '(' string ')' ';' .   (10)

    $default	reduce  10  (extdef)



state 294

    unary_expr  ->  SIZEOF '(' typename . ')'   (50)

    ')' 	shift  412



state 295

    unary_expr  ->  ALIGNOF '(' typename . ')'   (52)

    ')' 	shift  413



state 296

    keywordname  ->  ':' .   (434)

    $default	reduce  434  (keywordname)



state 297

    selectorarg  ->  selector .   (429)
    keywordname  ->  selector . ':'   (433)

    ':' 	shift  414

    $default	reduce  429  (selectorarg)



state 298

    objcselectorexpr  ->  SELECTOR '(' selectorarg . ')'   (435)

    ')' 	shift  415



state 299

    selectorarg  ->  keywordnamelist .   (430)
    keywordnamelist  ->  keywordnamelist . keywordname   (432)

    IDENTIFIER	shift  112
    TYPENAME	shift  113
    TYPESPEC	shift  114
    TYPE_QUAL	shift  115
    SIZEOF	shift  116
    ENUM	shift  117
    STRUCT	shift  118
    UNION	shift  119
    IF  	shift  120
    ELSE	shift  121
    WHILE	shift  122
    DO  	shift  123
    FOR 	shift  124
    SWITCH	shift  125
    CASE	shift  126
    DEFAULT	shift  127
    BREAK	shift  128
    CONTINUE	shift  129
    RETURN	shift  130
    GOTO	shift  131
    ASM 	shift  132
    TYPEOF	shift  133
    ALIGNOF	shift  134
    ':' 	shift  296
    selector	shift  416
    reservedwords	shift  141
    keywordname	shift  417

    $default	reduce  430  (selectorarg)



state 300

    keywordnamelist  ->  keywordname .   (431)

    $default	reduce  431  (keywordnamelist)



state 301

    objcencodeexpr  ->  ENCODE '(' typename . ')'   (436)

    ')' 	shift  418



state 302

    primary  ->  '(' error ')' .   (78)

    $default	reduce  78  (primary)



state 303

    primary  ->  '(' expr ')' .   (77)

    $default	reduce  77  (primary)



state 304

    compstmt  ->  '{' . '}'   (230)
    compstmt  ->  '{' . pushlevel decls xstmts '}'   (231)
    compstmt  ->  '{' . pushlevel error '}'   (232)
    compstmt  ->  '{' . pushlevel stmts '}'   (233)

    '}' 	shift  419
    pushlevel	shift  420

    $default	reduce  227  (pushlevel)



state 305

    primary  ->  '(' @9 compstmt . ')'   (80)

    ')' 	shift  421



state 306

    cast_expr  ->  '(' typename ')' . cast_expr   (54)
    cast_expr  ->  '(' typename ')' . '{' initlist maybecomma '}'   (55)

    IDENTIFIER	shift  73
    CONSTANT	shift  75
    STRING	shift  71
    SIZEOF	shift  76
    ALIGNOF	shift  77
    SELECTOR	shift  78
    ENCODE	shift  79
    '&' 	shift  80
    '+' 	shift  81
    '-' 	shift  82
    '*' 	shift  83
    PLUSPLUS	shift  84
    MINUSMINUS	shift  85
    '(' 	shift  86
    '[' 	shift  87
    '~' 	shift  88
    '!' 	shift  89
    '{' 	shift  422
    unop	shift  90
    unary_expr	shift  93
    cast_expr	shift  423
    primary	shift  96
    string	shift  97
    objcmessageexpr	shift  102
    objcselectorexpr	shift  103
    objcencodeexpr	shift  104



state 307

    receiver  ->  CLASSNAME .   (425)

    $default	reduce  425  (receiver)



state 308

    receiver  ->  expr .   (424)

    $default	reduce  424  (receiver)



state 309

    objcmessageexpr  ->  '[' @54 receiver . @55 messageargs ']'   (428)

    @55 	shift  424

    $default	reduce  427  (@55)



state 310

    nonnull_exprlist  ->  nonnull_exprlist ',' expr_no_commas .   (45)
    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (57)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (58)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (59)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (60)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (61)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (62)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (63)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (64)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (65)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (66)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (67)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (68)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (69)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (70)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (71)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (72)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (73)

    ASSIGN	shift  201
    '=' 	shift  202
    '?' 	shift  203
    OROR	shift  204
    ANDAND	shift  205
    '|' 	shift  206
    '^' 	shift  207
    '&' 	shift  208
    EQCOMPARE	shift  209
    ARITHCOMPARE	shift  210
    LSHIFT	shift  211
    RSHIFT	shift  212
    '+' 	shift  213
    '-' 	shift  214
    '*' 	shift  215
    '/' 	shift  216
    '%' 	shift  217

    $default	reduce  45  (nonnull_exprlist)



state 311

    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (57)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (58)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (59)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (60)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (61)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (62)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (63)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (64)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (65)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (66)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (67)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (68)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (69)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (70)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (71)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (72)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (73)
    expr_no_commas  ->  expr_no_commas ASSIGN expr_no_commas .   (73)

    ASSIGN	shift  201
    '=' 	shift  202
    '?' 	shift  203
    OROR	shift  204
    ANDAND	shift  205
    '|' 	shift  206
    '^' 	shift  207
    '&' 	shift  208
    EQCOMPARE	shift  209
    ARITHCOMPARE	shift  210
    LSHIFT	shift  211
    RSHIFT	shift  212
    '+' 	shift  213
    '-' 	shift  214
    '*' 	shift  215
    '/' 	shift  216
    '%' 	shift  217

    $default	reduce  73  (expr_no_commas)



state 312

    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (57)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (58)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (59)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (60)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (61)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (62)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (63)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (64)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (65)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (66)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (67)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (68)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (69)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (70)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (71)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (72)
    expr_no_commas  ->  expr_no_commas '=' expr_no_commas .   (72)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (73)

    ASSIGN	shift  201
    '=' 	shift  202
    '?' 	shift  203
    OROR	shift  204
    ANDAND	shift  205
    '|' 	shift  206
    '^' 	shift  207
    '&' 	shift  208
    EQCOMPARE	shift  209
    ARITHCOMPARE	shift  210
    LSHIFT	shift  211
    RSHIFT	shift  212
    '+' 	shift  213
    '-' 	shift  214
    '*' 	shift  215
    '/' 	shift  216
    '%' 	shift  217

    $default	reduce  72  (expr_no_commas)



state 313

    xexpr  ->  expr .   (272)

    $default	reduce  272  (xexpr)



state 314

    expr_no_commas  ->  expr_no_commas '?' xexpr . ':' expr_no_commas   (71)

    ':' 	shift  425



state 315

    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (57)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (58)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (59)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (60)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (61)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (62)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (63)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (64)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (65)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (66)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (67)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (68)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (69)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (70)
    expr_no_commas  ->  expr_no_commas OROR expr_no_commas .   (70)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (71)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (72)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (73)

    ANDAND	shift  205
    '|' 	shift  206
    '^' 	shift  207
    '&' 	shift  208
    EQCOMPARE	shift  209
    ARITHCOMPARE	shift  210
    LSHIFT	shift  211
    RSHIFT	shift  212
    '+' 	shift  213
    '-' 	shift  214
    '*' 	shift  215
    '/' 	shift  216
    '%' 	shift  217

    $default	reduce  70  (expr_no_commas)



state 316

    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (57)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (58)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (59)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (60)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (61)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (62)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (63)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (64)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (65)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (66)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (67)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (68)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (69)
    expr_no_commas  ->  expr_no_commas ANDAND expr_no_commas .   (69)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (70)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (71)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (72)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (73)

    '|' 	shift  206
    '^' 	shift  207
    '&' 	shift  208
    EQCOMPARE	shift  209
    ARITHCOMPARE	shift  210
    LSHIFT	shift  211
    RSHIFT	shift  212
    '+' 	shift  213
    '-' 	shift  214
    '*' 	shift  215
    '/' 	shift  216
    '%' 	shift  217

    $default	reduce  69  (expr_no_commas)



state 317

    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (57)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (58)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (59)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (60)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (61)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (62)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (63)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (64)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (65)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (66)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (67)
    expr_no_commas  ->  expr_no_commas '|' expr_no_commas .   (67)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (68)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (69)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (70)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (71)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (72)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (73)

    '^' 	shift  207
    '&' 	shift  208
    EQCOMPARE	shift  209
    ARITHCOMPARE	shift  210
    LSHIFT	shift  211
    RSHIFT	shift  212
    '+' 	shift  213
    '-' 	shift  214
    '*' 	shift  215
    '/' 	shift  216
    '%' 	shift  217

    $default	reduce  67  (expr_no_commas)



state 318

    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (57)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (58)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (59)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (60)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (61)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (62)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (63)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (64)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (65)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (66)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (67)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (68)
    expr_no_commas  ->  expr_no_commas '^' expr_no_commas .   (68)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (69)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (70)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (71)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (72)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (73)

    '&' 	shift  208
    EQCOMPARE	shift  209
    ARITHCOMPARE	shift  210
    LSHIFT	shift  211
    RSHIFT	shift  212
    '+' 	shift  213
    '-' 	shift  214
    '*' 	shift  215
    '/' 	shift  216
    '%' 	shift  217

    $default	reduce  68  (expr_no_commas)



state 319

    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (57)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (58)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (59)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (60)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (61)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (62)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (63)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (64)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (65)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (66)
    expr_no_commas  ->  expr_no_commas '&' expr_no_commas .   (66)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (67)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (68)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (69)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (70)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (71)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (72)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (73)

    EQCOMPARE	shift  209
    ARITHCOMPARE	shift  210
    LSHIFT	shift  211
    RSHIFT	shift  212
    '+' 	shift  213
    '-' 	shift  214
    '*' 	shift  215
    '/' 	shift  216
    '%' 	shift  217

    $default	reduce  66  (expr_no_commas)



state 320

    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (57)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (58)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (59)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (60)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (61)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (62)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (63)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (64)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (65)
    expr_no_commas  ->  expr_no_commas EQCOMPARE expr_no_commas .   (65)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (66)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (67)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (68)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (69)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (70)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (71)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (72)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (73)

    ARITHCOMPARE	shift  210
    LSHIFT	shift  211
    RSHIFT	shift  212
    '+' 	shift  213
    '-' 	shift  214
    '*' 	shift  215
    '/' 	shift  216
    '%' 	shift  217

    $default	reduce  65  (expr_no_commas)



state 321

    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (57)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (58)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (59)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (60)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (61)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (62)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (63)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (64)
    expr_no_commas  ->  expr_no_commas ARITHCOMPARE expr_no_commas .   (64)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (65)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (66)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (67)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (68)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (69)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (70)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (71)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (72)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (73)

    LSHIFT	shift  211
    RSHIFT	shift  212
    '+' 	shift  213
    '-' 	shift  214
    '*' 	shift  215
    '/' 	shift  216
    '%' 	shift  217

    $default	reduce  64  (expr_no_commas)



state 322

    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (57)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (58)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (59)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (60)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (61)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (62)
    expr_no_commas  ->  expr_no_commas LSHIFT expr_no_commas .   (62)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (63)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (64)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (65)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (66)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (67)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (68)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (69)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (70)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (71)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (72)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (73)

    '+' 	shift  213
    '-' 	shift  214
    '*' 	shift  215
    '/' 	shift  216
    '%' 	shift  217

    $default	reduce  62  (expr_no_commas)



state 323

    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (57)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (58)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (59)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (60)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (61)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (62)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (63)
    expr_no_commas  ->  expr_no_commas RSHIFT expr_no_commas .   (63)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (64)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (65)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (66)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (67)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (68)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (69)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (70)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (71)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (72)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (73)

    '+' 	shift  213
    '-' 	shift  214
    '*' 	shift  215
    '/' 	shift  216
    '%' 	shift  217

    $default	reduce  63  (expr_no_commas)



state 324

    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (57)
    expr_no_commas  ->  expr_no_commas '+' expr_no_commas .   (57)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (58)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (59)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (60)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (61)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (62)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (63)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (64)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (65)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (66)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (67)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (68)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (69)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (70)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (71)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (72)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (73)

    '*' 	shift  215
    '/' 	shift  216
    '%' 	shift  217

    $default	reduce  57  (expr_no_commas)



state 325

    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (57)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (58)
    expr_no_commas  ->  expr_no_commas '-' expr_no_commas .   (58)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (59)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (60)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (61)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (62)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (63)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (64)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (65)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (66)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (67)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (68)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (69)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (70)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (71)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (72)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (73)

    '*' 	shift  215
    '/' 	shift  216
    '%' 	shift  217

    $default	reduce  58  (expr_no_commas)



state 326

    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (57)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (58)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (59)
    expr_no_commas  ->  expr_no_commas '*' expr_no_commas .   (59)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (60)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (61)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (62)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (63)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (64)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (65)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (66)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (67)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (68)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (69)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (70)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (71)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (72)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (73)


    $default	reduce  59  (expr_no_commas)



state 327

    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (57)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (58)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (59)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (60)
    expr_no_commas  ->  expr_no_commas '/' expr_no_commas .   (60)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (61)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (62)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (63)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (64)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (65)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (66)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (67)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (68)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (69)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (70)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (71)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (72)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (73)


    $default	reduce  60  (expr_no_commas)



state 328

    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (57)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (58)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (59)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (60)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (61)
    expr_no_commas  ->  expr_no_commas '%' expr_no_commas .   (61)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (62)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (63)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (64)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (65)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (66)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (67)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (68)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (69)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (70)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (71)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (72)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (73)


    $default	reduce  61  (expr_no_commas)



state 329

    primary  ->  primary POINTSAT identifier .   (84)

    $default	reduce  84  (primary)



state 330

    primary  ->  primary '.' identifier .   (83)

    $default	reduce  83  (primary)



state 331

    primary  ->  primary '(' exprlist . ')'   (81)

    ')' 	shift  426



state 332

    exprlist  ->  nonnull_exprlist .   (43)
    nonnull_exprlist  ->  nonnull_exprlist . ',' expr_no_commas   (45)

    ',' 	shift  200

    $default	reduce  43  (exprlist)



state 333

    primary  ->  primary '[' expr . ']'   (82)

    ']' 	shift  427



state 334

    type_quals  ->  type_quals . TYPE_QUAL   (211)
    absdcl1  ->  '*' type_quals . absdcl1   (213)
    absdcl1  ->  '*' type_quals .   (214)

    TYPE_QUAL	shift  252
    '*' 	shift  224
    '(' 	shift  225
    '[' 	shift  226
    absdcl1	shift  428

    $default	reduce  214  (absdcl1)



state 335

    absdcl1  ->  '(' absdcl1 . ')'   (212)
    absdcl1  ->  absdcl1 . '(' parmlist   (215)
    absdcl1  ->  absdcl1 . '[' expr ']'   (216)
    absdcl1  ->  absdcl1 . '[' ']'   (217)

    '(' 	shift  340
    '[' 	shift  341
    ')' 	shift  429



state 336

    absdcl1  ->  '(' parmlist .   (218)

    $default	reduce  218  (absdcl1)



state 337

    parmlist  ->  @29 . parmlist_1   (281)

    error	shift  430
    TYPENAME	shift  5
    SCSPEC	shift  6
    TYPESPEC	shift  7
    TYPE_QUAL	shift  8
    ENUM	shift  9
    STRUCT	shift  10
    UNION	shift  11
    TYPEOF	shift  13
    CLASSNAME	shift  17
    typed_declspecs	shift  373
    declmods	shift  374
    typespec	shift  27
    structsp	shift  28
    parmlist_1	shift  431
    parmlist_2	shift  432
    parms	shift  377
    parm	shift  378

    ')' 	[reduce  289  (parmlist_2)]



state 338

    absdcl1  ->  '[' ']' .   (220)

    $default	reduce  220  (absdcl1)



state 339

    absdcl1  ->  '[' expr . ']'   (219)

    ']' 	shift  433



state 340

    absdcl1  ->  absdcl1 '(' . parmlist   (215)

    parmlist	shift  434
    @29 	shift  337

    $default	reduce  280  (@29)



state 341

    absdcl1  ->  absdcl1 '[' . expr ']'   (216)
    absdcl1  ->  absdcl1 '[' . ']'   (217)

    IDENTIFIER	shift  73
    CONSTANT	shift  75
    STRING	shift  71
    SIZEOF	shift  76
    ALIGNOF	shift  77
    SELECTOR	shift  78
    ENCODE	shift  79
    '&' 	shift  80
    '+' 	shift  81
    '-' 	shift  82
    '*' 	shift  83
    PLUSPLUS	shift  84
    MINUSMINUS	shift  85
    '(' 	shift  86
    '[' 	shift  87
    '~' 	shift  88
    '!' 	shift  89
    ']' 	shift  435
    unop	shift  90
    expr	shift  436
    nonnull_exprlist	shift  92
    unary_expr	shift  93
    cast_expr	shift  94
    expr_no_commas	shift  95
    primary	shift  96
    string	shift  97
    objcmessageexpr	shift  102
    objcselectorexpr	shift  103
    objcencodeexpr	shift  104



state 342

    reserved_typespecquals  ->  reserved_typespecquals typespecqual_reserved .   (115)

    $default	reduce  115  (reserved_typespecquals)



state 343

    typed_typespecs  ->  nonempty_type_quals typespec reserved_typespecquals .   (113)
    reserved_typespecquals  ->  reserved_typespecquals . typespecqual_reserved   (115)

    TYPESPEC	shift  166
    TYPE_QUAL	shift  167
    ENUM	shift  9
    STRUCT	shift  10
    UNION	shift  11
    typespecqual_reserved	shift  342
    structsp	shift  169

    $default	reduce  113  (typed_typespecs)



state 344

    classdef  ->  INTERFACE identifier ':' identifier '{' . @34 ivar_decl_list '}' @35 methodprotolist END   (311)

    @34 	shift  437

    $default	reduce  309  (@34)



state 345

    classdef  ->  INTERFACE identifier ':' identifier @36 . methodprotolist END   (313)

    methodprotolist	shift  438
    @47 	shift  238

    END 	reduce  346  (methodprotolist)
    $default	reduce  347  (@47)



state 346

    classdef  ->  INTERFACE identifier '(' identifier ')' . @39 methodprotolist END   (321)

    @39 	shift  439

    $default	reduce  320  (@39)



state 347

    classdef  ->  INTERFACE identifier '{' @31 ivar_decl_list . '}' @32 methodprotolist END   (306)

    '}' 	shift  440



state 348

    ivar_decl_list  ->  ivar_decls . PUBLIC @40 ivar_decls   (324)
    ivar_decl_list  ->  ivar_decls .   (325)
    ivar_decls  ->  ivar_decls . ivar_decl ';'   (327)
    ivar_decls  ->  ivar_decls . ';'   (328)

    error	shift  441
    TYPENAME	shift  5
    TYPESPEC	shift  7
    TYPE_QUAL	shift  74
    ENUM	shift  9
    STRUCT	shift  10
    UNION	shift  11
    TYPEOF	shift  13
    CLASSNAME	shift  17
    PUBLIC	shift  442
    ';' 	shift  443
    typed_typespecs	shift  444
    typespec	shift  99
    structsp	shift  28
    nonempty_type_quals	shift  445
    ivar_decl	shift  446

    '}' 	reduce  325  (ivar_decl_list)



state 349

    classdef  ->  INTERFACE identifier @33 methodprotolist END .   (308)

    $default	reduce  308  (classdef)



state 350

    methodproto  ->  '+' . @49 methoddecl @50 semi_or_error   (358)

    @49 	shift  447

    $default	reduce  356  (@49)



state 351

    methodproto  ->  '-' . @51 methoddecl @52 semi_or_error   (361)

    @51 	shift  448

    $default	reduce  359  (@51)



state 352

    methodprotolist2  ->  datadef .   (350)

    $default	reduce  350  (methodprotolist2)



state 353

    datadef  ->  setspecs . notype_initdecls ';'   (11)

    IDENTIFIER	shift  50
    '*' 	shift  51
    '(' 	shift  52
    notype_initdecls	shift  53
    notype_initdcl	shift  54
    notype_declarator	shift  449



state 354

    datadef  ->  typed_declspecs . setspecs initdecls ';'   (13)
    datadef  ->  typed_declspecs . ';'   (15)

    ';' 	shift  56
    setspecs	shift  450

    $default	reduce  98  (setspecs)



state 355

    datadef  ->  declmods . setspecs notype_initdecls ';'   (12)
    datadef  ->  declmods . ';'   (14)
    typed_declspecs  ->  declmods . typespec reserved_declspecs   (104)
    declmods  ->  declmods . TYPE_QUAL   (110)
    declmods  ->  declmods . SCSPEC   (111)

    TYPENAME	shift  5
    SCSPEC	shift  58
    TYPESPEC	shift  7
    TYPE_QUAL	shift  59
    ENUM	shift  9
    STRUCT	shift  10
    UNION	shift  11
    TYPEOF	shift  13
    CLASSNAME	shift  17
    ';' 	shift  60
    setspecs	shift  451
    typespec	shift  62
    structsp	shift  28

    $default	reduce  98  (setspecs)



state 356

    methodprotolist  ->  @47 methodprotolist2 .   (348)
    methodprotolist2  ->  methodprotolist2 . methodproto   (351)
    methodprotolist2  ->  methodprotolist2 . @48 datadef   (353)

    '+' 	shift  350
    '-' 	shift  351
    @48 	shift  452
    methodproto	shift  453

    END 	reduce  348  (methodprotolist)
    $default	reduce  352  (@48)



state 357

    methodprotolist2  ->  methodproto .   (349)

    $default	reduce  349  (methodprotolist2)



state 358

    classdef  ->  IMPLEMENTATION identifier ':' identifier '{' . @38 ivar_decl_list '}'   (318)

    @38 	shift  454

    $default	reduce  317  (@38)



state 359

    classdef  ->  IMPLEMENTATION identifier '(' identifier ')' .   (322)

    $default	reduce  322  (classdef)



state 360

    classdef  ->  IMPLEMENTATION identifier '{' @37 ivar_decl_list . '}'   (315)

    '}' 	shift  455



state 361

    keyworddecl  ->  ':' '(' typename . ')' identifier   (415)

    ')' 	shift  456



state 362

    methoddecl  ->  '(' typename ')' . unaryselector   (362)
    methoddecl  ->  '(' typename ')' . keywordselector optparmlist   (364)

    IDENTIFIER	shift  112
    TYPENAME	shift  113
    TYPESPEC	shift  114
    TYPE_QUAL	shift  115
    SIZEOF	shift  116
    ENUM	shift  117
    STRUCT	shift  118
    UNION	shift  119
    IF  	shift  120
    ELSE	shift  121
    WHILE	shift  122
    DO  	shift  123
    FOR 	shift  124
    SWITCH	shift  125
    CASE	shift  126
    DEFAULT	shift  127
    BREAK	shift  128
    CONTINUE	shift  129
    RETURN	shift  130
    GOTO	shift  131
    ASM 	shift  132
    TYPEOF	shift  133
    ALIGNOF	shift  134
    ':' 	shift  135
    unaryselector	shift  457
    keywordselector	shift  458
    selector	shift  140
    reservedwords	shift  141
    keyworddecl	shift  142



state 363

    optarglist  ->  ';' . myxdecls   (367)

    error	shift  262
    TYPENAME	shift  5
    SCSPEC	shift  6
    TYPESPEC	shift  7
    TYPE_QUAL	shift  8
    ENUM	shift  9
    STRUCT	shift  10
    UNION	shift  11
    TYPEOF	shift  13
    CLASSNAME	shift  17
    typed_declspecs	shift  459
    declmods	shift  460
    typespec	shift  27
    structsp	shift  28
    errstmt	shift  461
    myxdecls	shift  462
    mydecls	shift  463
    mydecl	shift  464

    error	[reduce  368  (myxdecls)]
    '{' 	[reduce  368  (myxdecls)]



state 364

    methoddef  ->  '+' @41 methoddecl @42 optarglist . @43 compstmt_or_error   (341)

    @43 	shift  465

    $default	reduce  340  (@43)



state 365

    optparmlist  ->  ',' ELLIPSIS .   (383)

    $default	reduce  383  (optparmlist)



state 366

    optparmlist  ->  ',' @53 . parmlist_2   (385)

    TYPENAME	shift  5
    SCSPEC	shift  6
    TYPESPEC	shift  7
    TYPE_QUAL	shift  8
    ENUM	shift  9
    STRUCT	shift  10
    UNION	shift  11
    TYPEOF	shift  13
    CLASSNAME	shift  17
    typed_declspecs	shift  373
    declmods	shift  374
    typespec	shift  27
    structsp	shift  28
    parmlist_2	shift  466
    parms	shift  377
    parm	shift  378

    $default	reduce  289  (parmlist_2)



state 367

    keyworddecl  ->  selector ':' '(' . typename ')' identifier   (413)

    TYPENAME	shift  5
    TYPESPEC	shift  7
    TYPE_QUAL	shift  74
    ENUM	shift  9
    STRUCT	shift  10
    UNION	shift  11
    TYPEOF	shift  13
    CLASSNAME	shift  17
    typed_typespecs	shift  98
    typespec	shift  99
    structsp	shift  28
    typename	shift  467
    nonempty_type_quals	shift  101



state 368

    keyworddecl  ->  selector ':' identifier .   (414)

    $default	reduce  414  (keyworddecl)



state 369

    methoddef  ->  '-' @44 methoddecl @45 optarglist . @46 compstmt_or_error   (345)

    @46 	shift  468

    $default	reduce  344  (@46)



state 370

    string  ->  string . STRING   (91)
    maybeasm  ->  ASM '(' string . ')'   (130)

    STRING	shift  184
    ')' 	shift  469



state 371

    parmlist_or_identifiers_1  ->  error . ')'   (286)

    ')' 	shift  470



state 372

    identifiers  ->  IDENTIFIER .   (299)

    $default	reduce  299  (identifiers)



state 373

    parm  ->  typed_declspecs . parm_declarator   (294)
    parm  ->  typed_declspecs . notype_declarator   (295)
    parm  ->  typed_declspecs . absdcl   (296)

    IDENTIFIER	shift  50
    TYPENAME	shift  471
    '*' 	shift  472
    '(' 	shift  473
    '[' 	shift  226
    parm_declarator	shift  474
    notype_declarator	shift  475
    absdcl	shift  476
    absdcl1	shift  228

    $default	reduce  206  (absdcl)



state 374

    typed_declspecs  ->  declmods . typespec reserved_declspecs   (104)
    declmods  ->  declmods . TYPE_QUAL   (110)
    declmods  ->  declmods . SCSPEC   (111)
    parm  ->  declmods . notype_declarator   (297)
    parm  ->  declmods . absdcl   (298)

    IDENTIFIER	shift  50
    TYPENAME	shift  5
    SCSPEC	shift  58
    TYPESPEC	shift  7
    TYPE_QUAL	shift  59
    ENUM	shift  9
    STRUCT	shift  10
    UNION	shift  11
    TYPEOF	shift  13
    CLASSNAME	shift  17
    '*' 	shift  477
    '(' 	shift  473
    '[' 	shift  226
    typespec	shift  62
    notype_declarator	shift  478
    structsp	shift  28
    absdcl	shift  479
    absdcl1	shift  228

    $default	reduce  206  (absdcl)



state 375

    parmlist_or_identifiers  ->  @30 parmlist_or_identifiers_1 .   (283)

    $default	reduce  283  (parmlist_or_identifiers)



state 376

    parmlist_or_identifiers_1  ->  parmlist_2 . ')'   (284)

    ')' 	shift  480



state 377

    parmlist_2  ->  parms .   (290)
    parmlist_2  ->  parms . ',' ELLIPSIS   (291)
    parms  ->  parms . ',' parm   (293)

    ',' 	shift  481

    $default	reduce  290  (parmlist_2)



state 378

    parms  ->  parm .   (292)

    $default	reduce  292  (parms)



state 379

    parmlist_or_identifiers_1  ->  identifiers . ')'   (285)
    identifiers  ->  identifiers . ',' IDENTIFIER   (300)

    ')' 	shift  482
    ',' 	shift  483



state 380

    notype_declarator  ->  notype_declarator '[' expr ']' .   (167)

    $default	reduce  167  (notype_declarator)



state 381

    errstmt  ->  error ';' .   (226)

    $default	reduce  226  (errstmt)



state 382

    fndef  ->  setspecs notype_declarator @7 xdecls @8 . compstmt_or_error   (29)

    error	shift  484
    '{' 	shift  304
    compstmt_or_error	shift  485
    compstmt	shift  486



state 383

    decls  ->  decls decl .   (96)

    $default	reduce  96  (decls)



state 384

    decls  ->  decl errstmt .   (97)

    $default	reduce  97  (decls)



state 385

    decl  ->  typed_declspecs ';' .   (101)

    $default	reduce  101  (decl)



state 386

    decl  ->  typed_declspecs setspecs . initdecls ';'   (99)

    IDENTIFIER	shift  50
    TYPENAME	shift  154
    '*' 	shift  155
    '(' 	shift  156
    initdecls	shift  487
    initdcl	shift  158
    declarator	shift  256
    after_type_declarator	shift  160
    notype_declarator	shift  161



state 387

    decl  ->  declmods ';' .   (102)

    $default	reduce  102  (decl)



state 388

    decl  ->  declmods setspecs . notype_initdecls ';'   (100)

    IDENTIFIER	shift  50
    '*' 	shift  51
    '(' 	shift  52
    notype_initdecls	shift  488
    notype_initdcl	shift  54
    notype_declarator	shift  449



state 389

    maybe_attribute  ->  ATTRIBUTE '(' . '(' attribute_list ')' ')'   (138)

    '(' 	shift  489



state 390

    notype_initdcl  ->  notype_declarator maybeasm maybe_attribute '=' . @11 init   (135)

    @11 	shift  490

    $default	reduce  134  (@11)



state 391

    after_type_declarator  ->  after_type_declarator . '(' parmlist_or_identifiers   (154)
    after_type_declarator  ->  after_type_declarator . '[' expr ']'   (155)
    after_type_declarator  ->  after_type_declarator . '[' ']'   (156)
    after_type_declarator  ->  '*' type_quals after_type_declarator .   (157)

    '(' 	shift  278
    '[' 	shift  279

    $default	reduce  157  (after_type_declarator)



state 392

    after_type_declarator  ->  '(' after_type_declarator ')' .   (153)

    $default	reduce  153  (after_type_declarator)



state 393

    initdecls  ->  initdecls ',' initdcl .   (126)

    $default	reduce  126  (initdecls)



state 394

    fndef  ->  typed_declspecs setspecs declarator @3 xdecls . @4 compstmt_or_error   (21)

    @4  	shift  491

    $default	reduce  20  (@4)



state 395

    initdcl  ->  declarator maybeasm maybe_attribute . '=' @10 init   (132)
    initdcl  ->  declarator maybeasm maybe_attribute .   (133)

    '=' 	shift  492

    $default	reduce  133  (initdcl)



state 396

    after_type_declarator  ->  after_type_declarator '(' parmlist_or_identifiers .   (154)

    $default	reduce  154  (after_type_declarator)



state 397

    after_type_declarator  ->  after_type_declarator '[' ']' .   (156)

    $default	reduce  156  (after_type_declarator)



state 398

    after_type_declarator  ->  after_type_declarator '[' expr . ']'   (155)

    ']' 	shift  493



state 399

    fndef  ->  declmods setspecs notype_declarator @5 xdecls . @6 compstmt_or_error   (25)

    @6  	shift  494

    $default	reduce  24  (@6)



state 400

    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (57)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (58)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (59)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (60)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (61)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (62)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (63)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (64)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (65)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (66)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (67)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (68)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (69)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (70)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (71)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (72)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (73)
    enumerator  ->  identifier '=' expr_no_commas .   (203)

    ASSIGN	shift  201
    '=' 	shift  202
    '?' 	shift  203
    OROR	shift  204
    ANDAND	shift  205
    '|' 	shift  206
    '^' 	shift  207
    '&' 	shift  208
    EQCOMPARE	shift  209
    ARITHCOMPARE	shift  210
    LSHIFT	shift  211
    RSHIFT	shift  212
    '+' 	shift  213
    '-' 	shift  214
    '*' 	shift  215
    '/' 	shift  216
    '%' 	shift  217

    $default	reduce  203  (enumerator)



state 401

    enumlist  ->  enumlist ',' enumerator .   (201)

    $default	reduce  201  (enumlist)



state 402

    structsp  ->  ENUM '{' @15 enumlist maybecomma_warn '}' .   (181)

    $default	reduce  181  (structsp)



state 403

    structsp  ->  ENUM identifier '{' @14 enumlist maybecomma_warn . '}'   (179)

    '}' 	shift  495



state 404

    component_decl_list  ->  DEFS '(' CLASSNAME ')' .   (190)

    $default	reduce  190  (component_decl_list)



state 405

    component_declarator  ->  ':' . expr_no_commas   (199)

    IDENTIFIER	shift  73
    CONSTANT	shift  75
    STRING	shift  71
    SIZEOF	shift  76
    ALIGNOF	shift  77
    SELECTOR	shift  78
    ENCODE	shift  79
    '&' 	shift  80
    '+' 	shift  81
    '-' 	shift  82
    '*' 	shift  83
    PLUSPLUS	shift  84
    MINUSMINUS	shift  85
    '(' 	shift  86
    '[' 	shift  87
    '~' 	shift  88
    '!' 	shift  89
    unop	shift  90
    unary_expr	shift  93
    cast_expr	shift  94
    expr_no_commas	shift  496
    primary	shift  96
    string	shift  97
    objcmessageexpr	shift  102
    objcselectorexpr	shift  103
    objcencodeexpr	shift  104



state 406

    component_declarator  ->  declarator . maybe_attribute   (197)
    component_declarator  ->  declarator . ':' expr_no_commas maybe_attribute   (198)

    ATTRIBUTE	shift  269
    ':' 	shift  497
    maybe_attribute	shift  498

    $default	reduce  137  (maybe_attribute)



state 407

    component_decl  ->  typed_typespecs setspecs components .   (191)
    components  ->  components . ',' component_declarator   (196)

    ',' 	shift  499

    $default	reduce  191  (component_decl)



state 408

    components  ->  component_declarator .   (195)

    $default	reduce  195  (components)



state 409

    component_decl  ->  nonempty_type_quals setspecs components .   (192)
    components  ->  components . ',' component_declarator   (196)

    ',' 	shift  499

    $default	reduce  192  (component_decl)



state 410

    structsp  ->  STRUCT identifier '{' @12 component_decl_list '}' .   (171)

    $default	reduce  171  (structsp)



state 411

    structsp  ->  UNION identifier '{' @13 component_decl_list '}' .   (175)

    $default	reduce  175  (structsp)



state 412

    unary_expr  ->  SIZEOF '(' typename ')' .   (50)

    $default	reduce  50  (unary_expr)



state 413

    unary_expr  ->  ALIGNOF '(' typename ')' .   (52)

    $default	reduce  52  (unary_expr)



state 414

    keywordname  ->  selector ':' .   (433)

    $default	reduce  433  (keywordname)



state 415

    objcselectorexpr  ->  SELECTOR '(' selectorarg ')' .   (435)

    $default	reduce  435  (objcselectorexpr)



state 416

    keywordname  ->  selector . ':'   (433)

    ':' 	shift  414



state 417

    keywordnamelist  ->  keywordnamelist keywordname .   (432)

    $default	reduce  432  (keywordnamelist)



state 418

    objcencodeexpr  ->  ENCODE '(' typename ')' .   (436)

    $default	reduce  436  (objcencodeexpr)



state 419

    compstmt  ->  '{' '}' .   (230)

    $default	reduce  230  (compstmt)



state 420

    compstmt  ->  '{' pushlevel . decls xstmts '}'   (231)
    compstmt  ->  '{' pushlevel . error '}'   (232)
    compstmt  ->  '{' pushlevel . stmts '}'   (233)

    error	shift  500
    IDENTIFIER	shift  501
    TYPENAME	shift  502
    SCSPEC	shift  6
    TYPESPEC	shift  7
    TYPE_QUAL	shift  8
    CONSTANT	shift  75
    STRING	shift  71
    SIZEOF	shift  76
    ENUM	shift  9
    STRUCT	shift  10
    UNION	shift  11
    IF  	shift  503
    WHILE	shift  504
    DO  	shift  505
    FOR 	shift  506
    SWITCH	shift  507
    CASE	shift  508
    DEFAULT	shift  509
    BREAK	shift  510
    CONTINUE	shift  511
    RETURN	shift  512
    GOTO	shift  513
    ASM 	shift  514
    TYPEOF	shift  13
    ALIGNOF	shift  77
    SELECTOR	shift  78
    ENCODE	shift  79
    CLASSNAME	shift  515
    '&' 	shift  80
    '+' 	shift  81
    '-' 	shift  82
    '*' 	shift  83
    PLUSPLUS	shift  84
    MINUSMINUS	shift  85
    '(' 	shift  86
    '[' 	shift  87
    ';' 	shift  516
    '~' 	shift  88
    '!' 	shift  89
    '{' 	shift  304
    identifier	shift  517
    unop	shift  90
    expr	shift  518
    nonnull_exprlist	shift  92
    unary_expr	shift  93
    cast_expr	shift  94
    expr_no_commas	shift  95
    primary	shift  96
    string	shift  97
    decls	shift  519
    decl	shift  265
    typed_declspecs	shift  266
    declmods	shift  267
    typespec	shift  27
    structsp	shift  28
    stmts	shift  520
    errstmt	shift  268
    compstmt	shift  521
    simple_if	shift  522
    stmt	shift  523
    objcmessageexpr	shift  102
    objcselectorexpr	shift  103
    objcencodeexpr	shift  104



state 421

    primary  ->  '(' @9 compstmt ')' .   (80)

    $default	reduce  80  (primary)



state 422

    cast_expr  ->  '(' typename ')' '{' . initlist maybecomma '}'   (55)

    error	shift  524
    IDENTIFIER	shift  73
    CONSTANT	shift  75
    STRING	shift  71
    SIZEOF	shift  76
    ALIGNOF	shift  77
    SELECTOR	shift  78
    ENCODE	shift  79
    '&' 	shift  80
    '+' 	shift  81
    '-' 	shift  82
    '*' 	shift  83
    PLUSPLUS	shift  84
    MINUSMINUS	shift  85
    '(' 	shift  86
    '[' 	shift  87
    '~' 	shift  88
    '!' 	shift  89
    '{' 	shift  525
    unop	shift  90
    unary_expr	shift  93
    cast_expr	shift  94
    expr_no_commas	shift  526
    primary	shift  96
    string	shift  97
    init	shift  527
    initlist	shift  528
    objcmessageexpr	shift  102
    objcselectorexpr	shift  103
    objcencodeexpr	shift  104



state 423

    cast_expr  ->  '(' typename ')' cast_expr .   (54)

    $default	reduce  54  (cast_expr)



state 424

    objcmessageexpr  ->  '[' @54 receiver @55 . messageargs ']'   (428)

    IDENTIFIER	shift  112
    TYPENAME	shift  113
    TYPESPEC	shift  114
    TYPE_QUAL	shift  115
    SIZEOF	shift  116
    ENUM	shift  117
    STRUCT	shift  118
    UNION	shift  119
    IF  	shift  120
    ELSE	shift  121
    WHILE	shift  122
    DO  	shift  123
    FOR 	shift  124
    SWITCH	shift  125
    CASE	shift  126
    DEFAULT	shift  127
    BREAK	shift  128
    CONTINUE	shift  129
    RETURN	shift  130
    GOTO	shift  131
    ASM 	shift  132
    TYPEOF	shift  133
    ALIGNOF	shift  134
    ':' 	shift  529
    selector	shift  530
    reservedwords	shift  141
    messageargs	shift  531
    keywordarglist	shift  532
    keywordarg	shift  533



state 425

    expr_no_commas  ->  expr_no_commas '?' xexpr ':' . expr_no_commas   (71)

    IDENTIFIER	shift  73
    CONSTANT	shift  75
    STRING	shift  71
    SIZEOF	shift  76
    ALIGNOF	shift  77
    SELECTOR	shift  78
    ENCODE	shift  79
    '&' 	shift  80
    '+' 	shift  81
    '-' 	shift  82
    '*' 	shift  83
    PLUSPLUS	shift  84
    MINUSMINUS	shift  85
    '(' 	shift  86
    '[' 	shift  87
    '~' 	shift  88
    '!' 	shift  89
    unop	shift  90
    unary_expr	shift  93
    cast_expr	shift  94
    expr_no_commas	shift  534
    primary	shift  96
    string	shift  97
    objcmessageexpr	shift  102
    objcselectorexpr	shift  103
    objcencodeexpr	shift  104



state 426

    primary  ->  primary '(' exprlist ')' .   (81)

    $default	reduce  81  (primary)



state 427

    primary  ->  primary '[' expr ']' .   (82)

    $default	reduce  82  (primary)



state 428

    absdcl1  ->  '*' type_quals absdcl1 .   (213)
    absdcl1  ->  absdcl1 . '(' parmlist   (215)
    absdcl1  ->  absdcl1 . '[' expr ']'   (216)
    absdcl1  ->  absdcl1 . '[' ']'   (217)

    '(' 	shift  340
    '[' 	shift  341

    $default	reduce  213  (absdcl1)



state 429

    absdcl1  ->  '(' absdcl1 ')' .   (212)

    $default	reduce  212  (absdcl1)



state 430

    parmlist_1  ->  error . ')'   (288)

    ')' 	shift  535



state 431

    parmlist  ->  @29 parmlist_1 .   (281)

    $default	reduce  281  (parmlist)



state 432

    parmlist_1  ->  parmlist_2 . ')'   (287)

    ')' 	shift  536



state 433

    absdcl1  ->  '[' expr ']' .   (219)

    $default	reduce  219  (absdcl1)



state 434

    absdcl1  ->  absdcl1 '(' parmlist .   (215)

    $default	reduce  215  (absdcl1)



state 435

    absdcl1  ->  absdcl1 '[' ']' .   (217)

    $default	reduce  217  (absdcl1)



state 436

    absdcl1  ->  absdcl1 '[' expr . ']'   (216)

    ']' 	shift  537



state 437

    classdef  ->  INTERFACE identifier ':' identifier '{' @34 . ivar_decl_list '}' @35 methodprotolist END   (311)

    ivar_decl_list	shift  538
    ivar_decls	shift  348

    $default	reduce  326  (ivar_decls)



state 438

    classdef  ->  INTERFACE identifier ':' identifier @36 methodprotolist . END   (313)

    END 	shift  539



state 439

    classdef  ->  INTERFACE identifier '(' identifier ')' @39 . methodprotolist END   (321)

    methodprotolist	shift  540
    @47 	shift  238

    END 	reduce  346  (methodprotolist)
    $default	reduce  347  (@47)



state 440

    classdef  ->  INTERFACE identifier '{' @31 ivar_decl_list '}' . @32 methodprotolist END   (306)

    @32 	shift  541

    $default	reduce  305  (@32)



state 441

    ivar_decl  ->  error .   (331)

    $default	reduce  331  (ivar_decl)



state 442

    ivar_decl_list  ->  ivar_decls PUBLIC . @40 ivar_decls   (324)

    @40 	shift  542

    $default	reduce  323  (@40)



state 443

    ivar_decls  ->  ivar_decls ';' .   (328)

    $default	reduce  328  (ivar_decls)



state 444

    ivar_decl  ->  typed_typespecs . setspecs ivars   (329)

    setspecs	shift  543

    $default	reduce  98  (setspecs)



state 445

    typed_typespecs  ->  nonempty_type_quals . typespec reserved_typespecquals   (113)
    nonempty_type_quals  ->  nonempty_type_quals . TYPE_QUAL   (209)
    ivar_decl  ->  nonempty_type_quals . setspecs ivars   (330)

    TYPENAME	shift  5
    TYPESPEC	shift  7
    TYPE_QUAL	shift  231
    ENUM	shift  9
    STRUCT	shift  10
    UNION	shift  11
    TYPEOF	shift  13
    CLASSNAME	shift  17
    setspecs	shift  544
    typespec	shift  232
    structsp	shift  28

    TYPENAME	[reduce  98  (setspecs)]
    $default	reduce  98  (setspecs)



state 446

    ivar_decls  ->  ivar_decls ivar_decl . ';'   (327)

    ';' 	shift  545



state 447

    methodproto  ->  '+' @49 . methoddecl @50 semi_or_error   (358)

    IDENTIFIER	shift  112
    TYPENAME	shift  113
    TYPESPEC	shift  114
    TYPE_QUAL	shift  115
    SIZEOF	shift  116
    ENUM	shift  117
    STRUCT	shift  118
    UNION	shift  119
    IF  	shift  120
    ELSE	shift  121
    WHILE	shift  122
    DO  	shift  123
    FOR 	shift  124
    SWITCH	shift  125
    CASE	shift  126
    DEFAULT	shift  127
    BREAK	shift  128
    CONTINUE	shift  129
    RETURN	shift  130
    GOTO	shift  131
    ASM 	shift  132
    TYPEOF	shift  133
    ALIGNOF	shift  134
    ':' 	shift  135
    '(' 	shift  136
    methoddecl	shift  546
    unaryselector	shift  138
    keywordselector	shift  139
    selector	shift  140
    reservedwords	shift  141
    keyworddecl	shift  142



state 448

    methodproto  ->  '-' @51 . methoddecl @52 semi_or_error   (361)

    IDENTIFIER	shift  112
    TYPENAME	shift  113
    TYPESPEC	shift  114
    TYPE_QUAL	shift  115
    SIZEOF	shift  116
    ENUM	shift  117
    STRUCT	shift  118
    UNION	shift  119
    IF  	shift  120
    ELSE	shift  121
    WHILE	shift  122
    DO  	shift  123
    FOR 	shift  124
    SWITCH	shift  125
    CASE	shift  126
    DEFAULT	shift  127
    BREAK	shift  128
    CONTINUE	shift  129
    RETURN	shift  130
    GOTO	shift  131
    ASM 	shift  132
    TYPEOF	shift  133
    ALIGNOF	shift  134
    ':' 	shift  135
    '(' 	shift  136
    methoddecl	shift  547
    unaryselector	shift  138
    keywordselector	shift  139
    selector	shift  140
    reservedwords	shift  141
    keyworddecl	shift  142



state 449

    notype_initdcl  ->  notype_declarator . maybeasm maybe_attribute '=' @11 init   (135)
    notype_initdcl  ->  notype_declarator . maybeasm maybe_attribute   (136)
    notype_declarator  ->  notype_declarator . '(' parmlist_or_identifiers   (164)
    notype_declarator  ->  notype_declarator . '[' expr ']'   (167)
    notype_declarator  ->  notype_declarator . '[' ']'   (168)

    ASM 	shift  149
    '(' 	shift  150
    '[' 	shift  151
    maybeasm	shift  153

    $default	reduce  129  (maybeasm)



state 450

    datadef  ->  typed_declspecs setspecs . initdecls ';'   (13)

    IDENTIFIER	shift  50
    TYPENAME	shift  154
    '*' 	shift  155
    '(' 	shift  156
    initdecls	shift  157
    initdcl	shift  158
    declarator	shift  256
    after_type_declarator	shift  160
    notype_declarator	shift  161



state 451

    datadef  ->  declmods setspecs . notype_initdecls ';'   (12)

    IDENTIFIER	shift  50
    '*' 	shift  51
    '(' 	shift  52
    notype_initdecls	shift  162
    notype_initdcl	shift  54
    notype_declarator	shift  449



state 452

    methodprotolist2  ->  methodprotolist2 @48 . datadef   (353)

    error	shift  4
    TYPENAME	shift  5
    SCSPEC	shift  6
    TYPESPEC	shift  7
    TYPE_QUAL	shift  8
    ENUM	shift  9
    STRUCT	shift  10
    UNION	shift  11
    TYPEOF	shift  13
    CLASSNAME	shift  17
    ';' 	shift  20
    datadef	shift  548
    setspecs	shift  353
    typed_declspecs	shift  354
    declmods	shift  355
    typespec	shift  27
    structsp	shift  28

    IDENTIFIER	reduce  98  (setspecs)
    '*' 	reduce  98  (setspecs)
    '(' 	reduce  98  (setspecs)



state 453

    methodprotolist2  ->  methodprotolist2 methodproto .   (351)

    $default	reduce  351  (methodprotolist2)



state 454

    classdef  ->  IMPLEMENTATION identifier ':' identifier '{' @38 . ivar_decl_list '}'   (318)

    ivar_decl_list	shift  549
    ivar_decls	shift  348

    $default	reduce  326  (ivar_decls)



state 455

    classdef  ->  IMPLEMENTATION identifier '{' @37 ivar_decl_list '}' .   (315)

    $default	reduce  315  (classdef)



state 456

    keyworddecl  ->  ':' '(' typename ')' . identifier   (415)

    IDENTIFIER	shift  35
    TYPENAME	shift  36
    CLASSNAME	shift  37
    identifier	shift  550



state 457

    methoddecl  ->  '(' typename ')' unaryselector .   (362)

    $default	reduce  362  (methoddecl)



state 458

    methoddecl  ->  '(' typename ')' keywordselector . optparmlist   (364)
    keywordselector  ->  keywordselector . keyworddecl   (388)

    IDENTIFIER	shift  112
    TYPENAME	shift  113
    TYPESPEC	shift  114
    TYPE_QUAL	shift  115
    SIZEOF	shift  116
    ENUM	shift  117
    STRUCT	shift  118
    UNION	shift  119
    IF  	shift  120
    ELSE	shift  121
    WHILE	shift  122
    DO  	shift  123
    FOR 	shift  124
    SWITCH	shift  125
    CASE	shift  126
    DEFAULT	shift  127
    BREAK	shift  128
    CONTINUE	shift  129
    RETURN	shift  130
    GOTO	shift  131
    ASM 	shift  132
    TYPEOF	shift  133
    ALIGNOF	shift  134
    ':' 	shift  135
    ',' 	shift  246
    optparmlist	shift  551
    selector	shift  248
    reservedwords	shift  141
    keyworddecl	shift  249

    $default	reduce  382  (optparmlist)



state 459

    mydecl  ->  typed_declspecs . setspecs myparms ';'   (374)
    mydecl  ->  typed_declspecs . ';'   (375)

    ';' 	shift  552
    setspecs	shift  553

    ';' 	[reduce  98  (setspecs)]
    $default	reduce  98  (setspecs)



state 460

    typed_declspecs  ->  declmods . typespec reserved_declspecs   (104)
    declmods  ->  declmods . TYPE_QUAL   (110)
    declmods  ->  declmods . SCSPEC   (111)
    mydecl  ->  declmods . ';'   (376)

    TYPENAME	shift  5
    SCSPEC	shift  58
    TYPESPEC	shift  7
    TYPE_QUAL	shift  59
    ENUM	shift  9
    STRUCT	shift  10
    UNION	shift  11
    TYPEOF	shift  13
    CLASSNAME	shift  17
    ';' 	shift  554
    typespec	shift  62
    structsp	shift  28



state 461

    mydecls  ->  errstmt .   (371)

    $default	reduce  371  (mydecls)



state 462

    optarglist  ->  ';' myxdecls .   (367)

    $default	reduce  367  (optarglist)



state 463

    myxdecls  ->  mydecls .   (369)
    mydecls  ->  mydecls . mydecl   (372)

    TYPENAME	shift  5
    SCSPEC	shift  6
    TYPESPEC	shift  7
    TYPE_QUAL	shift  8
    ENUM	shift  9
    STRUCT	shift  10
    UNION	shift  11
    TYPEOF	shift  13
    CLASSNAME	shift  17
    typed_declspecs	shift  459
    declmods	shift  460
    typespec	shift  27
    structsp	shift  28
    mydecl	shift  555

    $default	reduce  369  (myxdecls)



state 464

    mydecls  ->  mydecl .   (370)
    mydecls  ->  mydecl . errstmt   (373)

    error	shift  262
    errstmt	shift  556

    error	[reduce  370  (mydecls)]
    TYPENAME	reduce  370  (mydecls)
    SCSPEC	reduce  370  (mydecls)
    TYPESPEC	reduce  370  (mydecls)
    TYPE_QUAL	reduce  370  (mydecls)
    ENUM	reduce  370  (mydecls)
    STRUCT	reduce  370  (mydecls)
    UNION	reduce  370  (mydecls)
    TYPEOF	reduce  370  (mydecls)
    CLASSNAME	reduce  370  (mydecls)
    '{' 	reduce  370  (mydecls)



state 465

    methoddef  ->  '+' @41 methoddecl @42 optarglist @43 . compstmt_or_error   (341)

    error	shift  484
    '{' 	shift  304
    compstmt_or_error	shift  557
    compstmt	shift  486



state 466

    optparmlist  ->  ',' @53 parmlist_2 .   (385)

    $default	reduce  385  (optparmlist)



state 467

    keyworddecl  ->  selector ':' '(' typename . ')' identifier   (413)

    ')' 	shift  558



state 468

    methoddef  ->  '-' @44 methoddecl @45 optarglist @46 . compstmt_or_error   (345)

    error	shift  484
    '{' 	shift  304
    compstmt_or_error	shift  559
    compstmt	shift  486



state 469

    maybeasm  ->  ASM '(' string ')' .   (130)

    $default	reduce  130  (maybeasm)



state 470

    parmlist_or_identifiers_1  ->  error ')' .   (286)

    $default	reduce  286  (parmlist_or_identifiers_1)



state 471

    parm_declarator  ->  TYPENAME .   (163)

    $default	reduce  163  (parm_declarator)



state 472

    parm_declarator  ->  '*' . type_quals parm_declarator   (162)
    notype_declarator  ->  '*' . type_quals notype_declarator   (166)
    absdcl1  ->  '*' . type_quals absdcl1   (213)
    absdcl1  ->  '*' . type_quals   (214)

    type_quals	shift  560

    $default	reduce  210  (type_quals)



state 473

    notype_declarator  ->  '(' . notype_declarator ')'   (165)
    absdcl1  ->  '(' . absdcl1 ')'   (212)
    absdcl1  ->  '(' . parmlist   (218)

    IDENTIFIER	shift  50
    '*' 	shift  477
    '(' 	shift  473
    '[' 	shift  226
    notype_declarator	shift  145
    absdcl1	shift  335
    parmlist	shift  336
    @29 	shift  337

    $default	reduce  280  (@29)



state 474

    parm_declarator  ->  parm_declarator . '(' parmlist_or_identifiers   (159)
    parm_declarator  ->  parm_declarator . '[' expr ']'   (160)
    parm_declarator  ->  parm_declarator . '[' ']'   (161)
    parm  ->  typed_declspecs parm_declarator .   (294)

    '(' 	shift  561
    '[' 	shift  562

    $default	reduce  294  (parm)



state 475

    notype_declarator  ->  notype_declarator . '(' parmlist_or_identifiers   (164)
    notype_declarator  ->  notype_declarator . '[' expr ']'   (167)
    notype_declarator  ->  notype_declarator . '[' ']'   (168)
    parm  ->  typed_declspecs notype_declarator .   (295)

    '(' 	shift  150
    '[' 	shift  151

    $default	reduce  295  (parm)



state 476

    parm  ->  typed_declspecs absdcl .   (296)

    $default	reduce  296  (parm)



state 477

    notype_declarator  ->  '*' . type_quals notype_declarator   (166)
    absdcl1  ->  '*' . type_quals absdcl1   (213)
    absdcl1  ->  '*' . type_quals   (214)

    type_quals	shift  563

    $default	reduce  210  (type_quals)



state 478

    notype_declarator  ->  notype_declarator . '(' parmlist_or_identifiers   (164)
    notype_declarator  ->  notype_declarator . '[' expr ']'   (167)
    notype_declarator  ->  notype_declarator . '[' ']'   (168)
    parm  ->  declmods notype_declarator .   (297)

    '(' 	shift  150
    '[' 	shift  151

    $default	reduce  297  (parm)



state 479

    parm  ->  declmods absdcl .   (298)

    $default	reduce  298  (parm)



state 480

    parmlist_or_identifiers_1  ->  parmlist_2 ')' .   (284)

    $default	reduce  284  (parmlist_or_identifiers_1)



state 481

    parmlist_2  ->  parms ',' . ELLIPSIS   (291)
    parms  ->  parms ',' . parm   (293)

    TYPENAME	shift  5
    SCSPEC	shift  6
    TYPESPEC	shift  7
    TYPE_QUAL	shift  8
    ELLIPSIS	shift  564
    ENUM	shift  9
    STRUCT	shift  10
    UNION	shift  11
    TYPEOF	shift  13
    CLASSNAME	shift  17
    typed_declspecs	shift  373
    declmods	shift  374
    typespec	shift  27
    structsp	shift  28
    parm	shift  565



state 482

    parmlist_or_identifiers_1  ->  identifiers ')' .   (285)

    $default	reduce  285  (parmlist_or_identifiers_1)



state 483

    identifiers  ->  identifiers ',' . IDENTIFIER   (300)

    IDENTIFIER	shift  566



state 484

    compstmt_or_error  ->  error . compstmt   (229)

    '{' 	shift  304
    compstmt	shift  567



state 485

    fndef  ->  setspecs notype_declarator @7 xdecls @8 compstmt_or_error .   (29)

    $default	reduce  29  (fndef)



state 486

    compstmt_or_error  ->  compstmt .   (228)

    $default	reduce  228  (compstmt_or_error)



state 487

    decl  ->  typed_declspecs setspecs initdecls . ';'   (99)
    initdecls  ->  initdecls . ',' initdcl   (126)

    ';' 	shift  568
    ',' 	shift  274



state 488

    decl  ->  declmods setspecs notype_initdecls . ';'   (100)
    notype_initdecls  ->  notype_initdecls . ',' initdcl   (128)

    ';' 	shift  569
    ',' 	shift  147



state 489

    maybe_attribute  ->  ATTRIBUTE '(' '(' . attribute_list ')' ')'   (138)

    IDENTIFIER	shift  570
    attribute_list	shift  571
    attrib	shift  572



state 490

    notype_initdcl  ->  notype_declarator maybeasm maybe_attribute '=' @11 . init   (135)

    error	shift  524
    IDENTIFIER	shift  73
    CONSTANT	shift  75
    STRING	shift  71
    SIZEOF	shift  76
    ALIGNOF	shift  77
    SELECTOR	shift  78
    ENCODE	shift  79
    '&' 	shift  80
    '+' 	shift  81
    '-' 	shift  82
    '*' 	shift  83
    PLUSPLUS	shift  84
    MINUSMINUS	shift  85
    '(' 	shift  86
    '[' 	shift  87
    '~' 	shift  88
    '!' 	shift  89
    '{' 	shift  525
    unop	shift  90
    unary_expr	shift  93
    cast_expr	shift  94
    expr_no_commas	shift  526
    primary	shift  96
    string	shift  97
    init	shift  573
    objcmessageexpr	shift  102
    objcselectorexpr	shift  103
    objcencodeexpr	shift  104



state 491

    fndef  ->  typed_declspecs setspecs declarator @3 xdecls @4 . compstmt_or_error   (21)

    error	shift  484
    '{' 	shift  304
    compstmt_or_error	shift  574
    compstmt	shift  486



state 492

    initdcl  ->  declarator maybeasm maybe_attribute '=' . @10 init   (132)

    @10 	shift  575

    $default	reduce  131  (@10)



state 493

    after_type_declarator  ->  after_type_declarator '[' expr ']' .   (155)

    $default	reduce  155  (after_type_declarator)



state 494

    fndef  ->  declmods setspecs notype_declarator @5 xdecls @6 . compstmt_or_error   (25)

    error	shift  484
    '{' 	shift  304
    compstmt_or_error	shift  576
    compstmt	shift  486



state 495

    structsp  ->  ENUM identifier '{' @14 enumlist maybecomma_warn '}' .   (179)

    $default	reduce  179  (structsp)



state 496

    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (57)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (58)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (59)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (60)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (61)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (62)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (63)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (64)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (65)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (66)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (67)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (68)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (69)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (70)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (71)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (72)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (73)
    component_declarator  ->  ':' expr_no_commas .   (199)

    ASSIGN	shift  201
    '=' 	shift  202
    '?' 	shift  203
    OROR	shift  204
    ANDAND	shift  205
    '|' 	shift  206
    '^' 	shift  207
    '&' 	shift  208
    EQCOMPARE	shift  209
    ARITHCOMPARE	shift  210
    LSHIFT	shift  211
    RSHIFT	shift  212
    '+' 	shift  213
    '-' 	shift  214
    '*' 	shift  215
    '/' 	shift  216
    '%' 	shift  217

    $default	reduce  199  (component_declarator)



state 497

    component_declarator  ->  declarator ':' . expr_no_commas maybe_attribute   (198)

    IDENTIFIER	shift  73
    CONSTANT	shift  75
    STRING	shift  71
    SIZEOF	shift  76
    ALIGNOF	shift  77
    SELECTOR	shift  78
    ENCODE	shift  79
    '&' 	shift  80
    '+' 	shift  81
    '-' 	shift  82
    '*' 	shift  83
    PLUSPLUS	shift  84
    MINUSMINUS	shift  85
    '(' 	shift  86
    '[' 	shift  87
    '~' 	shift  88
    '!' 	shift  89
    unop	shift  90
    unary_expr	shift  93
    cast_expr	shift  94
    expr_no_commas	shift  577
    primary	shift  96
    string	shift  97
    objcmessageexpr	shift  102
    objcselectorexpr	shift  103
    objcencodeexpr	shift  104



state 498

    component_declarator  ->  declarator maybe_attribute .   (197)

    $default	reduce  197  (component_declarator)



state 499

    components  ->  components ',' . component_declarator   (196)

    IDENTIFIER	shift  50
    TYPENAME	shift  154
    ':' 	shift  405
    '*' 	shift  155
    '(' 	shift  156
    declarator	shift  406
    after_type_declarator	shift  160
    notype_declarator	shift  161
    component_declarator	shift  578



state 500

    errstmt  ->  error . ';'   (226)
    compstmt  ->  '{' pushlevel error . '}'   (232)

    ';' 	shift  381
    '}' 	shift  579



state 501

    identifier  ->  IDENTIFIER .   (31)
    primary  ->  IDENTIFIER .   (74)

    ':' 	reduce  31  (identifier)
    $default	reduce  74  (primary)



state 502

    identifier  ->  TYPENAME .   (32)
    typespec  ->  TYPENAME .   (118)

    ':' 	reduce  32  (identifier)
    $default	reduce  118  (typespec)



state 503

    simple_if  ->  IF . '(' expr ')' @16 stmt   (235)

    '(' 	shift  580



state 504

    stmt  ->  WHILE . @18 '(' expr ')' @19 stmt   (243)

    @18 	shift  581

    $default	reduce  241  (@18)



state 505

    stmt  ->  DO . @20 stmt WHILE @21 '(' expr ')' ';'   (246)

    @20 	shift  582

    $default	reduce  244  (@20)



state 506

    stmt  ->  FOR . '(' xexpr ';' @22 xexpr ';' @23 xexpr ')' @24 stmt   (250)

    '(' 	shift  583



state 507

    stmt  ->  SWITCH . '(' expr ')' @25 stmt   (252)

    '(' 	shift  584



state 508

    stmt  ->  CASE . expr ':' @26 stmt   (254)

    IDENTIFIER	shift  73
    CONSTANT	shift  75
    STRING	shift  71
    SIZEOF	shift  76
    ALIGNOF	shift  77
    SELECTOR	shift  78
    ENCODE	shift  79
    '&' 	shift  80
    '+' 	shift  81
    '-' 	shift  82
    '*' 	shift  83
    PLUSPLUS	shift  84
    MINUSMINUS	shift  85
    '(' 	shift  86
    '[' 	shift  87
    '~' 	shift  88
    '!' 	shift  89
    unop	shift  90
    expr	shift  585
    nonnull_exprlist	shift  92
    unary_expr	shift  93
    cast_expr	shift  94
    expr_no_commas	shift  95
    primary	shift  96
    string	shift  97
    objcmessageexpr	shift  102
    objcselectorexpr	shift  103
    objcencodeexpr	shift  104



state 509

    stmt  ->  DEFAULT . ':' @27 stmt   (256)

    ':' 	shift  586



state 510

    stmt  ->  BREAK . ';'   (257)

    ';' 	shift  587



state 511

    stmt  ->  CONTINUE . ';'   (258)

    ';' 	shift  588



state 512

    stmt  ->  RETURN . ';'   (259)
    stmt  ->  RETURN . expr ';'   (260)

    IDENTIFIER	shift  73
    CONSTANT	shift  75
    STRING	shift  71
    SIZEOF	shift  76
    ALIGNOF	shift  77
    SELECTOR	shift  78
    ENCODE	shift  79
    '&' 	shift  80
    '+' 	shift  81
    '-' 	shift  82
    '*' 	shift  83
    PLUSPLUS	shift  84
    MINUSMINUS	shift  85
    '(' 	shift  86
    '[' 	shift  87
    ';' 	shift  589
    '~' 	shift  88
    '!' 	shift  89
    unop	shift  90
    expr	shift  590
    nonnull_exprlist	shift  92
    unary_expr	shift  93
    cast_expr	shift  94
    expr_no_commas	shift  95
    primary	shift  96
    string	shift  97
    objcmessageexpr	shift  102
    objcselectorexpr	shift  103
    objcencodeexpr	shift  104



state 513

    stmt  ->  GOTO . identifier ';'   (265)

    IDENTIFIER	shift  35
    TYPENAME	shift  36
    CLASSNAME	shift  37
    identifier	shift  591



state 514

    stmt  ->  ASM . maybe_type_qual '(' string ')' ';'   (261)
    stmt  ->  ASM . maybe_type_qual '(' string ':' asm_operands ')' ';'   (262)
    stmt  ->  ASM . maybe_type_qual '(' string ':' asm_operands ':' asm_operands ')' ';'   (263)
    stmt  ->  ASM . maybe_type_qual '(' string ':' asm_operands ':' asm_operands ':' asm_clobbers ')' ';'   (264)

    TYPE_QUAL	shift  592
    maybe_type_qual	shift  593

    $default	reduce  269  (maybe_type_qual)



state 515

    identifier  ->  CLASSNAME .   (33)
    typespec  ->  CLASSNAME .   (119)

    ':' 	reduce  33  (identifier)
    $default	reduce  119  (typespec)



state 516

    stmt  ->  ';' .   (268)

    $default	reduce  268  (stmt)



state 517

    stmt  ->  identifier . ':' @28 stmt   (267)

    ':' 	shift  594



state 518

    stmt  ->  expr . ';'   (237)

    ';' 	shift  595



state 519

    decls  ->  decls . decl   (96)
    compstmt  ->  '{' pushlevel decls . xstmts '}'   (231)

    IDENTIFIER	shift  501
    TYPENAME	shift  502
    SCSPEC	shift  6
    TYPESPEC	shift  7
    TYPE_QUAL	shift  8
    CONSTANT	shift  75
    STRING	shift  71
    SIZEOF	shift  76
    ENUM	shift  9
    STRUCT	shift  10
    UNION	shift  11
    IF  	shift  503
    WHILE	shift  504
    DO  	shift  505
    FOR 	shift  506
    SWITCH	shift  507
    CASE	shift  508
    DEFAULT	shift  509
    BREAK	shift  510
    CONTINUE	shift  511
    RETURN	shift  512
    GOTO	shift  513
    ASM 	shift  514
    TYPEOF	shift  13
    ALIGNOF	shift  77
    SELECTOR	shift  78
    ENCODE	shift  79
    CLASSNAME	shift  515
    '&' 	shift  80
    '+' 	shift  81
    '-' 	shift  82
    '*' 	shift  83
    PLUSPLUS	shift  84
    MINUSMINUS	shift  85
    '(' 	shift  86
    '[' 	shift  87
    ';' 	shift  516
    '~' 	shift  88
    '!' 	shift  89
    '{' 	shift  304
    identifier	shift  517
    unop	shift  90
    expr	shift  518
    nonnull_exprlist	shift  92
    unary_expr	shift  93
    cast_expr	shift  94
    expr_no_commas	shift  95
    primary	shift  96
    string	shift  97
    decl	shift  383
    typed_declspecs	shift  266
    declmods	shift  267
    typespec	shift  27
    structsp	shift  28
    stmts	shift  596
    xstmts	shift  597
    compstmt	shift  521
    simple_if	shift  522
    stmt	shift  523
    objcmessageexpr	shift  102
    objcselectorexpr	shift  103
    objcencodeexpr	shift  104

    $default	reduce  224  (xstmts)



state 520

    stmts  ->  stmts . stmt   (222)
    stmts  ->  stmts . errstmt   (223)
    compstmt  ->  '{' pushlevel stmts . '}'   (233)

    error	shift  262
    IDENTIFIER	shift  501
    TYPENAME	shift  36
    CONSTANT	shift  75
    STRING	shift  71
    SIZEOF	shift  76
    IF  	shift  503
    WHILE	shift  504
    DO  	shift  505
    FOR 	shift  506
    SWITCH	shift  507
    CASE	shift  508
    DEFAULT	shift  509
    BREAK	shift  510
    CONTINUE	shift  511
    RETURN	shift  512
    GOTO	shift  513
    ASM 	shift  514
    ALIGNOF	shift  77
    SELECTOR	shift  78
    ENCODE	shift  79
    CLASSNAME	shift  37
    '&' 	shift  80
    '+' 	shift  81
    '-' 	shift  82
    '*' 	shift  83
    PLUSPLUS	shift  84
    MINUSMINUS	shift  85
    '(' 	shift  86
    '[' 	shift  87
    ';' 	shift  516
    '}' 	shift  598
    '~' 	shift  88
    '!' 	shift  89
    '{' 	shift  304
    identifier	shift  517
    unop	shift  90
    expr	shift  518
    nonnull_exprlist	shift  92
    unary_expr	shift  93
    cast_expr	shift  94
    expr_no_commas	shift  95
    primary	shift  96
    string	shift  97
    errstmt	shift  599
    compstmt	shift  521
    simple_if	shift  522
    stmt	shift  600
    objcmessageexpr	shift  102
    objcselectorexpr	shift  103
    objcencodeexpr	shift  104



state 521

    stmt  ->  compstmt .   (236)

    $default	reduce  236  (stmt)



state 522

    stmt  ->  simple_if . ELSE @17 stmt   (239)
    stmt  ->  simple_if .   (240)

    ELSE	shift  601

    $default	reduce  240  (stmt)



state 523

    stmts  ->  stmt .   (221)

    $default	reduce  221  (stmts)



state 524

    init  ->  error .   (148)

    $default	reduce  148  (init)



state 525

    init  ->  '{' . '}'   (145)
    init  ->  '{' . initlist '}'   (146)
    init  ->  '{' . initlist ',' '}'   (147)

    error	shift  524
    IDENTIFIER	shift  73
    CONSTANT	shift  75
    STRING	shift  71
    SIZEOF	shift  76
    ALIGNOF	shift  77
    SELECTOR	shift  78
    ENCODE	shift  79
    '&' 	shift  80
    '+' 	shift  81
    '-' 	shift  82
    '*' 	shift  83
    PLUSPLUS	shift  84
    MINUSMINUS	shift  85
    '(' 	shift  86
    '[' 	shift  87
    '}' 	shift  602
    '~' 	shift  88
    '!' 	shift  89
    '{' 	shift  525
    unop	shift  90
    unary_expr	shift  93
    cast_expr	shift  94
    expr_no_commas	shift  526
    primary	shift  96
    string	shift  97
    init	shift  527
    initlist	shift  603
    objcmessageexpr	shift  102
    objcselectorexpr	shift  103
    objcencodeexpr	shift  104



state 526

    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (57)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (58)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (59)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (60)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (61)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (62)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (63)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (64)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (65)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (66)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (67)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (68)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (69)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (70)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (71)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (72)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (73)
    init  ->  expr_no_commas .   (144)

    ASSIGN	shift  201
    '=' 	shift  202
    '?' 	shift  203
    OROR	shift  204
    ANDAND	shift  205
    '|' 	shift  206
    '^' 	shift  207
    '&' 	shift  208
    EQCOMPARE	shift  209
    ARITHCOMPARE	shift  210
    LSHIFT	shift  211
    RSHIFT	shift  212
    '+' 	shift  213
    '-' 	shift  214
    '*' 	shift  215
    '/' 	shift  216
    '%' 	shift  217

    $default	reduce  144  (init)



state 527

    initlist  ->  init .   (149)

    $default	reduce  149  (initlist)



state 528

    cast_expr  ->  '(' typename ')' '{' initlist . maybecomma '}'   (55)
    initlist  ->  initlist . ',' init   (150)

    ',' 	shift  604
    maybecomma	shift  605

    $default	reduce  183  (maybecomma)



state 529

    keywordarg  ->  ':' . keywordexpr   (423)

    IDENTIFIER	shift  73
    CONSTANT	shift  75
    STRING	shift  71
    SIZEOF	shift  76
    ALIGNOF	shift  77
    SELECTOR	shift  78
    ENCODE	shift  79
    '&' 	shift  80
    '+' 	shift  81
    '-' 	shift  82
    '*' 	shift  83
    PLUSPLUS	shift  84
    MINUSMINUS	shift  85
    '(' 	shift  86
    '[' 	shift  87
    '~' 	shift  88
    '!' 	shift  89
    unop	shift  90
    nonnull_exprlist	shift  606
    unary_expr	shift  93
    cast_expr	shift  94
    expr_no_commas	shift  95
    primary	shift  96
    string	shift  97
    keywordexpr	shift  607
    objcmessageexpr	shift  102
    objcselectorexpr	shift  103
    objcencodeexpr	shift  104



state 530

    messageargs  ->  selector .   (417)
    keywordarg  ->  selector . ':' keywordexpr   (422)

    ':' 	shift  608

    $default	reduce  417  (messageargs)



state 531

    objcmessageexpr  ->  '[' @54 receiver @55 messageargs . ']'   (428)

    ']' 	shift  609



state 532

    messageargs  ->  keywordarglist .   (418)
    keywordarglist  ->  keywordarglist . keywordarg   (420)

    IDENTIFIER	shift  112
    TYPENAME	shift  113
    TYPESPEC	shift  114
    TYPE_QUAL	shift  115
    SIZEOF	shift  116
    ENUM	shift  117
    STRUCT	shift  118
    UNION	shift  119
    IF  	shift  120
    ELSE	shift  121
    WHILE	shift  122
    DO  	shift  123
    FOR 	shift  124
    SWITCH	shift  125
    CASE	shift  126
    DEFAULT	shift  127
    BREAK	shift  128
    CONTINUE	shift  129
    RETURN	shift  130
    GOTO	shift  131
    ASM 	shift  132
    TYPEOF	shift  133
    ALIGNOF	shift  134
    ':' 	shift  529
    selector	shift  610
    reservedwords	shift  141
    keywordarg	shift  611

    $default	reduce  418  (messageargs)



state 533

    keywordarglist  ->  keywordarg .   (419)

    $default	reduce  419  (keywordarglist)



state 534

    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (57)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (58)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (59)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (60)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (61)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (62)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (63)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (64)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (65)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (66)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (67)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (68)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (69)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (70)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (71)
    expr_no_commas  ->  expr_no_commas '?' xexpr ':' expr_no_commas .   (71)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (72)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (73)

    '?' 	shift  203
    OROR	shift  204
    ANDAND	shift  205
    '|' 	shift  206
    '^' 	shift  207
    '&' 	shift  208
    EQCOMPARE	shift  209
    ARITHCOMPARE	shift  210
    LSHIFT	shift  211
    RSHIFT	shift  212
    '+' 	shift  213
    '-' 	shift  214
    '*' 	shift  215
    '/' 	shift  216
    '%' 	shift  217

    $default	reduce  71  (expr_no_commas)



state 535

    parmlist_1  ->  error ')' .   (288)

    $default	reduce  288  (parmlist_1)



state 536

    parmlist_1  ->  parmlist_2 ')' .   (287)

    $default	reduce  287  (parmlist_1)



state 537

    absdcl1  ->  absdcl1 '[' expr ']' .   (216)

    $default	reduce  216  (absdcl1)



state 538

    classdef  ->  INTERFACE identifier ':' identifier '{' @34 ivar_decl_list . '}' @35 methodprotolist END   (311)

    '}' 	shift  612



state 539

    classdef  ->  INTERFACE identifier ':' identifier @36 methodprotolist END .   (313)

    $default	reduce  313  (classdef)



state 540

    classdef  ->  INTERFACE identifier '(' identifier ')' @39 methodprotolist . END   (321)

    END 	shift  613



state 541

    classdef  ->  INTERFACE identifier '{' @31 ivar_decl_list '}' @32 . methodprotolist END   (306)

    methodprotolist	shift  614
    @47 	shift  238

    END 	reduce  346  (methodprotolist)
    $default	reduce  347  (@47)



state 542

    ivar_decl_list  ->  ivar_decls PUBLIC @40 . ivar_decls   (324)

    ivar_decls	shift  615

    $default	reduce  326  (ivar_decls)



state 543

    ivar_decl  ->  typed_typespecs setspecs . ivars   (329)

    IDENTIFIER	shift  50
    TYPENAME	shift  154
    ':' 	shift  616
    '*' 	shift  155
    '(' 	shift  156
    declarator	shift  617
    after_type_declarator	shift  160
    notype_declarator	shift  161
    ivars	shift  618
    ivar_declarator	shift  619

    $default	reduce  332  (ivars)



state 544

    ivar_decl  ->  nonempty_type_quals setspecs . ivars   (330)

    IDENTIFIER	shift  50
    TYPENAME	shift  154
    ':' 	shift  616
    '*' 	shift  155
    '(' 	shift  156
    declarator	shift  617
    after_type_declarator	shift  160
    notype_declarator	shift  161
    ivars	shift  620
    ivar_declarator	shift  619

    $default	reduce  332  (ivars)



state 545

    ivar_decls  ->  ivar_decls ivar_decl ';' .   (327)

    $default	reduce  327  (ivar_decls)



state 546

    methodproto  ->  '+' @49 methoddecl . @50 semi_or_error   (358)

    @50 	shift  621

    $default	reduce  357  (@50)



state 547

    methodproto  ->  '-' @51 methoddecl . @52 semi_or_error   (361)

    @52 	shift  622

    $default	reduce  360  (@52)



state 548

    methodprotolist2  ->  methodprotolist2 @48 datadef .   (353)

    $default	reduce  353  (methodprotolist2)



state 549

    classdef  ->  IMPLEMENTATION identifier ':' identifier '{' @38 ivar_decl_list . '}'   (318)

    '}' 	shift  623



state 550

    keyworddecl  ->  ':' '(' typename ')' identifier .   (415)

    $default	reduce  415  (keyworddecl)



state 551

    methoddecl  ->  '(' typename ')' keywordselector optparmlist .   (364)

    $default	reduce  364  (methoddecl)



state 552

    mydecl  ->  typed_declspecs ';' .   (375)

    $default	reduce  375  (mydecl)



state 553

    mydecl  ->  typed_declspecs setspecs . myparms ';'   (374)

    IDENTIFIER	shift  50
    TYPENAME	shift  471
    '*' 	shift  472
    '(' 	shift  473
    '[' 	shift  226
    parm_declarator	shift  624
    notype_declarator	shift  625
    absdcl	shift  626
    absdcl1	shift  228
    myparms	shift  627
    myparm	shift  628

    $default	reduce  206  (absdcl)



state 554

    mydecl  ->  declmods ';' .   (376)

    $default	reduce  376  (mydecl)



state 555

    mydecls  ->  mydecls mydecl .   (372)

    $default	reduce  372  (mydecls)



state 556

    mydecls  ->  mydecl errstmt .   (373)

    $default	reduce  373  (mydecls)



state 557

    methoddef  ->  '+' @41 methoddecl @42 optarglist @43 compstmt_or_error .   (341)

    $default	reduce  341  (methoddef)



state 558

    keyworddecl  ->  selector ':' '(' typename ')' . identifier   (413)

    IDENTIFIER	shift  35
    TYPENAME	shift  36
    CLASSNAME	shift  37
    identifier	shift  629



state 559

    methoddef  ->  '-' @44 methoddecl @45 optarglist @46 compstmt_or_error .   (345)

    $default	reduce  345  (methoddef)



state 560

    parm_declarator  ->  '*' type_quals . parm_declarator   (162)
    notype_declarator  ->  '*' type_quals . notype_declarator   (166)
    type_quals  ->  type_quals . TYPE_QUAL   (211)
    absdcl1  ->  '*' type_quals . absdcl1   (213)
    absdcl1  ->  '*' type_quals .   (214)

    IDENTIFIER	shift  50
    TYPENAME	shift  471
    TYPE_QUAL	shift  252
    '*' 	shift  472
    '(' 	shift  473
    '[' 	shift  226
    parm_declarator	shift  630
    notype_declarator	shift  253
    absdcl1	shift  428

    $default	reduce  214  (absdcl1)



state 561

    parm_declarator  ->  parm_declarator '(' . parmlist_or_identifiers   (159)

    parmlist_or_identifiers	shift  631
    @30 	shift  259

    $default	reduce  282  (@30)



state 562

    parm_declarator  ->  parm_declarator '[' . expr ']'   (160)
    parm_declarator  ->  parm_declarator '[' . ']'   (161)

    IDENTIFIER	shift  73
    CONSTANT	shift  75
    STRING	shift  71
    SIZEOF	shift  76
    ALIGNOF	shift  77
    SELECTOR	shift  78
    ENCODE	shift  79
    '&' 	shift  80
    '+' 	shift  81
    '-' 	shift  82
    '*' 	shift  83
    PLUSPLUS	shift  84
    MINUSMINUS	shift  85
    '(' 	shift  86
    '[' 	shift  87
    '~' 	shift  88
    '!' 	shift  89
    ']' 	shift  632
    unop	shift  90
    expr	shift  633
    nonnull_exprlist	shift  92
    unary_expr	shift  93
    cast_expr	shift  94
    expr_no_commas	shift  95
    primary	shift  96
    string	shift  97
    objcmessageexpr	shift  102
    objcselectorexpr	shift  103
    objcencodeexpr	shift  104



state 563

    notype_declarator  ->  '*' type_quals . notype_declarator   (166)
    type_quals  ->  type_quals . TYPE_QUAL   (211)
    absdcl1  ->  '*' type_quals . absdcl1   (213)
    absdcl1  ->  '*' type_quals .   (214)

    IDENTIFIER	shift  50
    TYPE_QUAL	shift  252
    '*' 	shift  477
    '(' 	shift  473
    '[' 	shift  226
    notype_declarator	shift  253
    absdcl1	shift  428

    $default	reduce  214  (absdcl1)



state 564

    parmlist_2  ->  parms ',' ELLIPSIS .   (291)

    $default	reduce  291  (parmlist_2)



state 565

    parms  ->  parms ',' parm .   (293)

    $default	reduce  293  (parms)



state 566

    identifiers  ->  identifiers ',' IDENTIFIER .   (300)

    $default	reduce  300  (identifiers)



state 567

    compstmt_or_error  ->  error compstmt .   (229)

    $default	reduce  229  (compstmt_or_error)



state 568

    decl  ->  typed_declspecs setspecs initdecls ';' .   (99)

    $default	reduce  99  (decl)



state 569

    decl  ->  declmods setspecs notype_initdecls ';' .   (100)

    $default	reduce  100  (decl)



state 570

    attrib  ->  IDENTIFIER .   (141)
    attrib  ->  IDENTIFIER . '(' CONSTANT ')'   (142)
    attrib  ->  IDENTIFIER . '(' identifiers ')'   (143)

    '(' 	shift  634

    $default	reduce  141  (attrib)



state 571

    maybe_attribute  ->  ATTRIBUTE '(' '(' attribute_list . ')' ')'   (138)
    attribute_list  ->  attribute_list . ',' attrib   (140)

    ')' 	shift  635
    ',' 	shift  636



state 572

    attribute_list  ->  attrib .   (139)

    $default	reduce  139  (attribute_list)



state 573

    notype_initdcl  ->  notype_declarator maybeasm maybe_attribute '=' @11 init .   (135)

    $default	reduce  135  (notype_initdcl)



state 574

    fndef  ->  typed_declspecs setspecs declarator @3 xdecls @4 compstmt_or_error .   (21)

    $default	reduce  21  (fndef)



state 575

    initdcl  ->  declarator maybeasm maybe_attribute '=' @10 . init   (132)

    error	shift  524
    IDENTIFIER	shift  73
    CONSTANT	shift  75
    STRING	shift  71
    SIZEOF	shift  76
    ALIGNOF	shift  77
    SELECTOR	shift  78
    ENCODE	shift  79
    '&' 	shift  80
    '+' 	shift  81
    '-' 	shift  82
    '*' 	shift  83
    PLUSPLUS	shift  84
    MINUSMINUS	shift  85
    '(' 	shift  86
    '[' 	shift  87
    '~' 	shift  88
    '!' 	shift  89
    '{' 	shift  525
    unop	shift  90
    unary_expr	shift  93
    cast_expr	shift  94
    expr_no_commas	shift  526
    primary	shift  96
    string	shift  97
    init	shift  637
    objcmessageexpr	shift  102
    objcselectorexpr	shift  103
    objcencodeexpr	shift  104



state 576

    fndef  ->  declmods setspecs notype_declarator @5 xdecls @6 compstmt_or_error .   (25)

    $default	reduce  25  (fndef)



state 577

    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (57)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (58)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (59)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (60)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (61)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (62)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (63)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (64)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (65)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (66)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (67)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (68)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (69)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (70)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (71)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (72)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (73)
    component_declarator  ->  declarator ':' expr_no_commas . maybe_attribute   (198)

    ATTRIBUTE	shift  269
    ASSIGN	shift  201
    '=' 	shift  202
    '?' 	shift  203
    OROR	shift  204
    ANDAND	shift  205
    '|' 	shift  206
    '^' 	shift  207
    '&' 	shift  208
    EQCOMPARE	shift  209
    ARITHCOMPARE	shift  210
    LSHIFT	shift  211
    RSHIFT	shift  212
    '+' 	shift  213
    '-' 	shift  214
    '*' 	shift  215
    '/' 	shift  216
    '%' 	shift  217
    maybe_attribute	shift  638

    $default	reduce  137  (maybe_attribute)



state 578

    components  ->  components ',' component_declarator .   (196)

    $default	reduce  196  (components)



state 579

    compstmt  ->  '{' pushlevel error '}' .   (232)

    $default	reduce  232  (compstmt)



state 580

    simple_if  ->  IF '(' . expr ')' @16 stmt   (235)

    IDENTIFIER	shift  73
    CONSTANT	shift  75
    STRING	shift  71
    SIZEOF	shift  76
    ALIGNOF	shift  77
    SELECTOR	shift  78
    ENCODE	shift  79
    '&' 	shift  80
    '+' 	shift  81
    '-' 	shift  82
    '*' 	shift  83
    PLUSPLUS	shift  84
    MINUSMINUS	shift  85
    '(' 	shift  86
    '[' 	shift  87
    '~' 	shift  88
    '!' 	shift  89
    unop	shift  90
    expr	shift  639
    nonnull_exprlist	shift  92
    unary_expr	shift  93
    cast_expr	shift  94
    expr_no_commas	shift  95
    primary	shift  96
    string	shift  97
    objcmessageexpr	shift  102
    objcselectorexpr	shift  103
    objcencodeexpr	shift  104



state 581

    stmt  ->  WHILE @18 . '(' expr ')' @19 stmt   (243)

    '(' 	shift  640



state 582

    stmt  ->  DO @20 . stmt WHILE @21 '(' expr ')' ';'   (246)

    IDENTIFIER	shift  501
    TYPENAME	shift  36
    CONSTANT	shift  75
    STRING	shift  71
    SIZEOF	shift  76
    IF  	shift  503
    WHILE	shift  504
    DO  	shift  505
    FOR 	shift  506
    SWITCH	shift  507
    CASE	shift  508
    DEFAULT	shift  509
    BREAK	shift  510
    CONTINUE	shift  511
    RETURN	shift  512
    GOTO	shift  513
    ASM 	shift  514
    ALIGNOF	shift  77
    SELECTOR	shift  78
    ENCODE	shift  79
    CLASSNAME	shift  37
    '&' 	shift  80
    '+' 	shift  81
    '-' 	shift  82
    '*' 	shift  83
    PLUSPLUS	shift  84
    MINUSMINUS	shift  85
    '(' 	shift  86
    '[' 	shift  87
    ';' 	shift  516
    '~' 	shift  88
    '!' 	shift  89
    '{' 	shift  304
    identifier	shift  517
    unop	shift  90
    expr	shift  518
    nonnull_exprlist	shift  92
    unary_expr	shift  93
    cast_expr	shift  94
    expr_no_commas	shift  95
    primary	shift  96
    string	shift  97
    compstmt	shift  521
    simple_if	shift  522
    stmt	shift  641
    objcmessageexpr	shift  102
    objcselectorexpr	shift  103
    objcencodeexpr	shift  104



state 583

    stmt  ->  FOR '(' . xexpr ';' @22 xexpr ';' @23 xexpr ')' @24 stmt   (250)

    IDENTIFIER	shift  73
    CONSTANT	shift  75
    STRING	shift  71
    SIZEOF	shift  76
    ALIGNOF	shift  77
    SELECTOR	shift  78
    ENCODE	shift  79
    '&' 	shift  80
    '+' 	shift  81
    '-' 	shift  82
    '*' 	shift  83
    PLUSPLUS	shift  84
    MINUSMINUS	shift  85
    '(' 	shift  86
    '[' 	shift  87
    '~' 	shift  88
    '!' 	shift  89
    unop	shift  90
    expr	shift  313
    nonnull_exprlist	shift  92
    unary_expr	shift  93
    cast_expr	shift  94
    expr_no_commas	shift  95
    primary	shift  96
    string	shift  97
    xexpr	shift  642
    objcmessageexpr	shift  102
    objcselectorexpr	shift  103
    objcencodeexpr	shift  104

    $default	reduce  271  (xexpr)



state 584

    stmt  ->  SWITCH '(' . expr ')' @25 stmt   (252)

    IDENTIFIER	shift  73
    CONSTANT	shift  75
    STRING	shift  71
    SIZEOF	shift  76
    ALIGNOF	shift  77
    SELECTOR	shift  78
    ENCODE	shift  79
    '&' 	shift  80
    '+' 	shift  81
    '-' 	shift  82
    '*' 	shift  83
    PLUSPLUS	shift  84
    MINUSMINUS	shift  85
    '(' 	shift  86
    '[' 	shift  87
    '~' 	shift  88
    '!' 	shift  89
    unop	shift  90
    expr	shift  643
    nonnull_exprlist	shift  92
    unary_expr	shift  93
    cast_expr	shift  94
    expr_no_commas	shift  95
    primary	shift  96
    string	shift  97
    objcmessageexpr	shift  102
    objcselectorexpr	shift  103
    objcencodeexpr	shift  104



state 585

    stmt  ->  CASE expr . ':' @26 stmt   (254)

    ':' 	shift  644



state 586

    stmt  ->  DEFAULT ':' . @27 stmt   (256)

    @27 	shift  645

    $default	reduce  255  (@27)



state 587

    stmt  ->  BREAK ';' .   (257)

    $default	reduce  257  (stmt)



state 588

    stmt  ->  CONTINUE ';' .   (258)

    $default	reduce  258  (stmt)



state 589

    stmt  ->  RETURN ';' .   (259)

    $default	reduce  259  (stmt)



state 590

    stmt  ->  RETURN expr . ';'   (260)

    ';' 	shift  646



state 591

    stmt  ->  GOTO identifier . ';'   (265)

    ';' 	shift  647



state 592

    maybe_type_qual  ->  TYPE_QUAL .   (270)

    $default	reduce  270  (maybe_type_qual)



state 593

    stmt  ->  ASM maybe_type_qual . '(' string ')' ';'   (261)
    stmt  ->  ASM maybe_type_qual . '(' string ':' asm_operands ')' ';'   (262)
    stmt  ->  ASM maybe_type_qual . '(' string ':' asm_operands ':' asm_operands ')' ';'   (263)
    stmt  ->  ASM maybe_type_qual . '(' string ':' asm_operands ':' asm_operands ':' asm_clobbers ')' ';'   (264)

    '(' 	shift  648



state 594

    stmt  ->  identifier ':' . @28 stmt   (267)

    @28 	shift  649

    $default	reduce  266  (@28)



state 595

    stmt  ->  expr ';' .   (237)

    $default	reduce  237  (stmt)



state 596

    stmts  ->  stmts . stmt   (222)
    stmts  ->  stmts . errstmt   (223)
    xstmts  ->  stmts .   (225)

    error	shift  262
    IDENTIFIER	shift  501
    TYPENAME	shift  36
    CONSTANT	shift  75
    STRING	shift  71
    SIZEOF	shift  76
    IF  	shift  503
    WHILE	shift  504
    DO  	shift  505
    FOR 	shift  506
    SWITCH	shift  507
    CASE	shift  508
    DEFAULT	shift  509
    BREAK	shift  510
    CONTINUE	shift  511
    RETURN	shift  512
    GOTO	shift  513
    ASM 	shift  514
    ALIGNOF	shift  77
    SELECTOR	shift  78
    ENCODE	shift  79
    CLASSNAME	shift  37
    '&' 	shift  80
    '+' 	shift  81
    '-' 	shift  82
    '*' 	shift  83
    PLUSPLUS	shift  84
    MINUSMINUS	shift  85
    '(' 	shift  86
    '[' 	shift  87
    ';' 	shift  516
    '~' 	shift  88
    '!' 	shift  89
    '{' 	shift  304
    identifier	shift  517
    unop	shift  90
    expr	shift  518
    nonnull_exprlist	shift  92
    unary_expr	shift  93
    cast_expr	shift  94
    expr_no_commas	shift  95
    primary	shift  96
    string	shift  97
    errstmt	shift  599
    compstmt	shift  521
    simple_if	shift  522
    stmt	shift  600
    objcmessageexpr	shift  102
    objcselectorexpr	shift  103
    objcencodeexpr	shift  104

    '}' 	[reduce  225  (xstmts)]



state 597

    compstmt  ->  '{' pushlevel decls xstmts . '}'   (231)

    '}' 	shift  650



state 598

    compstmt  ->  '{' pushlevel stmts '}' .   (233)

    $default	reduce  233  (compstmt)



state 599

    stmts  ->  stmts errstmt .   (223)

    $default	reduce  223  (stmts)



state 600

    stmts  ->  stmts stmt .   (222)

    $default	reduce  222  (stmts)



state 601

    stmt  ->  simple_if ELSE . @17 stmt   (239)

    @17 	shift  651

    $default	reduce  238  (@17)



state 602

    init  ->  '{' '}' .   (145)

    $default	reduce  145  (init)



state 603

    init  ->  '{' initlist . '}'   (146)
    init  ->  '{' initlist . ',' '}'   (147)
    initlist  ->  initlist . ',' init   (150)

    '}' 	shift  652
    ',' 	shift  653



state 604

    initlist  ->  initlist ',' . init   (150)
    maybecomma  ->  ',' .   (184)

    error	shift  524
    IDENTIFIER	shift  73
    CONSTANT	shift  75
    STRING	shift  71
    SIZEOF	shift  76
    ALIGNOF	shift  77
    SELECTOR	shift  78
    ENCODE	shift  79
    '&' 	shift  80
    '+' 	shift  81
    '-' 	shift  82
    '*' 	shift  83
    PLUSPLUS	shift  84
    MINUSMINUS	shift  85
    '(' 	shift  86
    '[' 	shift  87
    '~' 	shift  88
    '!' 	shift  89
    '{' 	shift  525
    unop	shift  90
    unary_expr	shift  93
    cast_expr	shift  94
    expr_no_commas	shift  526
    primary	shift  96
    string	shift  97
    init	shift  654
    objcmessageexpr	shift  102
    objcselectorexpr	shift  103
    objcencodeexpr	shift  104

    '}' 	[reduce  184  (maybecomma)]



state 605

    cast_expr  ->  '(' typename ')' '{' initlist maybecomma . '}'   (55)

    '}' 	shift  655



state 606

    nonnull_exprlist  ->  nonnull_exprlist . ',' expr_no_commas   (45)
    keywordexpr  ->  nonnull_exprlist .   (421)

    ',' 	shift  200

    $default	reduce  421  (keywordexpr)



state 607

    keywordarg  ->  ':' keywordexpr .   (423)

    $default	reduce  423  (keywordarg)



state 608

    keywordarg  ->  selector ':' . keywordexpr   (422)

    IDENTIFIER	shift  73
    CONSTANT	shift  75
    STRING	shift  71
    SIZEOF	shift  76
    ALIGNOF	shift  77
    SELECTOR	shift  78
    ENCODE	shift  79
    '&' 	shift  80
    '+' 	shift  81
    '-' 	shift  82
    '*' 	shift  83
    PLUSPLUS	shift  84
    MINUSMINUS	shift  85
    '(' 	shift  86
    '[' 	shift  87
    '~' 	shift  88
    '!' 	shift  89
    unop	shift  90
    nonnull_exprlist	shift  606
    unary_expr	shift  93
    cast_expr	shift  94
    expr_no_commas	shift  95
    primary	shift  96
    string	shift  97
    keywordexpr	shift  656
    objcmessageexpr	shift  102
    objcselectorexpr	shift  103
    objcencodeexpr	shift  104



state 609

    objcmessageexpr  ->  '[' @54 receiver @55 messageargs ']' .   (428)

    $default	reduce  428  (objcmessageexpr)



state 610

    keywordarg  ->  selector . ':' keywordexpr   (422)

    ':' 	shift  608



state 611

    keywordarglist  ->  keywordarglist keywordarg .   (420)

    $default	reduce  420  (keywordarglist)



state 612

    classdef  ->  INTERFACE identifier ':' identifier '{' @34 ivar_decl_list '}' . @35 methodprotolist END   (311)

    @35 	shift  657

    $default	reduce  310  (@35)



state 613

    classdef  ->  INTERFACE identifier '(' identifier ')' @39 methodprotolist END .   (321)

    $default	reduce  321  (classdef)



state 614

    classdef  ->  INTERFACE identifier '{' @31 ivar_decl_list '}' @32 methodprotolist . END   (306)

    END 	shift  658



state 615

    ivar_decl_list  ->  ivar_decls PUBLIC @40 ivar_decls .   (324)
    ivar_decls  ->  ivar_decls . ivar_decl ';'   (327)
    ivar_decls  ->  ivar_decls . ';'   (328)

    error	shift  441
    TYPENAME	shift  5
    TYPESPEC	shift  7
    TYPE_QUAL	shift  74
    ENUM	shift  9
    STRUCT	shift  10
    UNION	shift  11
    TYPEOF	shift  13
    CLASSNAME	shift  17
    ';' 	shift  443
    typed_typespecs	shift  444
    typespec	shift  99
    structsp	shift  28
    nonempty_type_quals	shift  445
    ivar_decl	shift  446

    '}' 	reduce  324  (ivar_decl_list)



state 616

    ivar_declarator  ->  ':' . expr_no_commas   (337)

    IDENTIFIER	shift  73
    CONSTANT	shift  75
    STRING	shift  71
    SIZEOF	shift  76
    ALIGNOF	shift  77
    SELECTOR	shift  78
    ENCODE	shift  79
    '&' 	shift  80
    '+' 	shift  81
    '-' 	shift  82
    '*' 	shift  83
    PLUSPLUS	shift  84
    MINUSMINUS	shift  85
    '(' 	shift  86
    '[' 	shift  87
    '~' 	shift  88
    '!' 	shift  89
    unop	shift  90
    unary_expr	shift  93
    cast_expr	shift  94
    expr_no_commas	shift  659
    primary	shift  96
    string	shift  97
    objcmessageexpr	shift  102
    objcselectorexpr	shift  103
    objcencodeexpr	shift  104



state 617

    ivar_declarator  ->  declarator .   (335)
    ivar_declarator  ->  declarator . ':' expr_no_commas   (336)

    ':' 	shift  660

    $default	reduce  335  (ivar_declarator)



state 618

    ivar_decl  ->  typed_typespecs setspecs ivars .   (329)
    ivars  ->  ivars . ',' ivar_declarator   (334)

    ',' 	shift  661

    $default	reduce  329  (ivar_decl)



state 619

    ivars  ->  ivar_declarator .   (333)

    $default	reduce  333  (ivars)



state 620

    ivar_decl  ->  nonempty_type_quals setspecs ivars .   (330)
    ivars  ->  ivars . ',' ivar_declarator   (334)

    ',' 	shift  661

    $default	reduce  330  (ivar_decl)



state 621

    methodproto  ->  '+' @49 methoddecl @50 . semi_or_error   (358)

    error	shift  662
    ';' 	shift  663
    semi_or_error	shift  664



state 622

    methodproto  ->  '-' @51 methoddecl @52 . semi_or_error   (361)

    error	shift  662
    ';' 	shift  663
    semi_or_error	shift  665



state 623

    classdef  ->  IMPLEMENTATION identifier ':' identifier '{' @38 ivar_decl_list '}' .   (318)

    $default	reduce  318  (classdef)



state 624

    parm_declarator  ->  parm_declarator . '(' parmlist_or_identifiers   (159)
    parm_declarator  ->  parm_declarator . '[' expr ']'   (160)
    parm_declarator  ->  parm_declarator . '[' ']'   (161)
    myparm  ->  parm_declarator .   (379)

    '(' 	shift  561
    '[' 	shift  562

    $default	reduce  379  (myparm)



state 625

    notype_declarator  ->  notype_declarator . '(' parmlist_or_identifiers   (164)
    notype_declarator  ->  notype_declarator . '[' expr ']'   (167)
    notype_declarator  ->  notype_declarator . '[' ']'   (168)
    myparm  ->  notype_declarator .   (380)

    '(' 	shift  150
    '[' 	shift  151

    $default	reduce  380  (myparm)



state 626

    myparm  ->  absdcl .   (381)

    $default	reduce  381  (myparm)



state 627

    mydecl  ->  typed_declspecs setspecs myparms . ';'   (374)
    myparms  ->  myparms . ',' myparm   (378)

    ';' 	shift  666
    ',' 	shift  667



state 628

    myparms  ->  myparm .   (377)

    $default	reduce  377  (myparms)



state 629

    keyworddecl  ->  selector ':' '(' typename ')' identifier .   (413)

    $default	reduce  413  (keyworddecl)



state 630

    parm_declarator  ->  parm_declarator . '(' parmlist_or_identifiers   (159)
    parm_declarator  ->  parm_declarator . '[' expr ']'   (160)
    parm_declarator  ->  parm_declarator . '[' ']'   (161)
    parm_declarator  ->  '*' type_quals parm_declarator .   (162)

    '(' 	shift  561
    '[' 	shift  562

    $default	reduce  162  (parm_declarator)



state 631

    parm_declarator  ->  parm_declarator '(' parmlist_or_identifiers .   (159)

    $default	reduce  159  (parm_declarator)



state 632

    parm_declarator  ->  parm_declarator '[' ']' .   (161)

    $default	reduce  161  (parm_declarator)



state 633

    parm_declarator  ->  parm_declarator '[' expr . ']'   (160)

    ']' 	shift  668



state 634

    attrib  ->  IDENTIFIER '(' . CONSTANT ')'   (142)
    attrib  ->  IDENTIFIER '(' . identifiers ')'   (143)

    IDENTIFIER	shift  372
    CONSTANT	shift  669
    identifiers	shift  670



state 635

    maybe_attribute  ->  ATTRIBUTE '(' '(' attribute_list ')' . ')'   (138)

    ')' 	shift  671



state 636

    attribute_list  ->  attribute_list ',' . attrib   (140)

    IDENTIFIER	shift  570
    attrib	shift  672



state 637

    initdcl  ->  declarator maybeasm maybe_attribute '=' @10 init .   (132)

    $default	reduce  132  (initdcl)



state 638

    component_declarator  ->  declarator ':' expr_no_commas maybe_attribute .   (198)

    $default	reduce  198  (component_declarator)



state 639

    simple_if  ->  IF '(' expr . ')' @16 stmt   (235)

    ')' 	shift  673



state 640

    stmt  ->  WHILE @18 '(' . expr ')' @19 stmt   (243)

    IDENTIFIER	shift  73
    CONSTANT	shift  75
    STRING	shift  71
    SIZEOF	shift  76
    ALIGNOF	shift  77
    SELECTOR	shift  78
    ENCODE	shift  79
    '&' 	shift  80
    '+' 	shift  81
    '-' 	shift  82
    '*' 	shift  83
    PLUSPLUS	shift  84
    MINUSMINUS	shift  85
    '(' 	shift  86
    '[' 	shift  87
    '~' 	shift  88
    '!' 	shift  89
    unop	shift  90
    expr	shift  674
    nonnull_exprlist	shift  92
    unary_expr	shift  93
    cast_expr	shift  94
    expr_no_commas	shift  95
    primary	shift  96
    string	shift  97
    objcmessageexpr	shift  102
    objcselectorexpr	shift  103
    objcencodeexpr	shift  104



state 641

    stmt  ->  DO @20 stmt . WHILE @21 '(' expr ')' ';'   (246)

    WHILE	shift  675



state 642

    stmt  ->  FOR '(' xexpr . ';' @22 xexpr ';' @23 xexpr ')' @24 stmt   (250)

    ';' 	shift  676



state 643

    stmt  ->  SWITCH '(' expr . ')' @25 stmt   (252)

    ')' 	shift  677



state 644

    stmt  ->  CASE expr ':' . @26 stmt   (254)

    @26 	shift  678

    $default	reduce  253  (@26)



state 645

    stmt  ->  DEFAULT ':' @27 . stmt   (256)

    IDENTIFIER	shift  501
    TYPENAME	shift  36
    CONSTANT	shift  75
    STRING	shift  71
    SIZEOF	shift  76
    IF  	shift  503
    WHILE	shift  504
    DO  	shift  505
    FOR 	shift  506
    SWITCH	shift  507
    CASE	shift  508
    DEFAULT	shift  509
    BREAK	shift  510
    CONTINUE	shift  511
    RETURN	shift  512
    GOTO	shift  513
    ASM 	shift  514
    ALIGNOF	shift  77
    SELECTOR	shift  78
    ENCODE	shift  79
    CLASSNAME	shift  37
    '&' 	shift  80
    '+' 	shift  81
    '-' 	shift  82
    '*' 	shift  83
    PLUSPLUS	shift  84
    MINUSMINUS	shift  85
    '(' 	shift  86
    '[' 	shift  87
    ';' 	shift  516
    '~' 	shift  88
    '!' 	shift  89
    '{' 	shift  304
    identifier	shift  517
    unop	shift  90
    expr	shift  518
    nonnull_exprlist	shift  92
    unary_expr	shift  93
    cast_expr	shift  94
    expr_no_commas	shift  95
    primary	shift  96
    string	shift  97
    compstmt	shift  521
    simple_if	shift  522
    stmt	shift  679
    objcmessageexpr	shift  102
    objcselectorexpr	shift  103
    objcencodeexpr	shift  104



state 646

    stmt  ->  RETURN expr ';' .   (260)

    $default	reduce  260  (stmt)



state 647

    stmt  ->  GOTO identifier ';' .   (265)

    $default	reduce  265  (stmt)



state 648

    stmt  ->  ASM maybe_type_qual '(' . string ')' ';'   (261)
    stmt  ->  ASM maybe_type_qual '(' . string ':' asm_operands ')' ';'   (262)
    stmt  ->  ASM maybe_type_qual '(' . string ':' asm_operands ':' asm_operands ')' ';'   (263)
    stmt  ->  ASM maybe_type_qual '(' . string ':' asm_operands ':' asm_operands ':' asm_clobbers ')' ';'   (264)

    STRING	shift  71
    string	shift  680



state 649

    stmt  ->  identifier ':' @28 . stmt   (267)

    IDENTIFIER	shift  501
    TYPENAME	shift  36
    CONSTANT	shift  75
    STRING	shift  71
    SIZEOF	shift  76
    IF  	shift  503
    WHILE	shift  504
    DO  	shift  505
    FOR 	shift  506
    SWITCH	shift  507
    CASE	shift  508
    DEFAULT	shift  509
    BREAK	shift  510
    CONTINUE	shift  511
    RETURN	shift  512
    GOTO	shift  513
    ASM 	shift  514
    ALIGNOF	shift  77
    SELECTOR	shift  78
    ENCODE	shift  79
    CLASSNAME	shift  37
    '&' 	shift  80
    '+' 	shift  81
    '-' 	shift  82
    '*' 	shift  83
    PLUSPLUS	shift  84
    MINUSMINUS	shift  85
    '(' 	shift  86
    '[' 	shift  87
    ';' 	shift  516
    '~' 	shift  88
    '!' 	shift  89
    '{' 	shift  304
    identifier	shift  517
    unop	shift  90
    expr	shift  518
    nonnull_exprlist	shift  92
    unary_expr	shift  93
    cast_expr	shift  94
    expr_no_commas	shift  95
    primary	shift  96
    string	shift  97
    compstmt	shift  521
    simple_if	shift  522
    stmt	shift  681
    objcmessageexpr	shift  102
    objcselectorexpr	shift  103
    objcencodeexpr	shift  104



state 650

    compstmt  ->  '{' pushlevel decls xstmts '}' .   (231)

    $default	reduce  231  (compstmt)



state 651

    stmt  ->  simple_if ELSE @17 . stmt   (239)

    IDENTIFIER	shift  501
    TYPENAME	shift  36
    CONSTANT	shift  75
    STRING	shift  71
    SIZEOF	shift  76
    IF  	shift  503
    WHILE	shift  504
    DO  	shift  505
    FOR 	shift  506
    SWITCH	shift  507
    CASE	shift  508
    DEFAULT	shift  509
    BREAK	shift  510
    CONTINUE	shift  511
    RETURN	shift  512
    GOTO	shift  513
    ASM 	shift  514
    ALIGNOF	shift  77
    SELECTOR	shift  78
    ENCODE	shift  79
    CLASSNAME	shift  37
    '&' 	shift  80
    '+' 	shift  81
    '-' 	shift  82
    '*' 	shift  83
    PLUSPLUS	shift  84
    MINUSMINUS	shift  85
    '(' 	shift  86
    '[' 	shift  87
    ';' 	shift  516
    '~' 	shift  88
    '!' 	shift  89
    '{' 	shift  304
    identifier	shift  517
    unop	shift  90
    expr	shift  518
    nonnull_exprlist	shift  92
    unary_expr	shift  93
    cast_expr	shift  94
    expr_no_commas	shift  95
    primary	shift  96
    string	shift  97
    compstmt	shift  521
    simple_if	shift  522
    stmt	shift  682
    objcmessageexpr	shift  102
    objcselectorexpr	shift  103
    objcencodeexpr	shift  104



state 652

    init  ->  '{' initlist '}' .   (146)

    $default	reduce  146  (init)



state 653

    init  ->  '{' initlist ',' . '}'   (147)
    initlist  ->  initlist ',' . init   (150)

    error	shift  524
    IDENTIFIER	shift  73
    CONSTANT	shift  75
    STRING	shift  71
    SIZEOF	shift  76
    ALIGNOF	shift  77
    SELECTOR	shift  78
    ENCODE	shift  79
    '&' 	shift  80
    '+' 	shift  81
    '-' 	shift  82
    '*' 	shift  83
    PLUSPLUS	shift  84
    MINUSMINUS	shift  85
    '(' 	shift  86
    '[' 	shift  87
    '}' 	shift  683
    '~' 	shift  88
    '!' 	shift  89
    '{' 	shift  525
    unop	shift  90
    unary_expr	shift  93
    cast_expr	shift  94
    expr_no_commas	shift  526
    primary	shift  96
    string	shift  97
    init	shift  654
    objcmessageexpr	shift  102
    objcselectorexpr	shift  103
    objcencodeexpr	shift  104



state 654

    initlist  ->  initlist ',' init .   (150)

    $default	reduce  150  (initlist)



state 655

    cast_expr  ->  '(' typename ')' '{' initlist maybecomma '}' .   (55)

    $default	reduce  55  (cast_expr)



state 656

    keywordarg  ->  selector ':' keywordexpr .   (422)

    $default	reduce  422  (keywordarg)



state 657

    classdef  ->  INTERFACE identifier ':' identifier '{' @34 ivar_decl_list '}' @35 . methodprotolist END   (311)

    methodprotolist	shift  684
    @47 	shift  238

    END 	reduce  346  (methodprotolist)
    $default	reduce  347  (@47)



state 658

    classdef  ->  INTERFACE identifier '{' @31 ivar_decl_list '}' @32 methodprotolist END .   (306)

    $default	reduce  306  (classdef)



state 659

    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (57)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (58)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (59)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (60)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (61)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (62)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (63)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (64)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (65)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (66)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (67)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (68)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (69)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (70)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (71)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (72)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (73)
    ivar_declarator  ->  ':' expr_no_commas .   (337)

    ASSIGN	shift  201
    '=' 	shift  202
    '?' 	shift  203
    OROR	shift  204
    ANDAND	shift  205
    '|' 	shift  206
    '^' 	shift  207
    '&' 	shift  208
    EQCOMPARE	shift  209
    ARITHCOMPARE	shift  210
    LSHIFT	shift  211
    RSHIFT	shift  212
    '+' 	shift  213
    '-' 	shift  214
    '*' 	shift  215
    '/' 	shift  216
    '%' 	shift  217

    $default	reduce  337  (ivar_declarator)



state 660

    ivar_declarator  ->  declarator ':' . expr_no_commas   (336)

    IDENTIFIER	shift  73
    CONSTANT	shift  75
    STRING	shift  71
    SIZEOF	shift  76
    ALIGNOF	shift  77
    SELECTOR	shift  78
    ENCODE	shift  79
    '&' 	shift  80
    '+' 	shift  81
    '-' 	shift  82
    '*' 	shift  83
    PLUSPLUS	shift  84
    MINUSMINUS	shift  85
    '(' 	shift  86
    '[' 	shift  87
    '~' 	shift  88
    '!' 	shift  89
    unop	shift  90
    unary_expr	shift  93
    cast_expr	shift  94
    expr_no_commas	shift  685
    primary	shift  96
    string	shift  97
    objcmessageexpr	shift  102
    objcselectorexpr	shift  103
    objcencodeexpr	shift  104



state 661

    ivars  ->  ivars ',' . ivar_declarator   (334)

    IDENTIFIER	shift  50
    TYPENAME	shift  154
    ':' 	shift  616
    '*' 	shift  155
    '(' 	shift  156
    declarator	shift  617
    after_type_declarator	shift  160
    notype_declarator	shift  161
    ivar_declarator	shift  686



state 662

    semi_or_error  ->  error .   (355)

    $default	reduce  355  (semi_or_error)



state 663

    semi_or_error  ->  ';' .   (354)

    $default	reduce  354  (semi_or_error)



state 664

    methodproto  ->  '+' @49 methoddecl @50 semi_or_error .   (358)

    $default	reduce  358  (methodproto)



state 665

    methodproto  ->  '-' @51 methoddecl @52 semi_or_error .   (361)

    $default	reduce  361  (methodproto)



state 666

    mydecl  ->  typed_declspecs setspecs myparms ';' .   (374)

    $default	reduce  374  (mydecl)



state 667

    myparms  ->  myparms ',' . myparm   (378)

    IDENTIFIER	shift  50
    TYPENAME	shift  471
    '*' 	shift  472
    '(' 	shift  473
    '[' 	shift  226
    parm_declarator	shift  624
    notype_declarator	shift  625
    absdcl	shift  626
    absdcl1	shift  228
    myparm	shift  687

    $default	reduce  206  (absdcl)



state 668

    parm_declarator  ->  parm_declarator '[' expr ']' .   (160)

    $default	reduce  160  (parm_declarator)



state 669

    attrib  ->  IDENTIFIER '(' CONSTANT . ')'   (142)

    ')' 	shift  688



state 670

    attrib  ->  IDENTIFIER '(' identifiers . ')'   (143)
    identifiers  ->  identifiers . ',' IDENTIFIER   (300)

    ')' 	shift  689
    ',' 	shift  483



state 671

    maybe_attribute  ->  ATTRIBUTE '(' '(' attribute_list ')' ')' .   (138)

    $default	reduce  138  (maybe_attribute)



state 672

    attribute_list  ->  attribute_list ',' attrib .   (140)

    $default	reduce  140  (attribute_list)



state 673

    simple_if  ->  IF '(' expr ')' . @16 stmt   (235)

    @16 	shift  690

    $default	reduce  234  (@16)



state 674

    stmt  ->  WHILE @18 '(' expr . ')' @19 stmt   (243)

    ')' 	shift  691



state 675

    stmt  ->  DO @20 stmt WHILE . @21 '(' expr ')' ';'   (246)

    @21 	shift  692

    $default	reduce  245  (@21)



state 676

    stmt  ->  FOR '(' xexpr ';' . @22 xexpr ';' @23 xexpr ')' @24 stmt   (250)

    @22 	shift  693

    $default	reduce  247  (@22)



state 677

    stmt  ->  SWITCH '(' expr ')' . @25 stmt   (252)

    @25 	shift  694

    $default	reduce  251  (@25)



state 678

    stmt  ->  CASE expr ':' @26 . stmt   (254)

    IDENTIFIER	shift  501
    TYPENAME	shift  36
    CONSTANT	shift  75
    STRING	shift  71
    SIZEOF	shift  76
    IF  	shift  503
    WHILE	shift  504
    DO  	shift  505
    FOR 	shift  506
    SWITCH	shift  507
    CASE	shift  508
    DEFAULT	shift  509
    BREAK	shift  510
    CONTINUE	shift  511
    RETURN	shift  512
    GOTO	shift  513
    ASM 	shift  514
    ALIGNOF	shift  77
    SELECTOR	shift  78
    ENCODE	shift  79
    CLASSNAME	shift  37
    '&' 	shift  80
    '+' 	shift  81
    '-' 	shift  82
    '*' 	shift  83
    PLUSPLUS	shift  84
    MINUSMINUS	shift  85
    '(' 	shift  86
    '[' 	shift  87
    ';' 	shift  516
    '~' 	shift  88
    '!' 	shift  89
    '{' 	shift  304
    identifier	shift  517
    unop	shift  90
    expr	shift  518
    nonnull_exprlist	shift  92
    unary_expr	shift  93
    cast_expr	shift  94
    expr_no_commas	shift  95
    primary	shift  96
    string	shift  97
    compstmt	shift  521
    simple_if	shift  522
    stmt	shift  695
    objcmessageexpr	shift  102
    objcselectorexpr	shift  103
    objcencodeexpr	shift  104



state 679

    stmt  ->  DEFAULT ':' @27 stmt .   (256)

    $default	reduce  256  (stmt)



state 680

    string  ->  string . STRING   (91)
    stmt  ->  ASM maybe_type_qual '(' string . ')' ';'   (261)
    stmt  ->  ASM maybe_type_qual '(' string . ':' asm_operands ')' ';'   (262)
    stmt  ->  ASM maybe_type_qual '(' string . ':' asm_operands ':' asm_operands ')' ';'   (263)
    stmt  ->  ASM maybe_type_qual '(' string . ':' asm_operands ':' asm_operands ':' asm_clobbers ')' ';'   (264)

    STRING	shift  184
    ':' 	shift  696
    ')' 	shift  697



state 681

    stmt  ->  identifier ':' @28 stmt .   (267)

    $default	reduce  267  (stmt)



state 682

    stmt  ->  simple_if ELSE @17 stmt .   (239)

    $default	reduce  239  (stmt)



state 683

    init  ->  '{' initlist ',' '}' .   (147)

    $default	reduce  147  (init)



state 684

    classdef  ->  INTERFACE identifier ':' identifier '{' @34 ivar_decl_list '}' @35 methodprotolist . END   (311)

    END 	shift  698



state 685

    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (57)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (58)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (59)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (60)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (61)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (62)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (63)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (64)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (65)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (66)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (67)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (68)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (69)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (70)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (71)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (72)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (73)
    ivar_declarator  ->  declarator ':' expr_no_commas .   (336)

    ASSIGN	shift  201
    '=' 	shift  202
    '?' 	shift  203
    OROR	shift  204
    ANDAND	shift  205
    '|' 	shift  206
    '^' 	shift  207
    '&' 	shift  208
    EQCOMPARE	shift  209
    ARITHCOMPARE	shift  210
    LSHIFT	shift  211
    RSHIFT	shift  212
    '+' 	shift  213
    '-' 	shift  214
    '*' 	shift  215
    '/' 	shift  216
    '%' 	shift  217

    $default	reduce  336  (ivar_declarator)



state 686

    ivars  ->  ivars ',' ivar_declarator .   (334)

    $default	reduce  334  (ivars)



state 687

    myparms  ->  myparms ',' myparm .   (378)

    $default	reduce  378  (myparms)



state 688

    attrib  ->  IDENTIFIER '(' CONSTANT ')' .   (142)

    $default	reduce  142  (attrib)



state 689

    attrib  ->  IDENTIFIER '(' identifiers ')' .   (143)

    $default	reduce  143  (attrib)



state 690

    simple_if  ->  IF '(' expr ')' @16 . stmt   (235)

    IDENTIFIER	shift  501
    TYPENAME	shift  36
    CONSTANT	shift  75
    STRING	shift  71
    SIZEOF	shift  76
    IF  	shift  503
    WHILE	shift  504
    DO  	shift  505
    FOR 	shift  506
    SWITCH	shift  507
    CASE	shift  508
    DEFAULT	shift  509
    BREAK	shift  510
    CONTINUE	shift  511
    RETURN	shift  512
    GOTO	shift  513
    ASM 	shift  514
    ALIGNOF	shift  77
    SELECTOR	shift  78
    ENCODE	shift  79
    CLASSNAME	shift  37
    '&' 	shift  80
    '+' 	shift  81
    '-' 	shift  82
    '*' 	shift  83
    PLUSPLUS	shift  84
    MINUSMINUS	shift  85
    '(' 	shift  86
    '[' 	shift  87
    ';' 	shift  516
    '~' 	shift  88
    '!' 	shift  89
    '{' 	shift  304
    identifier	shift  517
    unop	shift  90
    expr	shift  518
    nonnull_exprlist	shift  92
    unary_expr	shift  93
    cast_expr	shift  94
    expr_no_commas	shift  95
    primary	shift  96
    string	shift  97
    compstmt	shift  521
    simple_if	shift  522
    stmt	shift  699
    objcmessageexpr	shift  102
    objcselectorexpr	shift  103
    objcencodeexpr	shift  104



state 691

    stmt  ->  WHILE @18 '(' expr ')' . @19 stmt   (243)

    @19 	shift  700

    $default	reduce  242  (@19)



state 692

    stmt  ->  DO @20 stmt WHILE @21 . '(' expr ')' ';'   (246)

    '(' 	shift  701



state 693

    stmt  ->  FOR '(' xexpr ';' @22 . xexpr ';' @23 xexpr ')' @24 stmt   (250)

    IDENTIFIER	shift  73
    CONSTANT	shift  75
    STRING	shift  71
    SIZEOF	shift  76
    ALIGNOF	shift  77
    SELECTOR	shift  78
    ENCODE	shift  79
    '&' 	shift  80
    '+' 	shift  81
    '-' 	shift  82
    '*' 	shift  83
    PLUSPLUS	shift  84
    MINUSMINUS	shift  85
    '(' 	shift  86
    '[' 	shift  87
    '~' 	shift  88
    '!' 	shift  89
    unop	shift  90
    expr	shift  313
    nonnull_exprlist	shift  92
    unary_expr	shift  93
    cast_expr	shift  94
    expr_no_commas	shift  95
    primary	shift  96
    string	shift  97
    xexpr	shift  702
    objcmessageexpr	shift  102
    objcselectorexpr	shift  103
    objcencodeexpr	shift  104

    $default	reduce  271  (xexpr)



state 694

    stmt  ->  SWITCH '(' expr ')' @25 . stmt   (252)

    IDENTIFIER	shift  501
    TYPENAME	shift  36
    CONSTANT	shift  75
    STRING	shift  71
    SIZEOF	shift  76
    IF  	shift  503
    WHILE	shift  504
    DO  	shift  505
    FOR 	shift  506
    SWITCH	shift  507
    CASE	shift  508
    DEFAULT	shift  509
    BREAK	shift  510
    CONTINUE	shift  511
    RETURN	shift  512
    GOTO	shift  513
    ASM 	shift  514
    ALIGNOF	shift  77
    SELECTOR	shift  78
    ENCODE	shift  79
    CLASSNAME	shift  37
    '&' 	shift  80
    '+' 	shift  81
    '-' 	shift  82
    '*' 	shift  83
    PLUSPLUS	shift  84
    MINUSMINUS	shift  85
    '(' 	shift  86
    '[' 	shift  87
    ';' 	shift  516
    '~' 	shift  88
    '!' 	shift  89
    '{' 	shift  304
    identifier	shift  517
    unop	shift  90
    expr	shift  518
    nonnull_exprlist	shift  92
    unary_expr	shift  93
    cast_expr	shift  94
    expr_no_commas	shift  95
    primary	shift  96
    string	shift  97
    compstmt	shift  521
    simple_if	shift  522
    stmt	shift  703
    objcmessageexpr	shift  102
    objcselectorexpr	shift  103
    objcencodeexpr	shift  104



state 695

    stmt  ->  CASE expr ':' @26 stmt .   (254)

    $default	reduce  254  (stmt)



state 696

    stmt  ->  ASM maybe_type_qual '(' string ':' . asm_operands ')' ';'   (262)
    stmt  ->  ASM maybe_type_qual '(' string ':' . asm_operands ':' asm_operands ')' ';'   (263)
    stmt  ->  ASM maybe_type_qual '(' string ':' . asm_operands ':' asm_operands ':' asm_clobbers ')' ';'   (264)

    STRING	shift  704
    asm_operands	shift  705
    nonnull_asm_operands	shift  706
    asm_operand	shift  707

    $default	reduce  273  (asm_operands)



state 697

    stmt  ->  ASM maybe_type_qual '(' string ')' . ';'   (261)

    ';' 	shift  708



state 698

    classdef  ->  INTERFACE identifier ':' identifier '{' @34 ivar_decl_list '}' @35 methodprotolist END .   (311)

    $default	reduce  311  (classdef)



state 699

    simple_if  ->  IF '(' expr ')' @16 stmt .   (235)

    $default	reduce  235  (simple_if)



state 700

    stmt  ->  WHILE @18 '(' expr ')' @19 . stmt   (243)

    IDENTIFIER	shift  501
    TYPENAME	shift  36
    CONSTANT	shift  75
    STRING	shift  71
    SIZEOF	shift  76
    IF  	shift  503
    WHILE	shift  504
    DO  	shift  505
    FOR 	shift  506
    SWITCH	shift  507
    CASE	shift  508
    DEFAULT	shift  509
    BREAK	shift  510
    CONTINUE	shift  511
    RETURN	shift  512
    GOTO	shift  513
    ASM 	shift  514
    ALIGNOF	shift  77
    SELECTOR	shift  78
    ENCODE	shift  79
    CLASSNAME	shift  37
    '&' 	shift  80
    '+' 	shift  81
    '-' 	shift  82
    '*' 	shift  83
    PLUSPLUS	shift  84
    MINUSMINUS	shift  85
    '(' 	shift  86
    '[' 	shift  87
    ';' 	shift  516
    '~' 	shift  88
    '!' 	shift  89
    '{' 	shift  304
    identifier	shift  517
    unop	shift  90
    expr	shift  518
    nonnull_exprlist	shift  92
    unary_expr	shift  93
    cast_expr	shift  94
    expr_no_commas	shift  95
    primary	shift  96
    string	shift  97
    compstmt	shift  521
    simple_if	shift  522
    stmt	shift  709
    objcmessageexpr	shift  102
    objcselectorexpr	shift  103
    objcencodeexpr	shift  104



state 701

    stmt  ->  DO @20 stmt WHILE @21 '(' . expr ')' ';'   (246)

    IDENTIFIER	shift  73
    CONSTANT	shift  75
    STRING	shift  71
    SIZEOF	shift  76
    ALIGNOF	shift  77
    SELECTOR	shift  78
    ENCODE	shift  79
    '&' 	shift  80
    '+' 	shift  81
    '-' 	shift  82
    '*' 	shift  83
    PLUSPLUS	shift  84
    MINUSMINUS	shift  85
    '(' 	shift  86
    '[' 	shift  87
    '~' 	shift  88
    '!' 	shift  89
    unop	shift  90
    expr	shift  710
    nonnull_exprlist	shift  92
    unary_expr	shift  93
    cast_expr	shift  94
    expr_no_commas	shift  95
    primary	shift  96
    string	shift  97
    objcmessageexpr	shift  102
    objcselectorexpr	shift  103
    objcencodeexpr	shift  104



state 702

    stmt  ->  FOR '(' xexpr ';' @22 xexpr . ';' @23 xexpr ')' @24 stmt   (250)

    ';' 	shift  711



state 703

    stmt  ->  SWITCH '(' expr ')' @25 stmt .   (252)

    $default	reduce  252  (stmt)



state 704

    asm_operand  ->  STRING . '(' expr ')'   (277)

    '(' 	shift  712



state 705

    stmt  ->  ASM maybe_type_qual '(' string ':' asm_operands . ')' ';'   (262)
    stmt  ->  ASM maybe_type_qual '(' string ':' asm_operands . ':' asm_operands ')' ';'   (263)
    stmt  ->  ASM maybe_type_qual '(' string ':' asm_operands . ':' asm_operands ':' asm_clobbers ')' ';'   (264)

    ':' 	shift  713
    ')' 	shift  714



state 706

    asm_operands  ->  nonnull_asm_operands .   (274)
    nonnull_asm_operands  ->  nonnull_asm_operands . ',' asm_operand   (276)

    ',' 	shift  715

    $default	reduce  274  (asm_operands)



state 707

    nonnull_asm_operands  ->  asm_operand .   (275)

    $default	reduce  275  (nonnull_asm_operands)



state 708

    stmt  ->  ASM maybe_type_qual '(' string ')' ';' .   (261)

    $default	reduce  261  (stmt)



state 709

    stmt  ->  WHILE @18 '(' expr ')' @19 stmt .   (243)

    $default	reduce  243  (stmt)



state 710

    stmt  ->  DO @20 stmt WHILE @21 '(' expr . ')' ';'   (246)

    ')' 	shift  716



state 711

    stmt  ->  FOR '(' xexpr ';' @22 xexpr ';' . @23 xexpr ')' @24 stmt   (250)

    @23 	shift  717

    $default	reduce  248  (@23)



state 712

    asm_operand  ->  STRING '(' . expr ')'   (277)

    IDENTIFIER	shift  73
    CONSTANT	shift  75
    STRING	shift  71
    SIZEOF	shift  76
    ALIGNOF	shift  77
    SELECTOR	shift  78
    ENCODE	shift  79
    '&' 	shift  80
    '+' 	shift  81
    '-' 	shift  82
    '*' 	shift  83
    PLUSPLUS	shift  84
    MINUSMINUS	shift  85
    '(' 	shift  86
    '[' 	shift  87
    '~' 	shift  88
    '!' 	shift  89
    unop	shift  90
    expr	shift  718
    nonnull_exprlist	shift  92
    unary_expr	shift  93
    cast_expr	shift  94
    expr_no_commas	shift  95
    primary	shift  96
    string	shift  97
    objcmessageexpr	shift  102
    objcselectorexpr	shift  103
    objcencodeexpr	shift  104



state 713

    stmt  ->  ASM maybe_type_qual '(' string ':' asm_operands ':' . asm_operands ')' ';'   (263)
    stmt  ->  ASM maybe_type_qual '(' string ':' asm_operands ':' . asm_operands ':' asm_clobbers ')' ';'   (264)

    STRING	shift  704
    asm_operands	shift  719
    nonnull_asm_operands	shift  706
    asm_operand	shift  707

    $default	reduce  273  (asm_operands)



state 714

    stmt  ->  ASM maybe_type_qual '(' string ':' asm_operands ')' . ';'   (262)

    ';' 	shift  720



state 715

    nonnull_asm_operands  ->  nonnull_asm_operands ',' . asm_operand   (276)

    STRING	shift  704
    asm_operand	shift  721



state 716

    stmt  ->  DO @20 stmt WHILE @21 '(' expr ')' . ';'   (246)

    ';' 	shift  722



state 717

    stmt  ->  FOR '(' xexpr ';' @22 xexpr ';' @23 . xexpr ')' @24 stmt   (250)

    IDENTIFIER	shift  73
    CONSTANT	shift  75
    STRING	shift  71
    SIZEOF	shift  76
    ALIGNOF	shift  77
    SELECTOR	shift  78
    ENCODE	shift  79
    '&' 	shift  80
    '+' 	shift  81
    '-' 	shift  82
    '*' 	shift  83
    PLUSPLUS	shift  84
    MINUSMINUS	shift  85
    '(' 	shift  86
    '[' 	shift  87
    '~' 	shift  88
    '!' 	shift  89
    unop	shift  90
    expr	shift  313
    nonnull_exprlist	shift  92
    unary_expr	shift  93
    cast_expr	shift  94
    expr_no_commas	shift  95
    primary	shift  96
    string	shift  97
    xexpr	shift  723
    objcmessageexpr	shift  102
    objcselectorexpr	shift  103
    objcencodeexpr	shift  104

    $default	reduce  271  (xexpr)



state 718

    asm_operand  ->  STRING '(' expr . ')'   (277)

    ')' 	shift  724



state 719

    stmt  ->  ASM maybe_type_qual '(' string ':' asm_operands ':' asm_operands . ')' ';'   (263)
    stmt  ->  ASM maybe_type_qual '(' string ':' asm_operands ':' asm_operands . ':' asm_clobbers ')' ';'   (264)

    ':' 	shift  725
    ')' 	shift  726



state 720

    stmt  ->  ASM maybe_type_qual '(' string ':' asm_operands ')' ';' .   (262)

    $default	reduce  262  (stmt)



state 721

    nonnull_asm_operands  ->  nonnull_asm_operands ',' asm_operand .   (276)

    $default	reduce  276  (nonnull_asm_operands)



state 722

    stmt  ->  DO @20 stmt WHILE @21 '(' expr ')' ';' .   (246)

    $default	reduce  246  (stmt)



state 723

    stmt  ->  FOR '(' xexpr ';' @22 xexpr ';' @23 xexpr . ')' @24 stmt   (250)

    ')' 	shift  727



state 724

    asm_operand  ->  STRING '(' expr ')' .   (277)

    $default	reduce  277  (asm_operand)



state 725

    stmt  ->  ASM maybe_type_qual '(' string ':' asm_operands ':' asm_operands ':' . asm_clobbers ')' ';'   (264)

    STRING	shift  71
    string	shift  728
    asm_clobbers	shift  729



state 726

    stmt  ->  ASM maybe_type_qual '(' string ':' asm_operands ':' asm_operands ')' . ';'   (263)

    ';' 	shift  730



state 727

    stmt  ->  FOR '(' xexpr ';' @22 xexpr ';' @23 xexpr ')' . @24 stmt   (250)

    @24 	shift  731

    $default	reduce  249  (@24)



state 728

    string  ->  string . STRING   (91)
    asm_clobbers  ->  string .   (278)

    STRING	shift  184

    $default	reduce  278  (asm_clobbers)



state 729

    stmt  ->  ASM maybe_type_qual '(' string ':' asm_operands ':' asm_operands ':' asm_clobbers . ')' ';'   (264)
    asm_clobbers  ->  asm_clobbers . ',' string   (279)

    ')' 	shift  732
    ',' 	shift  733



state 730

    stmt  ->  ASM maybe_type_qual '(' string ':' asm_operands ':' asm_operands ')' ';' .   (263)

    $default	reduce  263  (stmt)



state 731

    stmt  ->  FOR '(' xexpr ';' @22 xexpr ';' @23 xexpr ')' @24 . stmt   (250)

    IDENTIFIER	shift  501
    TYPENAME	shift  36
    CONSTANT	shift  75
    STRING	shift  71
    SIZEOF	shift  76
    IF  	shift  503
    WHILE	shift  504
    DO  	shift  505
    FOR 	shift  506
    SWITCH	shift  507
    CASE	shift  508
    DEFAULT	shift  509
    BREAK	shift  510
    CONTINUE	shift  511
    RETURN	shift  512
    GOTO	shift  513
    ASM 	shift  514
    ALIGNOF	shift  77
    SELECTOR	shift  78
    ENCODE	shift  79
    CLASSNAME	shift  37
    '&' 	shift  80
    '+' 	shift  81
    '-' 	shift  82
    '*' 	shift  83
    PLUSPLUS	shift  84
    MINUSMINUS	shift  85
    '(' 	shift  86
    '[' 	shift  87
    ';' 	shift  516
    '~' 	shift  88
    '!' 	shift  89
    '{' 	shift  304
    identifier	shift  517
    unop	shift  90
    expr	shift  518
    nonnull_exprlist	shift  92
    unary_expr	shift  93
    cast_expr	shift  94
    expr_no_commas	shift  95
    primary	shift  96
    string	shift  97
    compstmt	shift  521
    simple_if	shift  522
    stmt	shift  734
    objcmessageexpr	shift  102
    objcselectorexpr	shift  103
    objcencodeexpr	shift  104



state 732

    stmt  ->  ASM maybe_type_qual '(' string ':' asm_operands ':' asm_operands ':' asm_clobbers ')' . ';'   (264)

    ';' 	shift  735



state 733

    asm_clobbers  ->  asm_clobbers ',' . string   (279)

    STRING	shift  71
    string	shift  736



state 734

    stmt  ->  FOR '(' xexpr ';' @22 xexpr ';' @23 xexpr ')' @24 stmt .   (250)

    $default	reduce  250  (stmt)



state 735

    stmt  ->  ASM maybe_type_qual '(' string ':' asm_operands ':' asm_operands ':' asm_clobbers ')' ';' .   (264)

    $default	reduce  264  (stmt)



state 736

    string  ->  string . STRING   (91)
    asm_clobbers  ->  asm_clobbers ',' string .   (279)

    STRING	shift  184

    $default	reduce  279  (asm_clobbers)



state 737

    $   	shift  738



state 738

    $   	shift  739



state 739

    NO ACTIONS
